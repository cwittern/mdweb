bash: ulimit: max user processes: cannot modify limit: Operation not permitted
pyenv-virtualenv: activate pyenvtest
(pyenvtest)Sun Oct 04 16:40:36 [15124]
  chris@mbp3a-2:~ % python
Python 2.7.10 (default, Sep 10 2015, 16:32:11) 
[GCC 4.2.1 Compatible Apple LLVM 6.0 (clang-600.0.57)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
>>> import requests
>>> url="https://raw.githubusercontent.com/kanripo/KR4j0034/_data/imglist/imginfo.cfg"
>>> r = requests.get(url)
>>> r.json()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/Users/chris/.pyenv/versions/pyenvtest/lib/python2.7/site-packages/requests/models.py", line 604, in json
    return json.loads(self.text or self.content)
  File "/Users/chris/.pyenv/versions/2.7.10/lib/python2.7/json/__init__.py", line 338, in loads
    return _default_decoder.decode(s)
  File "/Users/chris/.pyenv/versions/2.7.10/lib/python2.7/json/decoder.py", line 366, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/Users/chris/.pyenv/versions/2.7.10/lib/python2.7/json/decoder.py", line 384, in raw_decode
    raise ValueError("No JSON object could be decoded")
ValueError: No JSON object could be decoded
>>> r
<Response [200]>
>>> dir(r)
['__bool__', '__class__', '__delattr__', '__dict__', '__doc__', '__format__', '__getattribute__', '__hash__', '__init__', '__module__', '__new__', '__nonzero__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_content', '_content_consumed', 'apparent_encoding', 'close', 'connection', 'content', 'cookies', 'encoding', 'headers', 'history', 'iter_content', 'iter_lines', 'json', 'links', 'ok', 'raise_for_status', 'raw', 'reason', 'request', 'status_code', 'text', 'url']
>>> r.headers
{'content-length': '106', 'via': '1.1 varnish', 'x-cache': 'MISS', 'accept-ranges': 'bytes', 'expires': 'Sun, 04 Oct 2015 07:46:28 GMT', 'vary': 'Authorization,Accept-Encoding', 'x-served-by': 'cache-itm7427-ITM', 'date': 'Sun, 04 Oct 2015 07:41:28 GMT', 'access-control-allow-origin': '*', 'x-frame-options': 'deny', 'x-xss-protection': '1; mode=block', 'x-content-type-options': 'nosniff', 'content-security-policy': "default-src 'none'", 'content-encoding': 'gzip', 'strict-transport-security': 'max-age=31536000', 'connection': 'keep-alive', 'etag': '"a3f49381ffc864f1fc9de0c5f029d955b7ff89de"', 'x-cache-hits': '0', 'cache-control': 'max-age=300', 'source-age': '0', 'content-type': 'text/plain; charset=utf-8'}
>>> d={"a" : 1}
>>> line = "xaz"
>>> line = re.sub(r"(ZB[1-6][a-z][0-9]+)", d["\\1"], line)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 're' is not defined
>>> import re
>>> line = re.sub(r"(ZB[1-6][a-z][0-9]+)", d["\\1"], line)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
KeyError: '\\1'
>>> line = re.sub(r"(a)", d["\\1"], line)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
KeyError: '\\1'
>>> line = re.sub(r"(a)", lambda x : d[x.group(1)], line)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/Users/chris/.pyenv/versions/pyenvtest/lib/python2.7/re.py", line 155, in sub
    return _compile(pattern, flags).sub(repl, string, count)
TypeError: sequence item 1: expected string, int found
>>> d={"a" : "1"}
>>> re.sub(r"(a)", lambda x : d[x.group(1)], line)
'x1z'
>>> line = u"**** [[mandoku:ZB1a0006a.org][ZB1a0006a]]  asdasda"
>>> line
u'**** [[mandoku:ZB1a0006a.org][ZB1a0006a]]  asdasda'
>>> re.sub(r"[[mandoku", "", line)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/Users/chris/.pyenv/versions/pyenvtest/lib/python2.7/re.py", line 155, in sub
    return _compile(pattern, flags).sub(repl, string, count)
  File "/Users/chris/.pyenv/versions/pyenvtest/lib/python2.7/re.py", line 251, in _compile
    raise error, v # invalid expression
sre_constants.error: unexpected end of regular expression
>>> re.sub(r"\[\[mandoku", "", line)
u'**** :ZB1a0006a.org][ZB1a0006a]]  asdasda'
>>> re.sub(r"\[\[mandoku[^ ]+ ", "", line)
u'****  asdasda'
>>> import requests
>>> url="https://raw.githubusercontent.com/cwittern/KR-Workspace/cwittern/Settings/kanripo.cfg"
>>> r = requests.get(url)
>>> r
<Response [404]>
>>> dir(r)
['__bool__', '__class__', '__delattr__', '__dict__', '__doc__', '__format__', '__getattribute__', '__hash__', '__init__', '__module__', '__new__', '__nonzero__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_content', '_content_consumed', 'apparent_encoding', 'close', 'connection', 'content', 'cookies', 'encoding', 'headers', 'history', 'iter_content', 'iter_lines', 'json', 'links', 'ok', 'raise_for_status', 'raw', 'reason', 'request', 'status_code', 'text', 'url']
>>> r1.status_code
404
>>> url="https://raw.githubusercontent.com/kanripo/KR-Workspace/master/Settings/kanripo.cfg"
>>> r1 = requests.get(url)
>>> r1
<Response [200]>
>>> r1.status_code
200
>>> token="b7254056c49642977850667b9022f092bf79a956"
>>> from github import Github
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
ImportError: No module named github
>>> exit()
(pyenvtest)Wed Oct 07 16:46:45 [15125]
  chris@mbp3a-2:~ % python
Python 2.7.10 (default, Sep 10 2015, 16:32:11) 
[GCC 4.2.1 Compatible Apple LLVM 6.0 (clang-600.0.57)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
>>> from github import Github
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
ImportError: No module named github
>>> cd ~/projects/mdweb.chw3/
  File "<stdin>", line 1
    cd ~/projects/mdweb.chw3/
       ^
SyntaxError: invalid syntax
>>> exit
Use exit() or Ctrl-D (i.e. EOF) to exit
>>> exit()
(pyenvtest)Wed Oct 07 16:47:22 [15126]
  chris@mbp3a-2:~ % cd ~/projects/mdweb.chw3/
pyenv-virtualenv: deactivate pyenvtest
pyenv-virtualenv: activate venv
(venv)Wed Oct 07 16:47:25 [15127]
  chris@mbp3a-2:mdweb.chw3 (chw3) % python
Python 2.7.10 (default, Sep 10 2015, 16:32:11) 
[GCC 4.2.1 Compatible Apple LLVM 6.0 (clang-600.0.57)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
>>> from github import Github
>>> token="b7254056c49642977850667b9022f092bf79a956"
>>> url="https://raw.githubusercontent.com/cwittern/KR-Workspace/cwittern/Settings/kanripo.cfg"
>>> import requests
>>> g = Github("cwittern")
>>> dir(g)
['FIX_REPO_GET_GIT_REF', '_Github__get_FIX_REPO_GET_GIT_REF', '_Github__get_per_page', '_Github__requester', '_Github__set_FIX_REPO_GET_GIT_REF', '_Github__set_per_page', '__class__', '__delattr__', '__dict__', '__doc__', '__format__', '__getattribute__', '__hash__', '__init__', '__module__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', 'create_from_raw_data', 'dump', 'get_api_status', 'get_api_status_messages', 'get_emojis', 'get_gist', 'get_gists', 'get_gitignore_template', 'get_gitignore_templates', 'get_hook', 'get_hooks', 'get_last_api_status_message', 'get_organization', 'get_rate_limit', 'get_repo', 'get_repos', 'get_user', 'get_users', 'legacy_search_repos', 'legacy_search_user_by_email', 'legacy_search_users', 'load', 'oauth_scopes', 'per_page', 'rate_limiting', 'rate_limiting_resettime', 'render_markdown', 'search_code', 'search_issues', 'search_repositories', 'search_users']
>>> g.get_api_status()
<github.Status.Status object at 0x1029e7e90>
>>> s=g.get_api_status()
>>> s
<github.Status.Status object at 0x102acef90>
>>> dir(s)
['CHECK_AFTER_INIT_FLAG', '_GithubObject__makeSimpleAttribute', '_GithubObject__makeSimpleListAttribute', '_GithubObject__makeTransformedAttribute', '__class__', '__delattr__', '__dict__', '__doc__', '__format__', '__getattribute__', '__hash__', '__init__', '__module__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_completeIfNeeded', '_headers', '_initAttributes', '_last_updated', '_makeBoolAttribute', '_makeClassAttribute', '_makeDatetimeAttribute', '_makeDictAttribute', '_makeDictOfStringsToClassesAttribute', '_makeIntAttribute', '_makeListOfClassesAttribute', '_makeListOfIntsAttribute', '_makeListOfListOfStringsAttribute', '_makeListOfStringsAttribute', '_makeStringAttribute', '_makeTimestampAttribute', '_parentUrl', '_rawData', '_requester', '_status', '_storeAndUseAttributes', '_useAttributes', 'etag', 'last_modified', 'last_updated', 'raw_data', 'raw_headers', 'setCheckAfterInitFlag', 'status']
>>> s.raw_data
{u'status': u'good', u'last_updated': u'2015-10-07T07:49:04Z'}
>>> s.raw_headers
{'status': '200 OK', 'content-length': '55', 'strict-transport-security': 'max-age=31536000', 'server': 'GitHub.com', 'connection': 'keep-alive', 'date': 'Wed, 07 Oct 2015 07:49:05 GMT', 'content-type': 'application/json', 'timing-allow-origin': 'https://github.com', 'x-octostatus-request-id': '1e47fb06-a3d2-446a-824e-928dff5994a3'}
>>> g.get_user()
<github.AuthenticatedUser.AuthenticatedUser object at 0x1029e7f50>
>>> u=g.get_user()
>>> dir(u)
['CHECK_AFTER_INIT_FLAG', '_CompletableGithubObject__complete', '_CompletableGithubObject__completed', '_GithubObject__makeSimpleAttribute', '_GithubObject__makeSimpleListAttribute', '_GithubObject__makeTransformedAttribute', '__class__', '__delattr__', '__dict__', '__doc__', '__eq__', '__format__', '__getattribute__', '__hash__', '__init__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_avatar_url', '_bio', '_blog', '_collaborators', '_company', '_completeIfNeeded', '_completeIfNotSet', '_created_at', '_disk_usage', '_email', '_events_url', '_followers', '_followers_url', '_following', '_following_url', '_gists_url', '_gravatar_id', '_headers', '_hireable', '_html_url', '_id', '_initAttributes', '_location', '_login', '_makeBoolAttribute', '_makeClassAttribute', '_makeDatetimeAttribute', '_makeDictAttribute', '_makeDictOfStringsToClassesAttribute', '_makeIntAttribute', '_makeListOfClassesAttribute', '_makeListOfIntsAttribute', '_makeListOfListOfStringsAttribute', '_makeListOfStringsAttribute', '_makeStringAttribute', '_makeTimestampAttribute', '_name', '_organizations_url', '_owned_private_repos', '_parentUrl', '_plan', '_private_gists', '_public_gists', '_public_repos', '_rawData', '_received_events_url', '_repos_url', '_requester', '_site_admin', '_starred_url', '_storeAndUseAttributes', '_subscriptions_url', '_total_private_repos', '_type', '_updated_at', '_url', '_useAttributes', 'add_to_emails', 'add_to_following', 'add_to_starred', 'add_to_subscriptions', 'add_to_watched', 'avatar_url', 'bio', 'blog', 'collaborators', 'company', 'create_authorization', 'create_fork', 'create_gist', 'create_key', 'create_repo', 'created_at', 'disk_usage', 'edit', 'email', 'etag', 'events_url', 'followers', 'followers_url', 'following', 'following_url', 'get_authorization', 'get_authorizations', 'get_emails', 'get_events', 'get_followers', 'get_following', 'get_gists', 'get_issues', 'get_key', 'get_keys', 'get_notification', 'get_notifications', 'get_organization_events', 'get_orgs', 'get_repo', 'get_repos', 'get_starred', 'get_starred_gists', 'get_subscriptions', 'get_teams', 'get_user_issues', 'get_watched', 'gists_url', 'gravatar_id', 'has_in_following', 'has_in_starred', 'has_in_subscriptions', 'has_in_watched', 'hireable', 'html_url', 'id', 'last_modified', 'location', 'login', 'name', 'organizations_url', 'owned_private_repos', 'plan', 'private_gists', 'public_gists', 'public_repos', 'raw_data', 'raw_headers', 'received_events_url', 'remove_from_emails', 'remove_from_following', 'remove_from_starred', 'remove_from_subscriptions', 'remove_from_watched', 'repos_url', 'setCheckAfterInitFlag', 'site_admin', 'starred_url', 'subscriptions_url', 'total_private_repos', 'type', 'update', 'updated_at', 'url']
>>> u=g.get_user().url
>>> u
'/user'
>>> u=g.get_user()
>>> u.get_repos()
<github.PaginatedList.PaginatedList instance at 0x102a84f38>
>>> r=u.get_repos()
>>> r
<github.PaginatedList.PaginatedList instance at 0x102acfef0>
>>> dir(r)
['_PaginatedListBase__elements', '_PaginatedListBase__fetchToIndex', '_PaginatedList__contentClass', '_PaginatedList__firstParams', '_PaginatedList__firstUrl', '_PaginatedList__nextParams', '_PaginatedList__nextUrl', '_PaginatedList__parseLinkHeader', '_PaginatedList__requester', '_PaginatedList__reverse', '_PaginatedList__totalCount', '_Slice', '__doc__', '__getitem__', '__init__', '__iter__', '__module__', '_couldGrow', '_fetchNextPage', '_getLastPageUrl', '_grow', '_isBiggerThan', '_reversed', 'get_page', 'reversed', 'totalCount']
>>> r.get_page(1)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/Users/chris/.pyenv/versions/venv/lib/python2.7/site-packages/github/PaginatedList.py", line 203, in get_page
    parameters=params
  File "/Users/chris/.pyenv/versions/venv/lib/python2.7/site-packages/github/Requester.py", line 169, in requestJsonAndCheck
    return self.__check(*self.requestJson(verb, url, parameters, headers, input, cnx))
  File "/Users/chris/.pyenv/versions/venv/lib/python2.7/site-packages/github/Requester.py", line 177, in __check
    raise self.__createException(status, responseHeaders, output)
github.GithubException.BadCredentialsException: 401 {u'documentation_url': u'https://developer.github.com/v3', u'message': u'Bad credentials'}
>>> g=Github(token)
>>> r=u.get_repos()
>>> u=g.get_user()
>>> r=u.get_repos()
>>> r.get_page(1)
[<github.Repository.Repository object at 0x102bb7310>, <github.Repository.Repository object at 0x102bb7490>, <github.Repository.Repository object at 0x102bb7610>, <github.Repository.Repository object at 0x102bb7790>, <github.Repository.Repository object at 0x102bb7910>, <github.Repository.Repository object at 0x102bb7a90>, <github.Repository.Repository object at 0x102bb7c10>, <github.Repository.Repository object at 0x102bb7d90>, <github.Repository.Repository object at 0x102bb7f10>, <github.Repository.Repository object at 0x102c0b0d0>, <github.Repository.Repository object at 0x102c0b250>, <github.Repository.Repository object at 0x102c0b3d0>, <github.Repository.Repository object at 0x102c0b550>, <github.Repository.Repository object at 0x102c0b6d0>, <github.Repository.Repository object at 0x102c0b850>, <github.Repository.Repository object at 0x102c0b9d0>, <github.Repository.Repository object at 0x102c0bb50>, <github.Repository.Repository object at 0x102c0bcd0>, <github.Repository.Repository object at 0x102c0be50>, <github.Repository.Repository object at 0x102c0bfd0>, <github.Repository.Repository object at 0x102c5c190>, <github.Repository.Repository object at 0x102c5c310>, <github.Repository.Repository object at 0x102c5c490>, <github.Repository.Repository object at 0x102c5c610>, <github.Repository.Repository object at 0x102c5c790>, <github.Repository.Repository object at 0x102c5c910>, <github.Repository.Repository object at 0x102c5ca90>, <github.Repository.Repository object at 0x102c5cc10>, <github.Repository.Repository object at 0x102c5cd90>, <github.Repository.Repository object at 0x102c5cf10>]
>>> dir(g)
['FIX_REPO_GET_GIT_REF', '_Github__get_FIX_REPO_GET_GIT_REF', '_Github__get_per_page', '_Github__requester', '_Github__set_FIX_REPO_GET_GIT_REF', '_Github__set_per_page', '__class__', '__delattr__', '__dict__', '__doc__', '__format__', '__getattribute__', '__hash__', '__init__', '__module__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', 'create_from_raw_data', 'dump', 'get_api_status', 'get_api_status_messages', 'get_emojis', 'get_gist', 'get_gists', 'get_gitignore_template', 'get_gitignore_templates', 'get_hook', 'get_hooks', 'get_last_api_status_message', 'get_organization', 'get_rate_limit', 'get_repo', 'get_repos', 'get_user', 'get_users', 'legacy_search_repos', 'legacy_search_user_by_email', 'legacy_search_users', 'load', 'oauth_scopes', 'per_page', 'rate_limiting', 'rate_limiting_resettime', 'render_markdown', 'search_code', 'search_issues', 'search_repositories', 'search_users']
>>> rp=g.get_repo("KR-Workspace")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/Users/chris/.pyenv/versions/venv/lib/python2.7/site-packages/github/MainClass.py", line 200, in get_repo
    "%s%s" % (url_base, full_name_or_id)
  File "/Users/chris/.pyenv/versions/venv/lib/python2.7/site-packages/github/Requester.py", line 169, in requestJsonAndCheck
    return self.__check(*self.requestJson(verb, url, parameters, headers, input, cnx))
  File "/Users/chris/.pyenv/versions/venv/lib/python2.7/site-packages/github/Requester.py", line 177, in __check
    raise self.__createException(status, responseHeaders, output)
github.GithubException.UnknownObjectException: 404 {u'documentation_url': u'https://developer.github.com/v3', u'message': u'Not Found'}
>>> u=g.get_user()
>>> u
<github.AuthenticatedUser.AuthenticatedUser object at 0x102acee90>
>>> dir(u)
['CHECK_AFTER_INIT_FLAG', '_CompletableGithubObject__complete', '_CompletableGithubObject__completed', '_GithubObject__makeSimpleAttribute', '_GithubObject__makeSimpleListAttribute', '_GithubObject__makeTransformedAttribute', '__class__', '__delattr__', '__dict__', '__doc__', '__eq__', '__format__', '__getattribute__', '__hash__', '__init__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_avatar_url', '_bio', '_blog', '_collaborators', '_company', '_completeIfNeeded', '_completeIfNotSet', '_created_at', '_disk_usage', '_email', '_events_url', '_followers', '_followers_url', '_following', '_following_url', '_gists_url', '_gravatar_id', '_headers', '_hireable', '_html_url', '_id', '_initAttributes', '_location', '_login', '_makeBoolAttribute', '_makeClassAttribute', '_makeDatetimeAttribute', '_makeDictAttribute', '_makeDictOfStringsToClassesAttribute', '_makeIntAttribute', '_makeListOfClassesAttribute', '_makeListOfIntsAttribute', '_makeListOfListOfStringsAttribute', '_makeListOfStringsAttribute', '_makeStringAttribute', '_makeTimestampAttribute', '_name', '_organizations_url', '_owned_private_repos', '_parentUrl', '_plan', '_private_gists', '_public_gists', '_public_repos', '_rawData', '_received_events_url', '_repos_url', '_requester', '_site_admin', '_starred_url', '_storeAndUseAttributes', '_subscriptions_url', '_total_private_repos', '_type', '_updated_at', '_url', '_useAttributes', 'add_to_emails', 'add_to_following', 'add_to_starred', 'add_to_subscriptions', 'add_to_watched', 'avatar_url', 'bio', 'blog', 'collaborators', 'company', 'create_authorization', 'create_fork', 'create_gist', 'create_key', 'create_repo', 'created_at', 'disk_usage', 'edit', 'email', 'etag', 'events_url', 'followers', 'followers_url', 'following', 'following_url', 'get_authorization', 'get_authorizations', 'get_emails', 'get_events', 'get_followers', 'get_following', 'get_gists', 'get_issues', 'get_key', 'get_keys', 'get_notification', 'get_notifications', 'get_organization_events', 'get_orgs', 'get_repo', 'get_repos', 'get_starred', 'get_starred_gists', 'get_subscriptions', 'get_teams', 'get_user_issues', 'get_watched', 'gists_url', 'gravatar_id', 'has_in_following', 'has_in_starred', 'has_in_subscriptions', 'has_in_watched', 'hireable', 'html_url', 'id', 'last_modified', 'location', 'login', 'name', 'organizations_url', 'owned_private_repos', 'plan', 'private_gists', 'public_gists', 'public_repos', 'raw_data', 'raw_headers', 'received_events_url', 'remove_from_emails', 'remove_from_following', 'remove_from_starred', 'remove_from_subscriptions', 'remove_from_watched', 'repos_url', 'setCheckAfterInitFlag', 'site_admin', 'starred_url', 'subscriptions_url', 'total_private_repos', 'type', 'update', 'updated_at', 'url']
>>> u.login
u'cwittern'
>>> rp=g.get_repo("KR-Workspace")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/Users/chris/.pyenv/versions/venv/lib/python2.7/site-packages/github/MainClass.py", line 200, in get_repo
    "%s%s" % (url_base, full_name_or_id)
  File "/Users/chris/.pyenv/versions/venv/lib/python2.7/site-packages/github/Requester.py", line 169, in requestJsonAndCheck
    return self.__check(*self.requestJson(verb, url, parameters, headers, input, cnx))
  File "/Users/chris/.pyenv/versions/venv/lib/python2.7/site-packages/github/Requester.py", line 177, in __check
    raise self.__createException(status, responseHeaders, output)
github.GithubException.UnknownObjectException: 404 {u'documentation_url': u'https://developer.github.com/v3', u'message': u'Not Found'}
>>> rp=g.get_repo("cwittern/KR-Workspace")
>>> rp
<github.Repository.Repository object at 0x102ae6b90>
>>> dir(rp)
['CHECK_AFTER_INIT_FLAG', '_CompletableGithubObject__complete', '_CompletableGithubObject__completed', '_GithubObject__makeSimpleAttribute', '_GithubObject__makeSimpleListAttribute', '_GithubObject__makeTransformedAttribute', '_Repository__create_pull', '_Repository__create_pull_1', '_Repository__create_pull_2', '__class__', '__delattr__', '__dict__', '__doc__', '__eq__', '__format__', '__getattribute__', '__hash__', '__init__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_archive_url', '_assignees_url', '_blobs_url', '_branches_url', '_clone_url', '_collaborators_url', '_comments_url', '_commits_url', '_compare_url', '_completeIfNeeded', '_completeIfNotSet', '_contents_url', '_contributors_url', '_created_at', '_default_branch', '_description', '_downloads_url', '_events_url', '_fork', '_forks', '_forks_count', '_forks_url', '_full_name', '_git_commits_url', '_git_refs_url', '_git_tags_url', '_git_url', '_has_downloads', '_has_issues', '_has_wiki', '_headers', '_homepage', '_hooks_url', '_html_url', '_hub', '_id', '_identity', '_initAttributes', '_issue_comment_url', '_issue_events_url', '_issues_url', '_keys_url', '_labels_url', '_language', '_languages_url', '_makeBoolAttribute', '_makeClassAttribute', '_makeDatetimeAttribute', '_makeDictAttribute', '_makeDictOfStringsToClassesAttribute', '_makeIntAttribute', '_makeListOfClassesAttribute', '_makeListOfIntsAttribute', '_makeListOfListOfStringsAttribute', '_makeListOfStringsAttribute', '_makeStringAttribute', '_makeTimestampAttribute', '_master_branch', '_merges_url', '_milestones_url', '_mirror_url', '_name', '_network_count', '_notifications_url', '_open_issues', '_open_issues_count', '_organization', '_owner', '_parent', '_parentUrl', '_permissions', '_private', '_pulls_url', '_pushed_at', '_rawData', '_requester', '_size', '_source', '_ssh_url', '_stargazers_count', '_stargazers_url', '_statuses_url', '_storeAndUseAttributes', '_subscribers_url', '_subscription_url', '_svn_url', '_tags_url', '_teams_url', '_trees_url', '_updated_at', '_url', '_useAttributes', '_watchers', '_watchers_count', 'add_to_collaborators', 'archive_url', 'assignees_url', 'blobs_url', 'branches_url', 'clone_url', 'collaborators_url', 'comments_url', 'commits_url', 'compare', 'compare_url', 'contents_url', 'contributors_url', 'create_git_blob', 'create_git_commit', 'create_git_ref', 'create_git_tag', 'create_git_tree', 'create_hook', 'create_issue', 'create_key', 'create_label', 'create_milestone', 'create_pull', 'created_at', 'default_branch', 'delete', 'description', 'downloads_url', 'edit', 'etag', 'events_url', 'fork', 'forks', 'forks_count', 'forks_url', 'full_name', 'get_archive_link', 'get_assignees', 'get_branch', 'get_branches', 'get_collaborators', 'get_comment', 'get_comments', 'get_commit', 'get_commits', 'get_contents', 'get_contributors', 'get_dir_contents', 'get_download', 'get_downloads', 'get_events', 'get_file_contents', 'get_forks', 'get_git_blob', 'get_git_commit', 'get_git_ref', 'get_git_refs', 'get_git_tag', 'get_git_tree', 'get_hook', 'get_hooks', 'get_issue', 'get_issues', 'get_issues_comments', 'get_issues_event', 'get_issues_events', 'get_key', 'get_keys', 'get_label', 'get_labels', 'get_languages', 'get_milestone', 'get_milestones', 'get_network_events', 'get_pull', 'get_pulls', 'get_pulls_comments', 'get_pulls_review_comments', 'get_readme', 'get_stargazers', 'get_stats_code_frequency', 'get_stats_commit_activity', 'get_stats_contributors', 'get_stats_participation', 'get_stats_punch_card', 'get_subscribers', 'get_tags', 'get_teams', 'get_watchers', 'git_commits_url', 'git_refs_url', 'git_tags_url', 'git_url', 'has_downloads', 'has_in_assignees', 'has_in_collaborators', 'has_issues', 'has_wiki', 'homepage', 'hooks_url', 'html_url', 'id', 'issue_comment_url', 'issue_events_url', 'issues_url', 'keys_url', 'labels_url', 'language', 'languages_url', 'last_modified', 'legacy_search_issues', 'master_branch', 'merge', 'merges_url', 'milestones_url', 'mirror_url', 'name', 'network_count', 'notifications_url', 'open_issues', 'open_issues_count', 'organization', 'owner', 'parent', 'permissions', 'private', 'pulls_url', 'pushed_at', 'raw_data', 'raw_headers', 'remove_from_collaborators', 'setCheckAfterInitFlag', 'size', 'source', 'ssh_url', 'stargazers_count', 'stargazers_url', 'statuses_url', 'subscribe_to_hub', 'subscribers_url', 'subscription_url', 'svn_url', 'tags_url', 'teams_url', 'trees_url', 'unsubscribe_from_hub', 'update', 'updated_at', 'url', 'watchers', 'watchers_count']
>>> rp=g.get_repo("cwittern/KR-Workspace")
>>> u
<github.AuthenticatedUser.AuthenticatedUser object at 0x102acee90>
>>> dir(u)
['CHECK_AFTER_INIT_FLAG', '_CompletableGithubObject__complete', '_CompletableGithubObject__completed', '_GithubObject__makeSimpleAttribute', '_GithubObject__makeSimpleListAttribute', '_GithubObject__makeTransformedAttribute', '__class__', '__delattr__', '__dict__', '__doc__', '__eq__', '__format__', '__getattribute__', '__hash__', '__init__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_avatar_url', '_bio', '_blog', '_collaborators', '_company', '_completeIfNeeded', '_completeIfNotSet', '_created_at', '_disk_usage', '_email', '_events_url', '_followers', '_followers_url', '_following', '_following_url', '_gists_url', '_gravatar_id', '_headers', '_hireable', '_html_url', '_id', '_initAttributes', '_location', '_login', '_makeBoolAttribute', '_makeClassAttribute', '_makeDatetimeAttribute', '_makeDictAttribute', '_makeDictOfStringsToClassesAttribute', '_makeIntAttribute', '_makeListOfClassesAttribute', '_makeListOfIntsAttribute', '_makeListOfListOfStringsAttribute', '_makeListOfStringsAttribute', '_makeStringAttribute', '_makeTimestampAttribute', '_name', '_organizations_url', '_owned_private_repos', '_parentUrl', '_plan', '_private_gists', '_public_gists', '_public_repos', '_rawData', '_received_events_url', '_repos_url', '_requester', '_site_admin', '_starred_url', '_storeAndUseAttributes', '_subscriptions_url', '_total_private_repos', '_type', '_updated_at', '_url', '_useAttributes', 'add_to_emails', 'add_to_following', 'add_to_starred', 'add_to_subscriptions', 'add_to_watched', 'avatar_url', 'bio', 'blog', 'collaborators', 'company', 'create_authorization', 'create_fork', 'create_gist', 'create_key', 'create_repo', 'created_at', 'disk_usage', 'edit', 'email', 'etag', 'events_url', 'followers', 'followers_url', 'following', 'following_url', 'get_authorization', 'get_authorizations', 'get_emails', 'get_events', 'get_followers', 'get_following', 'get_gists', 'get_issues', 'get_key', 'get_keys', 'get_notification', 'get_notifications', 'get_organization_events', 'get_orgs', 'get_repo', 'get_repos', 'get_starred', 'get_starred_gists', 'get_subscriptions', 'get_teams', 'get_user_issues', 'get_watched', 'gists_url', 'gravatar_id', 'has_in_following', 'has_in_starred', 'has_in_subscriptions', 'has_in_watched', 'hireable', 'html_url', 'id', 'last_modified', 'location', 'login', 'name', 'organizations_url', 'owned_private_repos', 'plan', 'private_gists', 'public_gists', 'public_repos', 'raw_data', 'raw_headers', 'received_events_url', 'remove_from_emails', 'remove_from_following', 'remove_from_starred', 'remove_from_subscriptions', 'remove_from_watched', 'repos_url', 'setCheckAfterInitFlag', 'site_admin', 'starred_url', 'subscriptions_url', 'total_private_repos', 'type', 'update', 'updated_at', 'url']
>>> u.create_fork("kanripo/KR-Gaiji")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/Users/chris/.pyenv/versions/venv/lib/python2.7/site-packages/github/AuthenticatedUser.py", line 446, in create_fork
    assert isinstance(repo, github.Repository.Repository), repo
AssertionError: kanripo/KR-Gaiji
>>> u.create_fork(g.get_repo("kanripo/KR-Gaiji"))
<github.Repository.Repository object at 0x102ae6c10>
>>> ws=u.create_fork(g.get_repo("kanripo/KR-Workspace"))
>>> ws
<github.Repository.Repository object at 0x102cbc450>
>>> help(ws)
Help on Repository in module github.Repository object:

class Repository(github.GithubObject.CompletableGithubObject)
 |  This class represents Repositorys. The reference can be found here http://developer.github.com/v3/repos/
 |  
 |  Method resolution order:
 |      Repository
 |      github.GithubObject.CompletableGithubObject
 |      github.GithubObject.GithubObject
 |      __builtin__.object
 |  
 |  Methods defined here:
 |  
 |  add_to_collaborators(self, collaborator)
 |      :calls: `PUT /repos/:owner/:repo/collaborators/:user <http://developer.github.com/v3/repos/collaborators>`_
 |      :param collaborator: string or :class:`github.NamedUser.NamedUser`
 |      :rtype: None
 |  
 |  compare(self, base, head)
 |      :calls: `GET /repos/:owner/:repo/compare/:base...:head <http://developer.github.com/v3/repos/commits>`_
 |      :param base: string
 |      :param head: string
 |      :rtype: :class:`github.Comparison.Comparison`
 |  
 |  create_git_blob(self, content, encoding)
 |      :calls: `POST /repos/:owner/:repo/git/blobs <http://developer.github.com/v3/git/blobs>`_
 |      :param content: string
 |      :param encoding: string
 |      :rtype: :class:`github.GitBlob.GitBlob`
 |  
 |  create_git_commit(self, message, tree, parents, author=NotSet, committer=NotSet)
 |      :calls: `POST /repos/:owner/:repo/git/commits <http://developer.github.com/v3/git/commits>`_
 |      :param message: string
 |      :param tree: :class:`github.GitTree.GitTree`
 |      :param parents: list of :class:`github.GitCommit.GitCommit`
 |      :param author: :class:`github.InputGitAuthor.InputGitAuthor`
 |      :param committer: :class:`github.InputGitAuthor.InputGitAuthor`
 |      :rtype: :class:`github.GitCommit.GitCommit`
 |  
 |  create_git_ref(self, ref, sha)
 |      :calls: `POST /repos/:owner/:repo/git/refs <http://developer.github.com/v3/git/refs>`_
 |      :param ref: string
 |      :param sha: string
 |      :rtype: :class:`github.GitRef.GitRef`
 |  
 |  create_git_tag(self, tag, message, object, type, tagger=NotSet)
 |      :calls: `POST /repos/:owner/:repo/git/tags <http://developer.github.com/v3/git/tags>`_
 |      :param tag: string
 |      :param message: string
 |      :param object: string
 |      :param type: string
 |      :param tagger: :class:`github.InputGitAuthor.InputGitAuthor`
 |      :rtype: :class:`github.GitTag.GitTag`
 |  
 |  create_git_tree(self, tree, base_tree=NotSet)
 |      :calls: `POST /repos/:owner/:repo/git/trees <http://developer.github.com/v3/git/trees>`_
 |      :param tree: list of :class:`github.InputGitTreeElement.InputGitTreeElement`
 |      :param base_tree: :class:`github.GitTree.GitTree`
 |      :rtype: :class:`github.GitTree.GitTree`
 |  
 |  create_hook(self, name, config, events=NotSet, active=NotSet)
 |      :calls: `POST /repos/:owner/:repo/hooks <http://developer.github.com/v3/repos/hooks>`_
 |      :param name: string
 |      :param config: dict
 |      :param events: list of string
 |      :param active: bool
 |      :rtype: :class:`github.Hook.Hook`
 |  
 |  create_issue(self, title, body=NotSet, assignee=NotSet, milestone=NotSet, labels=NotSet)
 |      :calls: `POST /repos/:owner/:repo/issues <http://developer.github.com/v3/issues>`_
 |      :param title: string
 |      :param body: string
 |      :param assignee: string or :class:`github.NamedUser.NamedUser`
 |      :param milestone: :class:`github.Milestone.Milestone`
 |      :param labels: list of :class:`github.Label.Label`
 |      :rtype: :class:`github.Issue.Issue`
 |  
 |  create_key(self, title, key)
 |      :calls: `POST /repos/:owner/:repo/keys <http://developer.github.com/v3/repos/keys>`_
 |      :param title: string
 |      :param key: string
 |      :rtype: :class:`github.RepositoryKey.RepositoryKey`
 |  
 |  create_label(self, name, color)
 |      :calls: `POST /repos/:owner/:repo/labels <http://developer.github.com/v3/issues/labels>`_
 |      :param name: string
 |      :param color: string
 |      :rtype: :class:`github.Label.Label`
 |  
 |  create_milestone(self, title, state=NotSet, description=NotSet, due_on=NotSet)
 |      :calls: `POST /repos/:owner/:repo/milestones <http://developer.github.com/v3/issues/milestones>`_
 |      :param title: string
 |      :param state: string
 |      :param description: string
 |      :param due_on: date
 |      :rtype: :class:`github.Milestone.Milestone`
 |  
 |  create_pull(self, *args, **kwds)
 |      :calls: `POST /repos/:owner/:repo/pulls <http://developer.github.com/v3/pulls>`_
 |      :param title: string
 |      :param body: string
 |      :param issue: :class:`github.Issue.Issue`
 |      :param base: string
 |      :param head: string
 |      :rtype: :class:`github.PullRequest.PullRequest`
 |  
 |  delete(self)
 |      :calls: `DELETE /repos/:owner/:repo <http://developer.github.com/v3/repos>`_
 |      :rtype: None
 |  
 |  edit(self, name, description=NotSet, homepage=NotSet, private=NotSet, has_issues=NotSet, has_wiki=NotSet, has_downloads=NotSet, default_branch=NotSet)
 |      :calls: `PATCH /repos/:owner/:repo <http://developer.github.com/v3/repos>`_
 |      :param name: string
 |      :param description: string
 |      :param homepage: string
 |      :param private: bool
 |      :param has_issues: bool
 |      :param has_wiki: bool
 |      :param has_downloads: bool
 |      :param default_branch: string
 |      :rtype: None
 |  
 |  get_archive_link(self, archive_format, ref=NotSet)
 |      :calls: `GET /repos/:owner/:repo/:archive_format/:ref <http://developer.github.com/v3/repos/contents>`_
 |      :param archive_format: string
 |      :param ref: string
 |      :rtype: string
 |  
 |  get_assignees(self)
 |      :calls: `GET /repos/:owner/:repo/assignees <http://developer.github.com/v3/issues/assignees>`_
 |      :rtype: :class:`github.PaginatedList.PaginatedList` of :class:`github.NamedUser.NamedUser`
 |  
 |  get_branch(self, branch)
 |      :calls: `GET /repos/:owner/:repo/branches/:branch <http://developer.github.com/v3/repos>`_
 |      :param branch: string
 |      :rtype: :class:`github.Branch.Branch`
 |  
 |  get_branches(self)
 |      :calls: `GET /repos/:owner/:repo/branches <http://developer.github.com/v3/repos>`_
 |      :rtype: :class:`github.PaginatedList.PaginatedList` of :class:`github.Branch.Branch`
 |  
 |  get_collaborators(self)
 |      :calls: `GET /repos/:owner/:repo/collaborators <http://developer.github.com/v3/repos/collaborators>`_
 |      :rtype: :class:`github.PaginatedList.PaginatedList` of :class:`github.NamedUser.NamedUser`
 |  
 |  get_comment(self, id)
 |      :calls: `GET /repos/:owner/:repo/comments/:id <http://developer.github.com/v3/repos/comments>`_
 |      :param id: integer
 |      :rtype: :class:`github.CommitComment.CommitComment`
 |  
 |  get_comments(self)
 |      :calls: `GET /repos/:owner/:repo/comments <http://developer.github.com/v3/repos/comments>`_
 |      :rtype: :class:`github.PaginatedList.PaginatedList` of :class:`github.CommitComment.CommitComment`
 |  
 |  get_commit(self, sha)
 |      :calls: `GET /repos/:owner/:repo/commits/:sha <http://developer.github.com/v3/repos/commits>`_
 |      :param sha: string
 |      :rtype: :class:`github.Commit.Commit`
 |  
 |  get_commits(self, sha=NotSet, path=NotSet, since=NotSet, until=NotSet, author=NotSet)
 |      :calls: `GET /repos/:owner/:repo/commits <http://developer.github.com/v3/repos/commits>`_
 |      :param sha: string
 |      :param path: string
 |      :param since: datetime.datetime
 |      :param until: datetime.datetime
 |      :param author: string or :class:`github.NamedUser.NamedUser` or :class:`github.AuthenticatedUser.AuthenticatedUser`
 |      :rtype: :class:`github.PaginatedList.PaginatedList` of :class:`github.Commit.Commit`
 |  
 |  get_contents(self, path, ref=NotSet)
 |      :calls: `GET /repos/:owner/:repo/contents/:path <http://developer.github.com/v3/repos/contents>`_
 |      :param path: string
 |      :param ref: string
 |      :rtype: :class:`github.ContentFile.ContentFile`
 |  
 |  get_contributors(self)
 |      :calls: `GET /repos/:owner/:repo/contributors <http://developer.github.com/v3/repos>`_
 |      :rtype: :class:`github.PaginatedList.PaginatedList` of :class:`github.NamedUser.NamedUser`
 |  
 |  get_dir_contents(self, path, ref=NotSet)
 |      :calls: `GET /repos/:owner/:repo/contents/:path <http://developer.github.com/v3/repos/contents>`_
 |      :param path: string
 |      :param ref: string
 |      :rtype: list of :class:`github.ContentFile.ContentFile`
 |  
 |  get_download(self, id)
 |      :calls: `GET /repos/:owner/:repo/downloads/:id <http://developer.github.com/v3/repos/downloads>`_
 |      :param id: integer
 |      :rtype: :class:`github.Download.Download`
 |  
 |  get_downloads(self)
 |      :calls: `GET /repos/:owner/:repo/downloads <http://developer.github.com/v3/repos/downloads>`_
 |      :rtype: :class:`github.PaginatedList.PaginatedList` of :class:`github.Download.Download`
 |  
 |  get_events(self)
 |      :calls: `GET /repos/:owner/:repo/events <http://developer.github.com/v3/activity/events>`_
 |      :rtype: :class:`github.PaginatedList.PaginatedList` of :class:`github.Event.Event`
 |  
 |  get_file_contents(self, path, ref=NotSet)
 |      :calls: `GET /repos/:owner/:repo/contents/:path <http://developer.github.com/v3/repos/contents>`_
 |      :param path: string
 |      :param ref: string
 |      :rtype: :class:`github.ContentFile.ContentFile`
 |  
 |  get_forks(self)
 |      :calls: `GET /repos/:owner/:repo/forks <http://developer.github.com/v3/repos/forks>`_
 |      :rtype: :class:`github.PaginatedList.PaginatedList` of :class:`github.Repository.Repository`
 |  
 |  get_git_blob(self, sha)
 |      :calls: `GET /repos/:owner/:repo/git/blobs/:sha <http://developer.github.com/v3/git/blobs>`_
 |      :param sha: string
 |      :rtype: :class:`github.GitBlob.GitBlob`
 |  
 |  get_git_commit(self, sha)
 |      :calls: `GET /repos/:owner/:repo/git/commits/:sha <http://developer.github.com/v3/git/commits>`_
 |      :param sha: string
 |      :rtype: :class:`github.GitCommit.GitCommit`
 |  
 |  get_git_ref(self, ref)
 |      :calls: `GET /repos/:owner/:repo/git/refs/:ref <http://developer.github.com/v3/git/refs>`_
 |      :param ref: string
 |      :rtype: :class:`github.GitRef.GitRef`
 |  
 |  get_git_refs(self)
 |      :calls: `GET /repos/:owner/:repo/git/refs <http://developer.github.com/v3/git/refs>`_
 |      :rtype: :class:`github.PaginatedList.PaginatedList` of :class:`github.GitRef.GitRef`
 |  
 |  get_git_tag(self, sha)
 |      :calls: `GET /repos/:owner/:repo/git/tags/:sha <http://developer.github.com/v3/git/tags>`_
 |      :param sha: string
 |      :rtype: :class:`github.GitTag.GitTag`
 |  
 |  get_git_tree(self, sha, recursive=NotSet)
 |      :calls: `GET /repos/:owner/:repo/git/trees/:sha <http://developer.github.com/v3/git/trees>`_
 |      :param sha: string
 |      :param recursive: bool
 |      :rtype: :class:`github.GitTree.GitTree`
 |  
 |  get_hook(self, id)
 |      :calls: `GET /repos/:owner/:repo/hooks/:id <http://developer.github.com/v3/repos/hooks>`_
 |      :param id: integer
 |      :rtype: :class:`github.Hook.Hook`
 |  
 |  get_hooks(self)
 |      :calls: `GET /repos/:owner/:repo/hooks <http://developer.github.com/v3/repos/hooks>`_
 |      :rtype: :class:`github.PaginatedList.PaginatedList` of :class:`github.Hook.Hook`
 |  
 |  get_issue(self, number)
 |      :calls: `GET /repos/:owner/:repo/issues/:number <http://developer.github.com/v3/issues>`_
 |      :param number: integer
 |      :rtype: :class:`github.Issue.Issue`
 |  
 |  get_issues(self, milestone=NotSet, state=NotSet, assignee=NotSet, mentioned=NotSet, labels=NotSet, sort=NotSet, direction=NotSet, since=NotSet)
 |      :calls: `GET /repos/:owner/:repo/issues <http://developer.github.com/v3/issues>`_
 |      :param milestone: :class:`github.Milestone.Milestone` or "none" or "*"
 |      :param state: string
 |      :param assignee: string or :class:`github.NamedUser.NamedUser` or "none" or "*"
 |      :param mentioned: :class:`github.NamedUser.NamedUser`
 |      :param labels: list of :class:`github.Label.Label`
 |      :param sort: string
 |      :param direction: string
 |      :param since: datetime.datetime
 |      :rtype: :class:`github.PaginatedList.PaginatedList` of :class:`github.Issue.Issue`
 |  
 |  get_issues_comments(self, sort=NotSet, direction=NotSet, since=NotSet)
 |      :calls: `GET /repos/:owner/:repo/issues/comments <http://developer.github.com/v3/issues/comments>`_
 |      :param sort: string
 |      :param direction: string
 |      :param since: datetime.datetime
 |      :rtype: :class:`github.PaginatedList.PaginatedList` of :class:`github.IssueComment.IssueComment`
 |  
 |  get_issues_event(self, id)
 |      :calls: `GET /repos/:owner/:repo/issues/events/:id <http://developer.github.com/v3/issues/events>`_
 |      :param id: integer
 |      :rtype: :class:`github.IssueEvent.IssueEvent`
 |  
 |  get_issues_events(self)
 |      :calls: `GET /repos/:owner/:repo/issues/events <http://developer.github.com/v3/issues/events>`_
 |      :rtype: :class:`github.PaginatedList.PaginatedList` of :class:`github.IssueEvent.IssueEvent`
 |  
 |  get_key(self, id)
 |      :calls: `GET /repos/:owner/:repo/keys/:id <http://developer.github.com/v3/repos/keys>`_
 |      :param id: integer
 |      :rtype: :class:`github.RepositoryKey.RepositoryKey`
 |  
 |  get_keys(self)
 |      :calls: `GET /repos/:owner/:repo/keys <http://developer.github.com/v3/repos/keys>`_
 |      :rtype: :class:`github.PaginatedList.PaginatedList` of :class:`github.RepositoryKey.RepositoryKey`
 |  
 |  get_label(self, name)
 |      :calls: `GET /repos/:owner/:repo/labels/:name <http://developer.github.com/v3/issues/labels>`_
 |      :param name: string
 |      :rtype: :class:`github.Label.Label`
 |  
 |  get_labels(self)
 |      :calls: `GET /repos/:owner/:repo/labels <http://developer.github.com/v3/issues/labels>`_
 |      :rtype: :class:`github.PaginatedList.PaginatedList` of :class:`github.Label.Label`
 |  
 |  get_languages(self)
 |      :calls: `GET /repos/:owner/:repo/languages <http://developer.github.com/v3/repos>`_
 |      :rtype: dict of string to integer
 |  
 |  get_milestone(self, number)
 |      :calls: `GET /repos/:owner/:repo/milestones/:number <http://developer.github.com/v3/issues/milestones>`_
 |      :param number: integer
 |      :rtype: :class:`github.Milestone.Milestone`
 |  
 |  get_milestones(self, state=NotSet, sort=NotSet, direction=NotSet)
 |      :calls: `GET /repos/:owner/:repo/milestones <http://developer.github.com/v3/issues/milestones>`_
 |      :param state: string
 |      :param sort: string
 |      :param direction: string
 |      :rtype: :class:`github.PaginatedList.PaginatedList` of :class:`github.Milestone.Milestone`
 |  
 |  get_network_events(self)
 |      :calls: `GET /networks/:owner/:repo/events <http://developer.github.com/v3/activity/events>`_
 |      :rtype: :class:`github.PaginatedList.PaginatedList` of :class:`github.Event.Event`
 |  
 |  get_pull(self, number)
 |      :calls: `GET /repos/:owner/:repo/pulls/:number <http://developer.github.com/v3/pulls>`_
 |      :param number: integer
 |      :rtype: :class:`github.PullRequest.PullRequest`
 |  
 |  get_pulls(self, state=NotSet)
 |      :calls: `GET /repos/:owner/:repo/pulls <http://developer.github.com/v3/pulls>`_
 |      :param state: string
 |      :rtype: :class:`github.PaginatedList.PaginatedList` of :class:`github.PullRequest.PullRequest`
 |  
 |  get_pulls_comments(self, sort=NotSet, direction=NotSet, since=NotSet)
 |      :calls: `GET /repos/:owner/:repo/pulls/comments <http://developer.github.com/v3/pulls/comments>`_
 |      :param sort: string
 |      :param direction: string
 |      :param since: datetime.datetime
 |      :rtype: :class:`github.PaginatedList.PaginatedList` of :class:`github.PullRequestComment.PullRequestComment`
 |  
 |  get_pulls_review_comments(self, sort=NotSet, direction=NotSet, since=NotSet)
 |      :calls: `GET /repos/:owner/:repo/pulls/comments <http://developer.github.com/v3/pulls/comments>`_
 |      :param sort: string
 |      :param direction: string
 |      :param since: datetime.datetime
 |      :rtype: :class:`github.PaginatedList.PaginatedList` of :class:`github.PullRequestComment.PullRequestComment`
 |  
 |  get_readme(self, ref=NotSet)
 |      :calls: `GET /repos/:owner/:repo/readme <http://developer.github.com/v3/repos/contents>`_
 |      :param ref: string
 |      :rtype: :class:`github.ContentFile.ContentFile`
 |  
 |  get_stargazers(self)
 |      :calls: `GET /repos/:owner/:repo/stargazers <http://developer.github.com/v3/activity/starring>`_
 |      :rtype: :class:`github.PaginatedList.PaginatedList` of :class:`github.NamedUser.NamedUser`
 |  
 |  get_stats_code_frequency(self)
 |      :calls: `GET /repos/:owner/:repo/stats/code_frequency <http://developer.github.com/v3/repos/statistics/#get-the-number-of-additions-and-deletions-per-week>`_
 |      :rtype: None or list of :class:`github.StatsCodeFrequency.StatsCodeFrequency`
 |  
 |  get_stats_commit_activity(self)
 |      :calls: `GET /repos/:owner/:repo/stats/commit_activity <developer.github.com/v3/repos/statistics/#get-the-number-of-commits-per-hour-in-each-day>`_
 |      :rtype: None or list of :class:`github.StatsCommitActivity.StatsCommitActivity`
 |  
 |  get_stats_contributors(self)
 |      :calls: `GET /repos/:owner/:repo/stats/contributors <http://developer.github.com/v3/repos/statistics/#get-contributors-list-with-additions-deletions-and-commit-counts>`_
 |      :rtype: None or list of :class:`github.StatsContributor.StatsContributor`
 |  
 |  get_stats_participation(self)
 |      :calls: `GET /repos/:owner/:repo/stats/participation <http://developer.github.com/v3/repos/statistics/#get-the-weekly-commit-count-for-the-repo-owner-and-everyone-else>`_
 |      :rtype: None or :class:`github.StatsParticipation.StatsParticipation`
 |  
 |  get_stats_punch_card(self)
 |      :calls: `GET /repos/:owner/:repo/stats/punch_card <http://developer.github.com/v3/repos/statistics/#get-the-number-of-commits-per-hour-in-each-day>`_
 |      :rtype: None or :class:`github.StatsPunchCard.StatsPunchCard`
 |  
 |  get_subscribers(self)
 |      :calls: `GET /repos/:owner/:repo/subscribers <http://developer.github.com/v3/activity/watching>`_
 |      :rtype: :class:`github.PaginatedList.PaginatedList` of :class:`github.NamedUser.NamedUser`
 |  
 |  get_tags(self)
 |      :calls: `GET /repos/:owner/:repo/tags <http://developer.github.com/v3/repos>`_
 |      :rtype: :class:`github.PaginatedList.PaginatedList` of :class:`github.Tag.Tag`
 |  
 |  get_teams(self)
 |      :calls: `GET /repos/:owner/:repo/teams <http://developer.github.com/v3/repos>`_
 |      :rtype: :class:`github.PaginatedList.PaginatedList` of :class:`github.Team.Team`
 |  
 |  get_watchers(self)
 |      :calls: `GET /repos/:owner/:repo/watchers <http://developer.github.com/v3/activity/starring>`_
 |      :rtype: :class:`github.PaginatedList.PaginatedList` of :class:`github.NamedUser.NamedUser`
 |  
 |  has_in_assignees(self, assignee)
 |      :calls: `GET /repos/:owner/:repo/assignees/:assignee <http://developer.github.com/v3/issues/assignees>`_
 |      :param assignee: string or :class:`github.NamedUser.NamedUser`
 |      :rtype: bool
 |  
 |  has_in_collaborators(self, collaborator)
 |      :calls: `GET /repos/:owner/:repo/collaborators/:user <http://developer.github.com/v3/repos/collaborators>`_
 |      :param collaborator: string or :class:`github.NamedUser.NamedUser`
 |      :rtype: bool
 |  
 |  legacy_search_issues(self, state, keyword)
 |      :calls: `GET /legacy/issues/search/:owner/:repository/:state/:keyword <http://developer.github.com/v3/search/legacy>`_
 |      :param state: "open" or "closed"
 |      :param keyword: string
 |      :rtype: :class:`github.PaginatedList.PaginatedList` of :class:`github.Issue.Issue`
 |  
 |  merge(self, base, head, commit_message=NotSet)
 |      :calls: `POST /repos/:owner/:repo/merges <http://developer.github.com/v3/repos/merging>`_
 |      :param base: string
 |      :param head: string
 |      :param commit_message: string
 |      :rtype: :class:`github.Commit.Commit`
 |  
 |  remove_from_collaborators(self, collaborator)
 |      :calls: `DELETE /repos/:owner/:repo/collaborators/:user <http://developer.github.com/v3/repos/collaborators>`_
 |      :param collaborator: string or :class:`github.NamedUser.NamedUser`
 |      :rtype: None
 |  
 |  subscribe_to_hub(self, event, callback, secret=NotSet)
 |      :calls: `POST /hub <http://developer.github.com/>`_
 |      :param event: string
 |      :param callback: string
 |      :param secret: string
 |      :rtype: None
 |  
 |  unsubscribe_from_hub(self, event, callback)
 |      :calls: `POST /hub <http://developer.github.com/>`_
 |      :param event: string
 |      :param callback: string
 |      :param secret: string
 |      :rtype: None
 |  
 |  ----------------------------------------------------------------------
 |  Data descriptors defined here:
 |  
 |  archive_url
 |      :type: string
 |  
 |  assignees_url
 |      :type: string
 |  
 |  blobs_url
 |      :type: string
 |  
 |  branches_url
 |      :type: string
 |  
 |  clone_url
 |      :type: string
 |  
 |  collaborators_url
 |      :type: string
 |  
 |  comments_url
 |      :type: string
 |  
 |  commits_url
 |      :type: string
 |  
 |  compare_url
 |      :type: string
 |  
 |  contents_url
 |      :type: string
 |  
 |  contributors_url
 |      :type: string
 |  
 |  created_at
 |      :type: datetime.datetime
 |  
 |  default_branch
 |      :type: string
 |  
 |  description
 |      :type: string
 |  
 |  downloads_url
 |      :type: string
 |  
 |  events_url
 |      :type: string
 |  
 |  fork
 |      :type: bool
 |  
 |  forks
 |      :type: integer
 |  
 |  forks_count
 |      :type: integer
 |  
 |  forks_url
 |      :type: string
 |  
 |  full_name
 |      :type: string
 |  
 |  git_commits_url
 |      :type: string
 |  
 |  git_refs_url
 |      :type: string
 |  
 |  git_tags_url
 |      :type: string
 |  
 |  git_url
 |      :type: string
 |  
 |  has_downloads
 |      :type: bool
 |  
 |  has_issues
 |      :type: bool
 |  
 |  has_wiki
 |      :type: bool
 |  
 |  homepage
 |      :type: string
 |  
 |  hooks_url
 |      :type: string
 |  
 |  html_url
 |      :type: string
 |  
 |  id
 |      :type: integer
 |  
 |  issue_comment_url
 |      :type: string
 |  
 |  issue_events_url
 |      :type: string
 |  
 |  issues_url
 |      :type: string
 |  
 |  keys_url
 |      :type: string
 |  
 |  labels_url
 |      :type: string
 |  
 |  language
 |      :type: string
 |  
 |  languages_url
 |      :type: string
 |  
 |  master_branch
 |      :type: string
 |  
 |  merges_url
 |      :type: string
 |  
 |  milestones_url
 |      :type: string
 |  
 |  mirror_url
 |      :type: string
 |  
 |  name
 |      :type: string
 |  
 |  network_count
 |      :type: integer
 |  
 |  notifications_url
 |      :type: string
 |  
 |  open_issues
 |      :type: integer
 |  
 |  open_issues_count
 |      :type: integer
 |  
 |  organization
 |      :type: :class:`github.Organization.Organization`
 |  
 |  owner
 |      :type: :class:`github.NamedUser.NamedUser`
 |  
 |  parent
 |      :type: :class:`github.Repository.Repository`
 |  
 |  permissions
 |      :type: :class:`github.Permissions.Permissions`
 |  
 |  private
 |      :type: bool
 |  
 |  pulls_url
 |      :type: string
 |  
 |  pushed_at
 |      :type: datetime.datetime
 |  
 |  size
 |      :type: integer
 |  
 |  source
 |      :type: :class:`github.Repository.Repository`
 |  
 |  ssh_url
 |      :type: string
 |  
 |  stargazers_count
 |      :type: integer
 |  
 |  stargazers_url
 |      :type: string
 |  
 |  statuses_url
 |      :type: string
 |  
 |  subscribers_url
 |      :type: string
 |  
 |  subscription_url
 |      :type: string
 |  
 |  svn_url
 |      :type: string
 |  
 |  tags_url
 |      :type: string
 |  
 |  teams_url
 |      :type: string
 |  
 |  trees_url
 |      :type: string
 |  
 |  updated_at
 |      :type: datetime.datetime
 |  
 |  url
 |      :type: string
 |  
 |  watchers
 |      :type: integer
 |  
 |  watchers_count
 |      :type: integer
 |  
 |  ----------------------------------------------------------------------
 |  Methods inherited from github.GithubObject.CompletableGithubObject:
 |  
 |  __eq__(self, other)
 |  
 |  __init__(self, requester, headers, attributes, completed)
 |  
 |  __ne__(self, other)
 |  
 |  update(self)
 |      Check and update the object with conditional request
 |      :rtype: Boolean value indicating whether the object is changed
 |  
 |  ----------------------------------------------------------------------
 |  Class methods inherited from github.GithubObject.GithubObject:
 |  
 |  setCheckAfterInitFlag(cls, flag) from __builtin__.type
 |  
 |  ----------------------------------------------------------------------
 |  Data descriptors inherited from github.GithubObject.GithubObject:
 |  
 |  __dict__
 |      dictionary for instance variables (if defined)
 |  
 |  __weakref__
 |      list of weak references to the object (if defined)
 |  
 |  etag
 |      :type: str
 |  
 |  last_modified
 |      :type: str
 |  
 |  raw_data
 |      :type: dict
 |  
 |  raw_headers
 |      :type: dict
 |  
 |  ----------------------------------------------------------------------
 |  Data and other attributes inherited from github.GithubObject.GithubObject:
 |  
 |  CHECK_AFTER_INIT_FLAG = False

>>> dir(ws)
['CHECK_AFTER_INIT_FLAG', '_CompletableGithubObject__complete', '_CompletableGithubObject__completed', '_GithubObject__makeSimpleAttribute', '_GithubObject__makeSimpleListAttribute', '_GithubObject__makeTransformedAttribute', '_Repository__create_pull', '_Repository__create_pull_1', '_Repository__create_pull_2', '__class__', '__delattr__', '__dict__', '__doc__', '__eq__', '__format__', '__getattribute__', '__hash__', '__init__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_archive_url', '_assignees_url', '_blobs_url', '_branches_url', '_clone_url', '_collaborators_url', '_comments_url', '_commits_url', '_compare_url', '_completeIfNeeded', '_completeIfNotSet', '_contents_url', '_contributors_url', '_created_at', '_default_branch', '_description', '_downloads_url', '_events_url', '_fork', '_forks', '_forks_count', '_forks_url', '_full_name', '_git_commits_url', '_git_refs_url', '_git_tags_url', '_git_url', '_has_downloads', '_has_issues', '_has_wiki', '_headers', '_homepage', '_hooks_url', '_html_url', '_hub', '_id', '_identity', '_initAttributes', '_issue_comment_url', '_issue_events_url', '_issues_url', '_keys_url', '_labels_url', '_language', '_languages_url', '_makeBoolAttribute', '_makeClassAttribute', '_makeDatetimeAttribute', '_makeDictAttribute', '_makeDictOfStringsToClassesAttribute', '_makeIntAttribute', '_makeListOfClassesAttribute', '_makeListOfIntsAttribute', '_makeListOfListOfStringsAttribute', '_makeListOfStringsAttribute', '_makeStringAttribute', '_makeTimestampAttribute', '_master_branch', '_merges_url', '_milestones_url', '_mirror_url', '_name', '_network_count', '_notifications_url', '_open_issues', '_open_issues_count', '_organization', '_owner', '_parent', '_parentUrl', '_permissions', '_private', '_pulls_url', '_pushed_at', '_rawData', '_requester', '_size', '_source', '_ssh_url', '_stargazers_count', '_stargazers_url', '_statuses_url', '_storeAndUseAttributes', '_subscribers_url', '_subscription_url', '_svn_url', '_tags_url', '_teams_url', '_trees_url', '_updated_at', '_url', '_useAttributes', '_watchers', '_watchers_count', 'add_to_collaborators', 'archive_url', 'assignees_url', 'blobs_url', 'branches_url', 'clone_url', 'collaborators_url', 'comments_url', 'commits_url', 'compare', 'compare_url', 'contents_url', 'contributors_url', 'create_git_blob', 'create_git_commit', 'create_git_ref', 'create_git_tag', 'create_git_tree', 'create_hook', 'create_issue', 'create_key', 'create_label', 'create_milestone', 'create_pull', 'created_at', 'default_branch', 'delete', 'description', 'downloads_url', 'edit', 'etag', 'events_url', 'fork', 'forks', 'forks_count', 'forks_url', 'full_name', 'get_archive_link', 'get_assignees', 'get_branch', 'get_branches', 'get_collaborators', 'get_comment', 'get_comments', 'get_commit', 'get_commits', 'get_contents', 'get_contributors', 'get_dir_contents', 'get_download', 'get_downloads', 'get_events', 'get_file_contents', 'get_forks', 'get_git_blob', 'get_git_commit', 'get_git_ref', 'get_git_refs', 'get_git_tag', 'get_git_tree', 'get_hook', 'get_hooks', 'get_issue', 'get_issues', 'get_issues_comments', 'get_issues_event', 'get_issues_events', 'get_key', 'get_keys', 'get_label', 'get_labels', 'get_languages', 'get_milestone', 'get_milestones', 'get_network_events', 'get_pull', 'get_pulls', 'get_pulls_comments', 'get_pulls_review_comments', 'get_readme', 'get_stargazers', 'get_stats_code_frequency', 'get_stats_commit_activity', 'get_stats_contributors', 'get_stats_participation', 'get_stats_punch_card', 'get_subscribers', 'get_tags', 'get_teams', 'get_watchers', 'git_commits_url', 'git_refs_url', 'git_tags_url', 'git_url', 'has_downloads', 'has_in_assignees', 'has_in_collaborators', 'has_issues', 'has_wiki', 'homepage', 'hooks_url', 'html_url', 'id', 'issue_comment_url', 'issue_events_url', 'issues_url', 'keys_url', 'labels_url', 'language', 'languages_url', 'last_modified', 'legacy_search_issues', 'master_branch', 'merge', 'merges_url', 'milestones_url', 'mirror_url', 'name', 'network_count', 'notifications_url', 'open_issues', 'open_issues_count', 'organization', 'owner', 'parent', 'permissions', 'private', 'pulls_url', 'pushed_at', 'raw_data', 'raw_headers', 'remove_from_collaborators', 'setCheckAfterInitFlag', 'size', 'source', 'ssh_url', 'stargazers_count', 'stargazers_url', 'statuses_url', 'subscribe_to_hub', 'subscribers_url', 'subscription_url', 'svn_url', 'tags_url', 'teams_url', 'trees_url', 'unsubscribe_from_hub', 'update', 'updated_at', 'url', 'watchers', 'watchers_count']
>>> ws.default_branch
u'master'
>>> ws.get_branches()
<github.PaginatedList.PaginatedList instance at 0x102a6ccf8>
>>> l=ws.get_branches()
>>> dir(l)
['_PaginatedListBase__elements', '_PaginatedListBase__fetchToIndex', '_PaginatedList__contentClass', '_PaginatedList__firstParams', '_PaginatedList__firstUrl', '_PaginatedList__nextParams', '_PaginatedList__nextUrl', '_PaginatedList__parseLinkHeader', '_PaginatedList__requester', '_PaginatedList__reverse', '_PaginatedList__totalCount', '_Slice', '__doc__', '__getitem__', '__init__', '__iter__', '__module__', '_couldGrow', '_fetchNextPage', '_getLastPageUrl', '_grow', '_isBiggerThan', '_reversed', 'get_page', 'reversed', 'totalCount']
>>> [a for a in ws.get_branches()]
[<github.Branch.Branch object at 0x102cadad0>]
>>> l=[a for a in ws.get_branches()]
>>> l
[<github.Branch.Branch object at 0x102b32950>]
>>> dir(l[0])
['CHECK_AFTER_INIT_FLAG', '_GithubObject__makeSimpleAttribute', '_GithubObject__makeSimpleListAttribute', '_GithubObject__makeTransformedAttribute', '__class__', '__delattr__', '__dict__', '__doc__', '__format__', '__getattribute__', '__hash__', '__init__', '__module__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_commit', '_completeIfNeeded', '_headers', '_initAttributes', '_makeBoolAttribute', '_makeClassAttribute', '_makeDatetimeAttribute', '_makeDictAttribute', '_makeDictOfStringsToClassesAttribute', '_makeIntAttribute', '_makeListOfClassesAttribute', '_makeListOfIntsAttribute', '_makeListOfListOfStringsAttribute', '_makeListOfStringsAttribute', '_makeStringAttribute', '_makeTimestampAttribute', '_name', '_parentUrl', '_rawData', '_requester', '_storeAndUseAttributes', '_useAttributes', 'commit', 'etag', 'last_modified', 'name', 'raw_data', 'raw_headers', 'setCheckAfterInitFlag']
>>> l[0].name
u'master'
>>> l[0].raw_data
{u'commit': {u'url': u'https://api.github.com/repos/cwittern/KR-Workspace/commits/2e1b3930edf8f913fc67f8d5065c9f63d408578d', u'sha': u'2e1b3930edf8f913fc67f8d5065c9f63d408578d'}, u'name': u'master'}
>>> m=ws.get_branch("master")
>>> m.name
u'master'
>>> m.raw_data
{u'commit': {u'committer': None, u'author': None, u'url': u'https://api.github.com/repos/cwittern/KR-Workspace/commits/2e1b3930edf8f913fc67f8d5065c9f63d408578d', u'comments_url': u'https://api.github.com/repos/cwittern/KR-Workspace/commits/2e1b3930edf8f913fc67f8d5065c9f63d408578d/comments', u'html_url': u'https://github.com/cwittern/KR-Workspace/commit/2e1b3930edf8f913fc67f8d5065c9f63d408578d', u'sha': u'2e1b3930edf8f913fc67f8d5065c9f63d408578d', u'parents': [{u'url': u'https://api.github.com/repos/cwittern/KR-Workspace/commits/db7aeffe4eb826ac84454efa06c5570c00c02810', u'sha': u'db7aeffe4eb826ac84454efa06c5570c00c02810', u'html_url': u'https://github.com/cwittern/KR-Workspace/commit/db7aeffe4eb826ac84454efa06c5570c00c02810'}], u'commit': {u'committer': {u'date': u'2015-10-06T06:41:54Z', u'name': u'Chris Wittern', u'email': u'chris@mbp3'}, u'author': {u'date': u'2015-10-06T06:41:54Z', u'name': u'Chris Wittern', u'email': u'chris@mbp3'}, u'url': u'https://api.github.com/repos/cwittern/KR-Workspace/git/commits/2e1b3930edf8f913fc67f8d5065c9f63d408578d', u'tree': {u'url': u'https://api.github.com/repos/cwittern/KR-Workspace/git/trees/0dbd32cff053fee95995c16ef177619d7beb856f', u'sha': u'0dbd32cff053fee95995c16ef177619d7beb856f'}, u'comment_count': 0, u'message': u'stubs for notes and texts'}}, u'_links': {u'self': u'https://api.github.com/repos/cwittern/KR-Workspace/branches/master', u'html': u'https://github.com/cwittern/KR-Workspace/tree/master'}, u'name': u'master'}
>>> dir(m)
['CHECK_AFTER_INIT_FLAG', '_GithubObject__makeSimpleAttribute', '_GithubObject__makeSimpleListAttribute', '_GithubObject__makeTransformedAttribute', '__class__', '__delattr__', '__dict__', '__doc__', '__format__', '__getattribute__', '__hash__', '__init__', '__module__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_commit', '_completeIfNeeded', '_headers', '_initAttributes', '_makeBoolAttribute', '_makeClassAttribute', '_makeDatetimeAttribute', '_makeDictAttribute', '_makeDictOfStringsToClassesAttribute', '_makeIntAttribute', '_makeListOfClassesAttribute', '_makeListOfIntsAttribute', '_makeListOfListOfStringsAttribute', '_makeListOfStringsAttribute', '_makeStringAttribute', '_makeTimestampAttribute', '_name', '_parentUrl', '_rawData', '_requester', '_storeAndUseAttributes', '_useAttributes', 'commit', 'etag', 'last_modified', 'name', 'raw_data', 'raw_headers', 'setCheckAfterInitFlag']
>>> m.tree
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'Branch' object has no attribute 'tree'
>>> m.commit
<github.Commit.Commit object at 0x102cadad0>
>>> dir(m.commit)
['CHECK_AFTER_INIT_FLAG', '_CompletableGithubObject__complete', '_CompletableGithubObject__completed', '_GithubObject__makeSimpleAttribute', '_GithubObject__makeSimpleListAttribute', '_GithubObject__makeTransformedAttribute', '__class__', '__delattr__', '__dict__', '__doc__', '__eq__', '__format__', '__getattribute__', '__hash__', '__init__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_author', '_comments_url', '_commit', '_committer', '_completeIfNeeded', '_completeIfNotSet', '_files', '_headers', '_html_url', '_identity', '_initAttributes', '_makeBoolAttribute', '_makeClassAttribute', '_makeDatetimeAttribute', '_makeDictAttribute', '_makeDictOfStringsToClassesAttribute', '_makeIntAttribute', '_makeListOfClassesAttribute', '_makeListOfIntsAttribute', '_makeListOfListOfStringsAttribute', '_makeListOfStringsAttribute', '_makeStringAttribute', '_makeTimestampAttribute', '_parentUrl', '_parents', '_rawData', '_requester', '_sha', '_stats', '_storeAndUseAttributes', '_url', '_useAttributes', 'author', 'comments_url', 'commit', 'committer', 'create_comment', 'create_status', 'etag', 'files', 'get_comments', 'get_statuses', 'html_url', 'last_modified', 'parents', 'raw_data', 'raw_headers', 'setCheckAfterInitFlag', 'sha', 'stats', 'update', 'url']
>>> m.commit.sha
u'2e1b3930edf8f913fc67f8d5065c9f63d408578d'
>>> nb=ws.create_git_ref("refs/head/cwittern", m.commit.sha)
>>> nb
<github.GitRef.GitRef object at 0x102b32e50>
>>> dir(nb)
['CHECK_AFTER_INIT_FLAG', '_CompletableGithubObject__complete', '_CompletableGithubObject__completed', '_GithubObject__makeSimpleAttribute', '_GithubObject__makeSimpleListAttribute', '_GithubObject__makeTransformedAttribute', '__class__', '__delattr__', '__dict__', '__doc__', '__eq__', '__format__', '__getattribute__', '__hash__', '__init__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_completeIfNeeded', '_completeIfNotSet', '_headers', '_initAttributes', '_makeBoolAttribute', '_makeClassAttribute', '_makeDatetimeAttribute', '_makeDictAttribute', '_makeDictOfStringsToClassesAttribute', '_makeIntAttribute', '_makeListOfClassesAttribute', '_makeListOfIntsAttribute', '_makeListOfListOfStringsAttribute', '_makeListOfStringsAttribute', '_makeStringAttribute', '_makeTimestampAttribute', '_object', '_parentUrl', '_rawData', '_ref', '_requester', '_storeAndUseAttributes', '_url', '_useAttributes', 'delete', 'edit', 'etag', 'last_modified', 'object', 'raw_data', 'raw_headers', 'ref', 'setCheckAfterInitFlag', 'update', 'url']
>>> nb.ref
u'refs/head/cwittern'
>>> nb.edit
<bound method GitRef.edit of <github.GitRef.GitRef object at 0x102b32e50>>
>>> nb.last_modified
>>> nb=ws.create_git_ref("refs/head/cwittern", m.commit.sha)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/Users/chris/.pyenv/versions/venv/lib/python2.7/site-packages/github/Repository.py", line 742, in create_git_ref
    input=post_parameters
  File "/Users/chris/.pyenv/versions/venv/lib/python2.7/site-packages/github/Requester.py", line 169, in requestJsonAndCheck
    return self.__check(*self.requestJson(verb, url, parameters, headers, input, cnx))
  File "/Users/chris/.pyenv/versions/venv/lib/python2.7/site-packages/github/Requester.py", line 177, in __check
    raise self.__createException(status, responseHeaders, output)
github.GithubException.GithubException: 422 {u'documentation_url': u'https://developer.github.com/v3/git/refs/#create-a-reference', u'message': u'Reference already exists'}
>>> [a for a in ws.get_branches()]
[<github.Branch.Branch object at 0x102b32cd0>]
>>> nb=ws.create_git_ref("refs/heads/cwittern", m.commit.sha)
>>> [a for a in ws.get_branches()]
[<github.Branch.Branch object at 0x102b32f10>, <github.Branch.Branch object at 0x102b32dd0>]
>>> l=[a for a in ws.get_branches() if a.name="master"]
  File "<stdin>", line 1
    l=[a for a in ws.get_branches() if a.name="master"]
                                             ^
SyntaxError: invalid syntax
>>> l=[a for a in ws.get_branches() if a.name=="master"]
>>> l[0]
<github.Branch.Branch object at 0x102b32f90>
>>> l[0].raw_data
{u'commit': {u'url': u'https://api.github.com/repos/cwittern/KR-Workspace/commits/2e1b3930edf8f913fc67f8d5065c9f63d408578d', u'sha': u'2e1b3930edf8f913fc67f8d5065c9f63d408578d'}, u'name': u'master'}
>>> l[0].raw_data["commit"]
{u'url': u'https://api.github.com/repos/cwittern/KR-Workspace/commits/2e1b3930edf8f913fc67f8d5065c9f63d408578d', u'sha': u'2e1b3930edf8f913fc67f8d5065c9f63d408578d'}
>>> l[0].raw_data["commit"]["sha"]
u'2e1b3930edf8f913fc67f8d5065c9f63d408578d'
>>> u.login
u'cwittern'
>> 
>>> rs=ws.edit(default_branch=u.login)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: edit() takes at least 2 arguments (2 given)
>>> ws
<github.Repository.Repository object at 0x102cbc450>
>>> ws.name
u'KR-Workspace'
>>> rs=ws.edit(name=ws.name, default_branch=u.login)
>>> url
'https://raw.githubusercontent.com/cwittern/KR-Workspace/cwittern/Settings/kanripo.cfg'
>>> r
<github.PaginatedList.PaginatedList instance at 0x1029e35f0>
>>> import requests
>>> r=requests(url)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: 'module' object is not callable
>>> r=requests.get(url)
>>> dir(r)
['__attrs__', '__bool__', '__class__', '__delattr__', '__dict__', '__doc__', '__format__', '__getattribute__', '__getstate__', '__hash__', '__init__', '__iter__', '__module__', '__new__', '__nonzero__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__setstate__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_content', '_content_consumed', 'apparent_encoding', 'close', 'connection', 'content', 'cookies', 'elapsed', 'encoding', 'headers', 'history', 'iter_content', 'iter_lines', 'json', 'links', 'ok', 'raise_for_status', 'raw', 'reason', 'request', 'status_code', 'text', 'url']
>>> r.status_code
200
>>> r.content
'#user settings for the kanripo website at https://www.kanripo.org'
>>> f = ws.get_contents("cwittern/Settings/kanripo.cfg")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/Users/chris/.pyenv/versions/venv/lib/python2.7/site-packages/github/Repository.py", line 1170, in get_contents
    return self.get_file_contents(path, ref)
  File "/Users/chris/.pyenv/versions/venv/lib/python2.7/site-packages/github/Repository.py", line 1187, in get_file_contents
    parameters=url_parameters
  File "/Users/chris/.pyenv/versions/venv/lib/python2.7/site-packages/github/Requester.py", line 169, in requestJsonAndCheck
    return self.__check(*self.requestJson(verb, url, parameters, headers, input, cnx))
  File "/Users/chris/.pyenv/versions/venv/lib/python2.7/site-packages/github/Requester.py", line 177, in __check
    raise self.__createException(status, responseHeaders, output)
github.GithubException.UnknownObjectException: 404 {u'documentation_url': u'https://developer.github.com/v3', u'message': u'Not Found'}
>>> f = ws.get_contents("Settings/kanripo.cfg")
>>> dir(f)
['CHECK_AFTER_INIT_FLAG', '_CompletableGithubObject__complete', '_CompletableGithubObject__completed', '_GithubObject__makeSimpleAttribute', '_GithubObject__makeSimpleListAttribute', '_GithubObject__makeTransformedAttribute', '__class__', '__delattr__', '__dict__', '__doc__', '__eq__', '__format__', '__getattribute__', '__hash__', '__init__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_completeIfNeeded', '_completeIfNotSet', '_content', '_encoding', '_git_url', '_headers', '_html_url', '_initAttributes', '_makeBoolAttribute', '_makeClassAttribute', '_makeDatetimeAttribute', '_makeDictAttribute', '_makeDictOfStringsToClassesAttribute', '_makeIntAttribute', '_makeListOfClassesAttribute', '_makeListOfIntsAttribute', '_makeListOfListOfStringsAttribute', '_makeListOfStringsAttribute', '_makeStringAttribute', '_makeTimestampAttribute', '_name', '_parentUrl', '_path', '_rawData', '_repository', '_requester', '_sha', '_size', '_storeAndUseAttributes', '_type', '_url', '_useAttributes', 'content', 'decoded_content', 'encoding', 'etag', 'git_url', 'html_url', 'last_modified', 'name', 'path', 'raw_data', 'raw_headers', 'repository', 'setCheckAfterInitFlag', 'sha', 'size', 'type', 'update', 'url']
>>> f.name
u'kanripo.cfg'
>>> f.raw_data
{u'name': u'kanripo.cfg', u'encoding': u'base64', u'url': u'https://api.github.com/repos/cwittern/KR-Workspace/contents/Settings/kanripo.cfg?ref=cwittern', u'html_url': u'https://github.com/cwittern/KR-Workspace/blob/cwittern/Settings/kanripo.cfg', u'download_url': u'https://raw.githubusercontent.com/cwittern/KR-Workspace/cwittern/Settings/kanripo.cfg', u'content': u'I3VzZXIgc2V0dGluZ3MgZm9yIHRoZSBrYW5yaXBvIHdlYnNpdGUgYXQgaHR0\ncHM6Ly93d3cua2Fucmlwby5vcmc=\n', u'sha': u'71ecec3f12f2b588928f41982edf8e016934d6db', u'_links': {u'self': u'https://api.github.com/repos/cwittern/KR-Workspace/contents/Settings/kanripo.cfg?ref=cwittern', u'git': u'https://api.github.com/repos/cwittern/KR-Workspace/git/blobs/71ecec3f12f2b588928f41982edf8e016934d6db', u'html': u'https://github.com/cwittern/KR-Workspace/blob/cwittern/Settings/kanripo.cfg'}, u'git_url': u'https://api.github.com/repos/cwittern/KR-Workspace/git/blobs/71ecec3f12f2b588928f41982edf8e016934d6db', u'path': u'Settings/kanripo.cfg', u'type': u'file', u'size': 65}
>>> f.content
u'I3VzZXIgc2V0dGluZ3MgZm9yIHRoZSBrYW5yaXBvIHdlYnNpdGUgYXQgaHR0\ncHM6Ly93d3cua2Fucmlwby5vcmc=\n'
>>> f.decoded_content
'#user settings for the kanripo website at https://www.kanripo.org'
>>> help(f.update)
Help on method update in module github.GithubObject:

update(self) method of github.ContentFile.ContentFile instance
    Check and update the object with conditional request
    :rtype: Boolean value indicating whether the object is changed

>>> c=f.edit("Test", f.decoded_content + "\nOrder=1")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'ContentFile' object has no attribute 'edit'
>>> import base64
>>> new = f.decoded_content + "\nOrder=1"
>>> base64.encode(new)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: encode() takes exactly 2 arguments (1 given)
>>> base64.b64encode(new)
'I3VzZXIgc2V0dGluZ3MgZm9yIHRoZSBrYW5yaXBvIHdlYnNpdGUgYXQgaHR0cHM6Ly93d3cua2Fucmlwby5vcmcKT3JkZXI9MQ=='
>>> base64.b64encode(f.decoded_content)
'I3VzZXIgc2V0dGluZ3MgZm9yIHRoZSBrYW5yaXBvIHdlYnNpdGUgYXQgaHR0cHM6Ly93d3cua2Fucmlwby5vcmc='
>>> base64.b64decode(f.content)
'#user settings for the kanripo website at https://www.kanripo.org'
>>> r.content
'#user settings for the kanripo website at https://www.kanripo.org'
>>> f
<github.ContentFile.ContentFile object at 0x102bef790>
>>> dir(f)
['CHECK_AFTER_INIT_FLAG', '_CompletableGithubObject__complete', '_CompletableGithubObject__completed', '_GithubObject__makeSimpleAttribute', '_GithubObject__makeSimpleListAttribute', '_GithubObject__makeTransformedAttribute', '__class__', '__delattr__', '__dict__', '__doc__', '__eq__', '__format__', '__getattribute__', '__hash__', '__init__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_completeIfNeeded', '_completeIfNotSet', '_content', '_encoding', '_git_url', '_headers', '_html_url', '_initAttributes', '_makeBoolAttribute', '_makeClassAttribute', '_makeDatetimeAttribute', '_makeDictAttribute', '_makeDictOfStringsToClassesAttribute', '_makeIntAttribute', '_makeListOfClassesAttribute', '_makeListOfIntsAttribute', '_makeListOfListOfStringsAttribute', '_makeListOfStringsAttribute', '_makeStringAttribute', '_makeTimestampAttribute', '_name', '_parentUrl', '_path', '_rawData', '_repository', '_requester', '_sha', '_size', '_storeAndUseAttributes', '_type', '_url', '_useAttributes', 'content', 'decoded_content', 'encoding', 'etag', 'git_url', 'html_url', 'last_modified', 'name', 'path', 'raw_data', 'raw_headers', 'repository', 'setCheckAfterInitFlag', 'sha', 'size', 'type', 'update', 'url']
>>> f.raw_data
{u'name': u'kanripo.cfg', u'encoding': u'base64', u'url': u'https://api.github.com/repos/cwittern/KR-Workspace/contents/Settings/kanripo.cfg?ref=cwittern', u'html_url': u'https://github.com/cwittern/KR-Workspace/blob/cwittern/Settings/kanripo.cfg', u'download_url': u'https://raw.githubusercontent.com/cwittern/KR-Workspace/cwittern/Settings/kanripo.cfg', u'content': u'I3VzZXIgc2V0dGluZ3MgZm9yIHRoZSBrYW5yaXBvIHdlYnNpdGUgYXQgaHR0\ncHM6Ly93d3cua2Fucmlwby5vcmc=\n', u'sha': u'71ecec3f12f2b588928f41982edf8e016934d6db', u'_links': {u'self': u'https://api.github.com/repos/cwittern/KR-Workspace/contents/Settings/kanripo.cfg?ref=cwittern', u'git': u'https://api.github.com/repos/cwittern/KR-Workspace/git/blobs/71ecec3f12f2b588928f41982edf8e016934d6db', u'html': u'https://github.com/cwittern/KR-Workspace/blob/cwittern/Settings/kanripo.cfg'}, u'git_url': u'https://api.github.com/repos/cwittern/KR-Workspace/git/blobs/71ecec3f12f2b588928f41982edf8e016934d6db', u'path': u'Settings/kanripo.cfg', u'type': u'file', u'size': 65}
>>> help(requests.put)
Help on function put in module requests.api:

put(url, data=None, **kwargs)
    Sends a PUT request. Returns :class:`Response` object.
    
    :param url: URL for the new :class:`Request` object.
    :param data: (optional) Dictionary, bytes, or file-like object to send in the body of the :class:`Request`.
    :param \*\*kwargs: Optional arguments that ``request`` takes.

>>> t=requests.put("https://api.github.com/repos/cwittern/KR-Workspace/contents/", data={'path' : 'Settings/kanripo.cfg', 'message' : 'Test', 'content' : 'I3VzZXIgc2V0dGluZ3MgZm9yIHRoZSBrYW5yaXBvIHdlYnNpdGUgYXQgaHR0cHM6Ly93d3cua2Fucmlwby5vcmcKT3JkZXI9MQ==', 'sha' : '71ecec3f12f2b588928f41982edf8e016934d6db'})
>>> t
<Response [404]>
>>> t.raw
<requests.packages.urllib3.response.HTTPResponse object at 0x102c08690>
>>> dir(t)
['__attrs__', '__bool__', '__class__', '__delattr__', '__dict__', '__doc__', '__format__', '__getattribute__', '__getstate__', '__hash__', '__init__', '__iter__', '__module__', '__new__', '__nonzero__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__setstate__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_content', '_content_consumed', 'apparent_encoding', 'close', 'connection', 'content', 'cookies', 'elapsed', 'encoding', 'headers', 'history', 'iter_content', 'iter_lines', 'json', 'links', 'ok', 'raise_for_status', 'raw', 'reason', 'request', 'status_code', 'text', 'url']
>>> t.headers
CaseInsensitiveDict({'status': '404 Not Found', 'x-ratelimit-remaining': '59', 'x-github-media-type': 'github.v3', 'x-content-type-options': 'nosniff', 'content-security-policy': "default-src 'none'", 'access-control-expose-headers': 'ETag, Link, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval', 'transfer-encoding': 'chunked', 'x-github-request-id': '77E54762:17F5A:135390C4:56151234', 'strict-transport-security': 'max-age=31536000; includeSubdomains; preload', 'server': 'GitHub.com', 'content-encoding': 'gzip', 'x-ratelimit-limit': '60', 'x-xss-protection': '1; mode=block', 'access-control-allow-credentials': 'true', 'date': 'Wed, 07 Oct 2015 12:38:14 GMT', 'x-frame-options': 'deny', 'content-type': 'application/json; charset=utf-8', 'access-control-allow-origin': '*', 'x-ratelimit-reset': '1444225094'})
>>> headers = {'X-Auth-Token': token           }
>>> t=requests.put("https://api.github.com/repos/cwittern/KR-Workspace/contents/", data={'path' : 'Settings/kanripo.cfg', 'message' : 'Test', 'content' : 'I3VzZXIgc2V0dGluZ3MgZm9yIHRoZSBrYW5yaXBvIHdlYnNpdGUgYXQgaHR0cHM6Ly93d3cua2Fucmlwby5vcmcKT3JkZXI9MQ==', 'sha' : '71ecec3f12f2b588928f41982edf8e016934d6db'}, headers=headers )
>>> t
<Response [404]>
>>> t=requests.put("https://api.github.com/repos/cwittern/KR-Workspace/contents/Settings/kanripo.cfg", data={'path' : 'Settings/kanripo.cfg', 'message' : 'Test', 'content' : 'I3VzZXIgc2V0dGluZ3MgZm9yIHRoZSBrYW5yaXBvIHdlYnNpdGUgYXQgaHR0cHM6Ly93d3cua2Fucmlwby5vcmcKT3JkZXI9MQ==', 'sha' : '71ecec3f12f2b588928f41982edf8e016934d6db'}, headers=headers )
>>> t
<Response [404]>
>>> t.headers
CaseInsensitiveDict({'status': '404 Not Found', 'x-ratelimit-remaining': '57', 'x-github-media-type': 'github.v3', 'x-content-type-options': 'nosniff', 'content-security-policy': "default-src 'none'", 'access-control-expose-headers': 'ETag, Link, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval', 'transfer-encoding': 'chunked', 'x-github-request-id': '77E54762:17691:130A9725:561513F2', 'strict-transport-security': 'max-age=31536000; includeSubdomains; preload', 'server': 'GitHub.com', 'content-encoding': 'gzip', 'x-ratelimit-limit': '60', 'x-xss-protection': '1; mode=block', 'access-control-allow-credentials': 'true', 'date': 'Wed, 07 Oct 2015 12:45:39 GMT', 'x-frame-options': 'deny', 'content-type': 'application/json; charset=utf-8', 'access-control-allow-origin': '*', 'x-ratelimit-reset': '1444225094'})
>>> t=requests.put("https://api.github.com/repos/cwittern/KR-Workspace/contents/Settings/kanripo.cfg", data={'message' : 'Test', 'content' : 'I3VzZXIgc2V0dGluZ3MgZm9yIHRoZSBrYW5yaXBvIHdlYnNpdGUgYXQgaHR0cHM6Ly93d3cua2Fucmlwby5vcmcKT3JkZXI9MQ==', 'sha' : '71ecec3f12f2b588928f41982edf8e016934d6db'}, headers=headers )
>>> t
<Response [404]>
>>> token
'b7254056c49642977850667b9022f092bf79a956'
>>> headers = {'X-Auth-Token': 'b7254056c49642977850667b9022f092bf79a956'}
>>> t=requests.put("https://api.github.com/repos/cwittern/KR-Workspace/contents/Settings/kanripo.cfg", data={'message' : 'Test', 'content' : 'I3VzZXIgc2V0dGluZ3MgZm9yIHRoZSBrYW5yaXBvIHdlYnNpdGUgYXQgaHR0cHM6Ly93d3cua2Fucmlwby5vcmcKT3JkZXI9MQ==', 'sha' : '71ecec3f12f2b588928f41982edf8e016934d6db'}, headers={'X-Auth-Token': 'b7254056c49642977850667b9022f092bf79a956'} )
>>> t
<Response [404]>
>>> dir(github)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'github' is not defined
>>> dir(Github)
['FIX_REPO_GET_GIT_REF', '_Github__get_FIX_REPO_GET_GIT_REF', '_Github__get_per_page', '_Github__set_FIX_REPO_GET_GIT_REF', '_Github__set_per_page', '__class__', '__delattr__', '__dict__', '__doc__', '__format__', '__getattribute__', '__hash__', '__init__', '__module__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', 'create_from_raw_data', 'dump', 'get_api_status', 'get_api_status_messages', 'get_emojis', 'get_gist', 'get_gists', 'get_gitignore_template', 'get_gitignore_templates', 'get_hook', 'get_hooks', 'get_last_api_status_message', 'get_organization', 'get_rate_limit', 'get_repo', 'get_repos', 'get_user', 'get_users', 'legacy_search_repos', 'legacy_search_user_by_email', 'legacy_search_users', 'load', 'oauth_scopes', 'per_page', 'rate_limiting', 'rate_limiting_resettime', 'render_markdown', 'search_code', 'search_issues', 'search_repositories', 'search_users']
>>> help(Github)
Help on class Github in module github.MainClass:

class Github(__builtin__.object)
 |  This is the main class you instanciate to access the Github API v3. Optional parameters allow different authentication methods.
 |  
 |  Methods defined here:
 |  
 |  __init__(self, login_or_token=None, password=None, base_url='https://api.github.com', timeout=10, client_id=None, client_secret=None, user_agent='PyGithub/Python', per_page=30)
 |      :param login_or_token: string
 |      :param password: string
 |      :param base_url: string
 |      :param timeout: integer
 |      :param client_id: string
 |      :param client_secret: string
 |      :param user_agent: string
 |      :param per_page: int
 |  
 |  create_from_raw_data(self, klass, raw_data, headers={})
 |      Creates an object from raw_data previously obtained by :attr:`github.GithubObject.GithubObject.raw_data`,
 |      and optionaly headers previously obtained by :attr:`github.GithubObject.GithubObject.raw_headers`.
 |      
 |      :param klass: the class of the object to create
 |      :param raw_data: dict
 |      :param headers: dict
 |      :rtype: instance of class ``klass``
 |  
 |  dump(self, obj, file, protocol=0)
 |      Dumps (pickles) a PyGithub object to a file-like object.
 |      Some effort is made to not pickle sensitive informations like the Github credentials used in the :class:`Github` instance.
 |      But NO EFFORT is made to remove sensitive information from the object's attributes.
 |      
 |      :param obj: the object to pickle
 |      :param file: the file-like object to pickle to
 |      :param protocol: the `pickling protocol <http://docs.python.org/2.7/library/pickle.html#data-stream-format>`_
 |  
 |  get_api_status(self)
 |      This doesn't work with a Github Enterprise installation, because it always targets https://status.github.com.
 |      
 |      :calls: `GET /api/status.json <https://status.github.com/api>`_
 |      :rtype: :class:`github.Status.Status`
 |  
 |  get_api_status_messages(self)
 |      This doesn't work with a Github Enterprise installation, because it always targets https://status.github.com.
 |      
 |      :calls: `GET /api/messages.json <https://status.github.com/api>`_
 |      :rtype: list of :class:`github.StatusMessage.StatusMessage`
 |  
 |  get_emojis(self)
 |      :calls: `GET /emojis <http://developer.github.com/v3/emojis/>`_
 |      :rtype: dictionary of type => url for emoji`
 |  
 |  get_gist(self, id)
 |      :calls: `GET /gists/:id <http://developer.github.com/v3/gists>`_
 |      :param id: string
 |      :rtype: :class:`github.Gist.Gist`
 |  
 |  get_gists(self)
 |      :calls: `GET /gists/public <http://developer.github.com/v3/gists>`_
 |      :rtype: :class:`github.PaginatedList.PaginatedList` of :class:`github.Gist.Gist`
 |  
 |  get_gitignore_template(self, name)
 |      :calls: `GET /gitignore/templates/:name <http://developer.github.com/v3/gitignore>`_
 |      :rtype: :class:`github.GitignoreTemplate.GitignoreTemplate`
 |  
 |  get_gitignore_templates(self)
 |      :calls: `GET /gitignore/templates <http://developer.github.com/v3/gitignore>`_
 |      :rtype: list of string
 |  
 |  get_hook(self, name)
 |      :calls: `GET /hooks/:name <http://developer.github.com/v3/repos/hooks/>`_
 |      :param name: string
 |      :rtype: :class:`github.HookDescription.HookDescription`
 |  
 |  get_hooks(self)
 |      :calls: `GET /hooks <http://developer.github.com/v3/repos/hooks/>`_
 |      :rtype: list of :class:`github.HookDescription.HookDescription`
 |  
 |  get_last_api_status_message(self)
 |      This doesn't work with a Github Enterprise installation, because it always targets https://status.github.com.
 |      
 |      :calls: `GET /api/last-message.json <https://status.github.com/api>`_
 |      :rtype: :class:`github.StatusMessage.StatusMessage`
 |  
 |  get_organization(self, login)
 |      :calls: `GET /orgs/:org <http://developer.github.com/v3/orgs>`_
 |      :param login: string
 |      :rtype: :class:`github.Organization.Organization`
 |  
 |  get_rate_limit(self)
 |      Don't forget you can access the rate limit returned in headers of last Github API v3 response, by :attr:`github.MainClass.Github.rate_limiting` and :attr:`github.MainClass.Github.rate_limiting_resettime`.
 |      
 |      :calls: `GET /rate_limit <http://developer.github.com/v3/rate_limit>`_
 |      :rtype: :class:`github.RateLimit.RateLimit`
 |  
 |  get_repo(self, full_name_or_id)
 |      :calls: `GET /repos/:owner/:repo <http://developer.github.com/v3/repos>`_ or `GET /repositories/:id <http://developer.github.com/v3/repos>`_
 |      :rtype: :class:`github.Repository.Repository`
 |  
 |  get_repos(self, since=NotSet)
 |      :calls: `GET /repositories <http://developer.github.com/v3/repos/#list-all-public-repositories>`_
 |      :param since: integer
 |      :rtype: :class:`github.PaginatedList.PaginatedList` of :class:`github.Repository.Repository`
 |  
 |  get_user(self, login=NotSet)
 |      :calls: `GET /users/:user <http://developer.github.com/v3/users>`_ or `GET /user <http://developer.github.com/v3/users>`_
 |      :param login: string
 |      :rtype: :class:`github.NamedUser.NamedUser`
 |  
 |  get_users(self, since=NotSet)
 |      :calls: `GET /users <http://developer.github.com/v3/users>`_
 |      :param since: integer
 |      :rtype: :class:`github.PaginatedList.PaginatedList` of :class:`github.NamedUser.NamedUser`
 |  
 |  legacy_search_repos(self, keyword, language=NotSet)
 |      :calls: `GET /legacy/repos/search/:keyword <http://developer.github.com/v3/search/legacy>`_
 |      :param keyword: string
 |      :param language: string
 |      :rtype: :class:`github.PaginatedList.PaginatedList` of :class:`github.Repository.Repository`
 |  
 |  legacy_search_user_by_email(self, email)
 |      :calls: `GET /legacy/user/email/:email <http://developer.github.com/v3/search/legacy>`_
 |      :param email: string
 |      :rtype: :class:`github.NamedUser.NamedUser`
 |  
 |  legacy_search_users(self, keyword)
 |      :calls: `GET /legacy/user/search/:keyword <http://developer.github.com/v3/search/legacy>`_
 |      :param keyword: string
 |      :rtype: :class:`github.PaginatedList.PaginatedList` of :class:`github.NamedUser.NamedUser`
 |  
 |  load(self, f)
 |      Loads (unpickles) a PyGithub object from a file-like object.
 |      
 |      :param f: the file-like object to unpickle from
 |      :return: the unpickled object
 |  
 |  render_markdown(self, text, context=NotSet)
 |      :calls: `POST /markdown <http://developer.github.com/v3/markdown>`_
 |      :param text: string
 |      :param context: :class:`github.Repository.Repository`
 |      :rtype: string
 |  
 |  search_code(self, query, sort=NotSet, order=NotSet, **qualifiers)
 |      :calls: `GET /search/code <http://developer.github.com/v3/search>`_
 |      :param query: string
 |      :param sort: string ('indexed')
 |      :param order: string ('asc', 'desc')
 |      :param qualifiers: keyword dict query qualifiers
 |      :rtype: :class:`github.PaginatedList.PaginatedList` of :class:`github.ContentFile.ContentFile`
 |  
 |  search_issues(self, query, sort=NotSet, order=NotSet, **qualifiers)
 |      :calls: `GET /search/issues <http://developer.github.com/v3/search>`_
 |      :param query: string
 |      :param sort: string ('comments', 'created', 'updated')
 |      :param order: string ('asc', 'desc')
 |      :param qualifiers: keyword dict query qualifiers
 |      :rtype: :class:`github.PaginatedList.PaginatedList` of :class:`github.Issue.Issue`
 |  
 |  search_repositories(self, query, sort=NotSet, order=NotSet, **qualifiers)
 |      :calls: `GET /search/repositories <http://developer.github.com/v3/search>`_
 |      :param query: string
 |      :param sort: string ('stars', 'forks', 'updated')
 |      :param order: string ('asc', 'desc')
 |      :param qualifiers: keyword dict query qualifiers
 |      :rtype: :class:`github.PaginatedList.PaginatedList` of :class:`github.Repository.Repository`
 |  
 |  search_users(self, query, sort=NotSet, order=NotSet, **qualifiers)
 |      :calls: `GET /search/users <http://developer.github.com/v3/search>`_
 |      :param query: string
 |      :param sort: string ('followers', 'repositories', 'joined')
 |      :param order: string ('asc', 'desc')
 |      :param qualifiers: keyword dict query qualifiers
 |      :rtype: :class:`github.PaginatedList.PaginatedList` of :class:`github.NamedUser.NamedUser`
 |  
 |  ----------------------------------------------------------------------
 |  Data descriptors defined here:
 |  
 |  FIX_REPO_GET_GIT_REF
 |      :type: bool
 |  
 |  __dict__
 |      dictionary for instance variables (if defined)
 |  
 |  __weakref__
 |      list of weak references to the object (if defined)
 |  
 |  oauth_scopes
 |      :type: list of string
 |  
 |  per_page
 |      :type: int
 |  
 |  rate_limiting
 |      First value is requests remaining, second value is request limit.
 |      :type: (int, int)
 |  
 |  rate_limiting_resettime
 |      Unix timestamp indicating when rate limiting will reset.
 |      :type: int

>>> line=u"KR1a0001 @H15-23-0084 周易(正文)--"
>>> f = line.split()
>>> f.insert(1, "@TODO")
>>> f
[u'KR1a0001', '@TODO', u'@H15-23-0084', u'\u5468\u6613(\u6b63\u6587)--']
>>> " ".join(f)
u'KR1a0001 @TODO @H15-23-0084 \u5468\u6613(\u6b63\u6587)--'
>>> p="/Users/Shared/krpdev/gh/KR1b/KR1b0003"
>>> p
'/Users/Shared/krpdev/gh/KR1b/KR1b0003'
>>> import os
>>> os.path.exists(p)
True
>>> from .. import redis_store
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
ValueError: Attempted relative import in non-package
>>> import redis_store
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
ImportError: No module named redis_store
>>> import redis
>>> myhost = 'localhost'
>>> pool = redis.ConnectionPool(host=myhost, port=6397, db=5)
>>> r = redis.Redis(connection_pool=pool)
>>> cat = [r.hgetall(a) for a in r.keys("kr:catalog*")]
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/Users/chris/.pyenv/versions/venv/lib/python2.7/site-packages/redis/client.py", line 919, in keys
    return self.execute_command('KEYS', pattern)
  File "/Users/chris/.pyenv/versions/venv/lib/python2.7/site-packages/redis/client.py", line 570, in execute_command
    connection.send_command(*args)
  File "/Users/chris/.pyenv/versions/venv/lib/python2.7/site-packages/redis/connection.py", line 556, in send_command
    self.send_packed_command(self.pack_command(*args))
  File "/Users/chris/.pyenv/versions/venv/lib/python2.7/site-packages/redis/connection.py", line 532, in send_packed_command
    self.connect()
  File "/Users/chris/.pyenv/versions/venv/lib/python2.7/site-packages/redis/connection.py", line 436, in connect
    raise ConnectionError(self._error_message(e))
redis.exceptions.ConnectionError: Error 61 connecting to localhost:6397. Connection refused.
>>> pool = redis.ConnectionPool(host=myhost, port=6379, db=5)
>>> r = redis.Redis(connection_pool=pool)
>>> cat = [r.hgetall(a) for a in r.keys("kr:catalog*")]
>>> cat
[]
>>> cat = [r.hgetall(a) for a in r.keys("kr:meta:TODO*")]
>>> len(cat)
1184
>>> len(cat)
1184
>>> exit()
(venv)Thu Oct 08 14:47:51 [15128]
  chris@mbp3a-2:mdweb.chw3 (chw3) % python
Python 2.7.10 (default, Sep 10 2015, 16:32:11) 
[GCC 4.2.1 Compatible Apple LLVM 6.0 (clang-600.0.57)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
>>> from github import Github
>>> token="b7254056c49642977850667b9022f092bf79a956"
>>> url="https://raw.githubusercontent.com/cwittern/KR-Workspace/cwittern/Settings/kanripo.cfg"
>>> g = Github("cwittern")
>>> dir(g)
['FIX_REPO_GET_GIT_REF', '_Github__get_FIX_REPO_GET_GIT_REF', '_Github__get_per_page', '_Github__requester', '_Github__set_FIX_REPO_GET_GIT_REF', '_Github__set_per_page', '__class__', '__delattr__', '__dict__', '__doc__', '__format__', '__getattribute__', '__hash__', '__init__', '__module__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', 'create_from_raw_data', 'dump', 'get_api_status', 'get_api_status_messages', 'get_emojis', 'get_gist', 'get_gists', 'get_gitignore_template', 'get_gitignore_templates', 'get_hook', 'get_hooks', 'get_last_api_status_message', 'get_organization', 'get_rate_limit', 'get_repo', 'get_repos', 'get_user', 'get_users', 'legacy_search_repos', 'legacy_search_user_by_email', 'legacy_search_users', 'load', 'oauth_scopes', 'per_page', 'rate_limiting', 'rate_limiting_resettime', 'render_markdown', 'search_code', 'search_issues', 'search_repositories', 'search_users']
>>> g=Github(token)
>>> r=u.get_repos()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'u' is not defined
>>> u=g.get_user()
>>> r=u.get_repos()
>>> rp=g.get_repo("KR-Workspace")
>>> rp
<github.Repository.Repository object at 0x1053fcc10>
>>> ws=u.create_fork(g.get_repo("kanripo/KR-Workspace"))
>>> ws
<github.Repository.Repository object at 0x1054612d0>
>>> ws.default_branch
u'cwittern'
>>> f = ws.get_contents("cwittern/Settings/kanripo.cfg")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/Users/chris/src/PyGithub/github/Repository.py", line 1233, in get_contents
    return self.get_file_contents(path, ref)
  File "/Users/chris/src/PyGithub/github/Repository.py", line 1251, in get_file_contents
    parameters=url_parameters
  File "/Users/chris/src/PyGithub/github/Requester.py", line 171, in requestJsonAndCheck
    return self.__check(*self.requestJson(verb, url, parameters, headers, input, cnx))
  File "/Users/chris/src/PyGithub/github/Requester.py", line 179, in __check
    raise self.__createException(status, responseHeaders, output)
github.GithubException.UnknownObjectException: 404 {u'documentation_url': u'https://developer.github.com/v3', u'message': u'Not Found'}
>>> f = ws.get_contents("Settings/kanripo.cfg")
>>> f
<github.ContentFile.ContentFile object at 0x1054084d0>
>>> dir(f)
['CHECK_AFTER_INIT_FLAG', '_CompletableGithubObject__complete', '_CompletableGithubObject__completed', '_GithubObject__makeSimpleAttribute', '_GithubObject__makeSimpleListAttribute', '_GithubObject__makeTransformedAttribute', '__class__', '__delattr__', '__dict__', '__doc__', '__eq__', '__format__', '__getattribute__', '__hash__', '__init__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_completeIfNeeded', '_completeIfNotSet', '_content', '_encoding', '_git_url', '_headers', '_html_url', '_initAttributes', '_makeBoolAttribute', '_makeClassAttribute', '_makeDatetimeAttribute', '_makeDictAttribute', '_makeDictOfStringsToClassesAttribute', '_makeIntAttribute', '_makeListOfClassesAttribute', '_makeListOfIntsAttribute', '_makeListOfListOfStringsAttribute', '_makeListOfStringsAttribute', '_makeStringAttribute', '_makeTimestampAttribute', '_name', '_parentUrl', '_path', '_rawData', '_repository', '_requester', '_sha', '_size', '_storeAndUseAttributes', '_type', '_url', '_useAttributes', 'content', 'decoded_content', 'encoding', 'etag', 'git_url', 'html_url', 'last_modified', 'name', 'path', 'raw_data', 'raw_headers', 'repository', 'setCheckAfterInitFlag', 'sha', 'size', 'type', 'update', 'url']
>>> help(f.update)
Help on method update in module github.GithubObject:

update(self) method of github.ContentFile.ContentFile instance
    Check and update the object with conditional request
    :rtype: Boolean value indicating whether the object is changed

>>> f = ws.get_contents("Settings/kanripo.cfg")
>>> f.update("Settings/kanripo.cfg", "Test", f.decoded_content + "\nOrder=1")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: update() takes exactly 1 argument (4 given)
>>> f.update_content("Settings/kanripo.cfg", "Test", f.decoded_content + "\nOrder=1")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'ContentFile' object has no attribute 'update_content'
>>> ws.update_content("Settings/kanripo.cfg", "Test", f.decoded_content + "\nOrder=1")
>>> ws.update_content("Settings/kanripo.cfg", "Test", f.decoded_content + "\nOrder=1")
>>> help(ws.update_content)
Help on method update_content in module github.Repository:

update_content(self, path, message, content, committer=None, sha=None, branch='master') method of github.Repository.Repository instance
    :calls: `PUT /repos/:owner/:repo/contents/:path <http://developer.github.com/v3/repos/contents/#update-a-file>`_
    :param path: string 
    :param message: string 
    :param content: string The updated file content, Base64 encoded.
    :param sha: string The blob SHA of the file being replaced.
    :param committer: NamedUser or AuthenticatedUser
    :param branch: string master if not stated
    :rtype: :class:`github.ContentFile.ContentFile`

>>> ws
<github.Repository.Repository object at 0x1054612d0>
>>> ws.default_branch
u'cwittern'
>>> ws.update_content("Settings/kanripo.cfg", "Test", f.decoded_content + "\nOrder=1", branch=ws.default_branch)
>>> ws.update_content("Settings/kanripo1.cfg", "Test", f.decoded_content + "\nOrder=1", branch=ws.default_branch)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/Users/chris/src/PyGithub/github/Repository.py", line 1063, in update_content
    sha = self.get_file_contents(path, branch).sha
  File "/Users/chris/src/PyGithub/github/Repository.py", line 1251, in get_file_contents
    parameters=url_parameters
  File "/Users/chris/src/PyGithub/github/Requester.py", line 171, in requestJsonAndCheck
    return self.__check(*self.requestJson(verb, url, parameters, headers, input, cnx))
  File "/Users/chris/src/PyGithub/github/Requester.py", line 179, in __check
    raise self.__createException(status, responseHeaders, output)
github.GithubException.UnknownObjectException: 404 {u'documentation_url': u'https://developer.github.com/v3', u'message': u'Not Found'}
>>> b=ws.create_git_blob(f.decoded_content + "\nOrder=1")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: create_git_blob() takes exactly 3 arguments (2 given)
>>> b=ws.create_git_blob(f.decoded_content + "\nOrder=1", "utf-8")
>>> b
<github.GitBlob.GitBlob object at 0x1054478d0>
>>> t=ws.create_git_tree(b)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/Users/chris/src/PyGithub/github/Repository.py", line 809, in create_git_tree
    assert all(isinstance(element, github.InputGitTreeElement) for element in tree), tree
TypeError: 'GitBlob' object is not iterable
>>> t=ws.create_git_tree([b])
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/Users/chris/src/PyGithub/github/Repository.py", line 809, in create_git_tree
    assert all(isinstance(element, github.InputGitTreeElement) for element in tree), tree
AssertionError: [<github.GitBlob.GitBlob object at 0x1054478d0>]
>>> dir(b)
['CHECK_AFTER_INIT_FLAG', '_CompletableGithubObject__complete', '_CompletableGithubObject__completed', '_GithubObject__makeSimpleAttribute', '_GithubObject__makeSimpleListAttribute', '_GithubObject__makeTransformedAttribute', '__class__', '__delattr__', '__dict__', '__doc__', '__eq__', '__format__', '__getattribute__', '__hash__', '__init__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_completeIfNeeded', '_completeIfNotSet', '_content', '_encoding', '_headers', '_initAttributes', '_makeBoolAttribute', '_makeClassAttribute', '_makeDatetimeAttribute', '_makeDictAttribute', '_makeDictOfStringsToClassesAttribute', '_makeIntAttribute', '_makeListOfClassesAttribute', '_makeListOfIntsAttribute', '_makeListOfListOfStringsAttribute', '_makeListOfStringsAttribute', '_makeStringAttribute', '_makeTimestampAttribute', '_parentUrl', '_rawData', '_requester', '_sha', '_size', '_storeAndUseAttributes', '_url', '_useAttributes', 'content', 'encoding', 'etag', 'last_modified', 'raw_data', 'raw_headers', 'setCheckAfterInitFlag', 'sha', 'size', 'update', 'url']
>>> b.raw_data
{u'url': u'https://api.github.com/repos/cwittern/KR-Workspace/git/blobs/2ccbcc6aba46fba74ea02b36ec2f7756d9556684', u'sha': u'2ccbcc6aba46fba74ea02b36ec2f7756d9556684'}
>>> gh
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'gh' is not defined
>>> g
<github.MainClass.Github object at 0x1053fcbd0>
>>> dir(g)
['FIX_REPO_GET_GIT_REF', '_Github__get_FIX_REPO_GET_GIT_REF', '_Github__get_per_page', '_Github__requester', '_Github__set_FIX_REPO_GET_GIT_REF', '_Github__set_per_page', '__class__', '__delattr__', '__dict__', '__doc__', '__format__', '__getattribute__', '__hash__', '__init__', '__module__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', 'create_from_raw_data', 'dump', 'get_api_status', 'get_api_status_messages', 'get_emojis', 'get_gist', 'get_gists', 'get_gitignore_template', 'get_gitignore_templates', 'get_hook', 'get_hooks', 'get_last_api_status_message', 'get_organization', 'get_rate_limit', 'get_repo', 'get_repos', 'get_user', 'get_users', 'legacy_search_repos', 'legacy_search_user_by_email', 'legacy_search_users', 'load', 'oauth_scopes', 'per_page', 'rate_limiting', 'rate_limiting_resettime', 'render_markdown', 'search_code', 'search_issues', 'search_repositories', 'search_users']
>>> exit()
(venv)Thu Oct 08 15:51:07 [15129]
  chris@mbp3a-2:mdweb.chw3 (chw3) % python
Python 2.7.10 (default, Sep 10 2015, 16:32:11) 
[GCC 4.2.1 Compatible Apple LLVM 6.0 (clang-600.0.57)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
>>> from github import Github
token="b7254056c49642977850667b9022f092bf79a956"
url="https://raw.githubusercontent.com/cwittern/KR-Workspace/cwittern/Settings/kanripo.cfg"
g=Github(token)
u=g.get_user()
r=u.get_repos()
ws=u.create_fork(g.get_repo("kanripo/KR-Workspace"))
f = ws.get_contents("cwittern/Settings/kanripo.cfg")

>>> >>> >>> >>> >>> >>> 
>>> Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/Users/chris/src/PyGithub/github/Repository.py", line 1266, in get_contents
    return self.get_file_contents(path, ref)
  File "/Users/chris/src/PyGithub/github/Repository.py", line 1284, in get_file_contents
    parameters=url_parameters
  File "/Users/chris/src/PyGithub/github/Requester.py", line 171, in requestJsonAndCheck
    return self.__check(*self.requestJson(verb, url, parameters, headers, input, cnx))
  File "/Users/chris/src/PyGithub/github/Requester.py", line 179, in __check
    raise self.__createException(status, responseHeaders, output)
github.GithubException.UnknownObjectException: 404 {u'documentation_url': u'https://developer.github.com/v3', u'message': u'Not Found'}
>>> >>> >>> f
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'f' is not defined
>>> f = ws.get_contents("Settings/kanripo.cfg")
>>> dir(ws)
['CHECK_AFTER_INIT_FLAG', '_CompletableGithubObject__complete', '_CompletableGithubObject__completed', '_GithubObject__makeSimpleAttribute', '_GithubObject__makeSimpleListAttribute', '_GithubObject__makeTransformedAttribute', '_Repository__create_pull', '_Repository__create_pull_1', '_Repository__create_pull_2', '__class__', '__delattr__', '__dict__', '__doc__', '__eq__', '__format__', '__getattribute__', '__hash__', '__init__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_archive_url', '_assignees_url', '_blobs_url', '_branches_url', '_clone_url', '_collaborators_url', '_comments_url', '_commits_url', '_compare_url', '_completeIfNeeded', '_completeIfNotSet', '_contents_url', '_contributors_url', '_created_at', '_default_branch', '_description', '_downloads_url', '_events_url', '_fork', '_forks', '_forks_count', '_forks_url', '_full_name', '_git_commits_url', '_git_refs_url', '_git_tags_url', '_git_url', '_has_downloads', '_has_issues', '_has_wiki', '_headers', '_homepage', '_hooks_url', '_html_url', '_hub', '_id', '_identity', '_initAttributes', '_issue_comment_url', '_issue_events_url', '_issues_url', '_keys_url', '_labels_url', '_language', '_languages_url', '_makeBoolAttribute', '_makeClassAttribute', '_makeDatetimeAttribute', '_makeDictAttribute', '_makeDictOfStringsToClassesAttribute', '_makeIntAttribute', '_makeListOfClassesAttribute', '_makeListOfIntsAttribute', '_makeListOfListOfStringsAttribute', '_makeListOfStringsAttribute', '_makeStringAttribute', '_makeTimestampAttribute', '_master_branch', '_merges_url', '_milestones_url', '_mirror_url', '_name', '_network_count', '_notifications_url', '_open_issues', '_open_issues_count', '_organization', '_owner', '_parent', '_parentUrl', '_permissions', '_private', '_pulls_url', '_pushed_at', '_rawData', '_requester', '_size', '_source', '_ssh_url', '_stargazers_count', '_stargazers_url', '_statuses_url', '_storeAndUseAttributes', '_subscribers_url', '_subscription_url', '_svn_url', '_tags_url', '_teams_url', '_trees_url', '_updated_at', '_url', '_useAttributes', '_watchers', '_watchers_count', 'add_to_collaborators', 'archive_url', 'assignees_url', 'blobs_url', 'branches_url', 'clone_url', 'collaborators_url', 'comments_url', 'commits_url', 'compare', 'compare_url', 'contents_url', 'contributors_url', 'create_content', 'create_git_blob', 'create_git_commit', 'create_git_ref', 'create_git_release', 'create_git_tag', 'create_git_tag_and_release', 'create_git_tree', 'create_hook', 'create_issue', 'create_key', 'create_label', 'create_milestone', 'create_pull', 'created_at', 'default_branch', 'delete', 'description', 'downloads_url', 'edit', 'etag', 'events_url', 'fork', 'forks', 'forks_count', 'forks_url', 'full_name', 'get_archive_link', 'get_assignees', 'get_branch', 'get_branches', 'get_collaborators', 'get_comment', 'get_comments', 'get_commit', 'get_commits', 'get_contents', 'get_contributors', 'get_dir_contents', 'get_download', 'get_downloads', 'get_events', 'get_file_contents', 'get_forks', 'get_git_blob', 'get_git_commit', 'get_git_ref', 'get_git_refs', 'get_git_tag', 'get_git_tree', 'get_hook', 'get_hooks', 'get_issue', 'get_issues', 'get_issues_comments', 'get_issues_event', 'get_issues_events', 'get_key', 'get_keys', 'get_label', 'get_labels', 'get_languages', 'get_milestone', 'get_milestones', 'get_network_events', 'get_pull', 'get_pulls', 'get_pulls_comments', 'get_pulls_review_comments', 'get_readme', 'get_release', 'get_releases', 'get_stargazers', 'get_stats_code_frequency', 'get_stats_commit_activity', 'get_stats_contributors', 'get_stats_participation', 'get_stats_punch_card', 'get_subscribers', 'get_tags', 'get_teams', 'get_watchers', 'git_commits_url', 'git_refs_url', 'git_tags_url', 'git_url', 'has_downloads', 'has_in_assignees', 'has_in_collaborators', 'has_issues', 'has_wiki', 'homepage', 'hooks_url', 'html_url', 'id', 'issue_comment_url', 'issue_events_url', 'issues_url', 'keys_url', 'labels_url', 'language', 'languages_url', 'last_modified', 'legacy_search_issues', 'master_branch', 'merge', 'merges_url', 'milestones_url', 'mirror_url', 'name', 'network_count', 'notifications_url', 'open_issues', 'open_issues_count', 'organization', 'owner', 'parent', 'permissions', 'private', 'pulls_url', 'pushed_at', 'raw_data', 'raw_headers', 'remove_from_collaborators', 'setCheckAfterInitFlag', 'size', 'source', 'ssh_url', 'stargazers_count', 'stargazers_url', 'statuses_url', 'subscribe_to_hub', 'subscribers_url', 'subscription_url', 'svn_url', 'tags_url', 'teams_url', 'trees_url', 'unsubscribe_from_hub', 'update', 'update_content', 'updated_at', 'url', 'watchers', 'watchers_count']
>>> help(ws.create_content)
Help on method create_content in module github.Repository:

create_content(self, path, message, content, committer=None, branch='master') method of github.Repository.Repository instance
    :calls: `PUT /repos/:owner/:repo/contents/:path <http://developer.github.com/v3/repos/contents/#create-a-file>`_
    :param path: string 
    :param message: string 
    :param content: string The updated file content, Base64 encoded.
    :param committer: NamedUser or AuthenticatedUser
    :param branch: string master if not stated
    :rtype: :class:`github.ContentFile.ContentFile`

>>> ws.create_content("Settings/test.cfg", "Another test", "This is the file content", branch=ws.default_branch)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/Users/chris/src/PyGithub/github/Repository.py", line 1098, in create_content
    assert isinstance(sha, (str, unicode)), sha 
NameError: global name 'sha' is not defined
>>> exit()
(venv)Thu Oct 08 15:56:17 [15130]
  chris@mbp3a-2:mdweb.chw3 (chw3) % python
Python 2.7.10 (default, Sep 10 2015, 16:32:11) 
[GCC 4.2.1 Compatible Apple LLVM 6.0 (clang-600.0.57)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
>>> from github import Github
token="b7254056c49642977850667b9022f092bf79a956"
url="https://raw.githubusercontent.com/cwittern/KR-Workspace/cwittern/Settings/kanripo.cfg"
g=Github(token)
u=g.get_user()
r=u.get_repos()
ws=u.create_fork(g.get_repo("kanripo/KR-Workspace"))
f = ws.get_contents("Settings/kanripo.cfg")
ws.create_content("Settings/test.cfg", "Another test", "This is the file content", branch=ws.default_branch)

>>> >>> >>> >>> >>> >>> >>> >>> >>> >>> 
>>> import redis
>>> myhost = 'localhost'
>>> pool = redis.ConnectionPool(host=myhost, port=6379, db=5)
>>> r = redis.Redis(connection_pool=pool)
>>> cat = [r.hgetall(a) for a in r.keys("kr:catalog*")]
>>> cat
[]
>>> cat = [r.hgetall(a) for a in r.keys("kr:meta*") if len(a.split(":")[-1]) < 8]
>>> cat
[{'TPUR': '\xe5\xa4\xaa\xe4\xb8\x8a\xe6\xb4\x9e\xe7\x8e\x84\xe9\x9d\x88\xe5\xaf\xb6\xe7\xa6\x8f\xe6\x97\xa5\xe5\xa6\x99\xe7\xb6\x93', 'TITLE': '\xe5\xa4\xaa\xe4\xb8\x8a\xe6\xb4\x9e\xe7\x8e\x84\xe9\x9d\x88\xe5\xaf\xb6\xe7\xa6\x8f\xe6\x97\xa5\xe5\xa6\x99\xe7\xb6\x93-\xe5\x94\x90-', 'ID': 'KR5b0039', 'DYNASTY': '\xe5\x94\x90'}, {'TPUR': '\xe7\x8e\x84\xe5\xaf\xb6\xe4\xba\xba\xe9\xb3\xa5\xe5\xb1\xb1\xe7\xb6\x93\xe5\x9c\x96', 'TITLE': '\xe7\x8e\x84\xe5\xaf\xb6\xe4\xba\xba\xe9\xb3\xa5\xe5\xb1\xb1\xe7\xb6\x93\xe5\x9c\x96--', 'ID': 'KR5b0118', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe9\x9d\x88\xe4\xbf\xa1\xe7\xb6\x93\xe6\x97\xa8', 'TITLE': '\xe9\x9d\x88\xe4\xbf\xa1\xe7\xb6\x93\xe6\x97\xa8-\xe5\xae\x8b-', 'ID': 'KR5g0234', 'DYNASTY': '\xe5\xae\x8b'}, {'TPUR': '\xe6\xb2\x96\xe8\x99\x9b\xe8\x87\xb3\xe5\xbe\xb7\xe7\x9c\x9f\xe7\xb6\x93', 'RESP': '\xe5\x88\x97\xe7\xa6\xa6\xe5\xaf\x87', 'TITLE': '\xe6\xb2\x96\xe8\x99\x9b\xe8\x87\xb3\xe5\xbe\xb7\xe7\x9c\x9f\xe7\xb6\x93--\xe5\x88\x97\xe7\xa6\xa6\xe5\xaf\x87', 'ID': 'KR5c0049', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe5\xa4\xaa\xe4\xb8\x8a\xe6\x98\x87\xe7\x8e\x84\xe6\xb6\x88\xe7\x81\xbd\xe8\xad\xb7\xe5\x91\xbd\xe5\xa6\x99\xe7\xb6\x93', 'TITLE': '\xe5\xa4\xaa\xe4\xb8\x8a\xe6\x98\x87\xe7\x8e\x84\xe6\xb6\x88\xe7\x81\xbd\xe8\xad\xb7\xe5\x91\xbd\xe5\xa6\x99\xe7\xb6\x93-\xe5\x94\x90-', 'ID': 'KR5a0019', 'DYNASTY': '\xe5\x94\x90'}, {'TPUR': '\xe7\xb4\xa0\xe5\x95\x8f\xe5\x85\xad\xe6\xb0\xa3\xe7\x8e\x84\xe7\x8f\xa0\xe5\xaf\x86\xe8\xaa\x9e', 'RESP': '\xe7\x8e\x8b\xe5\x86\xb0', 'TITLE': '\xe7\xb4\xa0\xe5\x95\x8f\xe5\x85\xad\xe6\xb0\xa3\xe7\x8e\x84\xe7\x8f\xa0\xe5\xaf\x86\xe8\xaa\x9e--\xe7\x8e\x8b\xe5\x86\xb0', 'ID': 'KR5d0045', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe8\x8d\x89\xe5\xa0\x82\xe9\x9b\x86', 'RESP': '\xe7\x8e\x8b\xe4\xb8\xb9\xe6\xa1\x82', 'TITLE': '\xe8\x8d\x89\xe5\xa0\x82\xe9\x9b\x86--\xe7\x8e\x8b\xe4\xb8\xb9\xe6\xa1\x82', 'ID': 'KR5e0045', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe4\xbf\xae\xe7\x9c\x9f\xe5\x8d\x81\xe6\x9b\xb8\xe4\xb8\x8a\xe6\xb8\x85\xe9\x9b\x86', 'RESP': '\xe7\x99\xbd\xe7\x8e\x89\xe8\x9f\xbe', 'TITLE': '\xe4\xbf\xae\xe7\x9c\x9f\xe5\x8d\x81\xe6\x9b\xb8\xe4\xb8\x8a\xe6\xb8\x85\xe9\x9b\x86--\xe7\x99\xbd\xe7\x8e\x89\xe8\x9f\xbe', 'ID': 'KR5a0270', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe4\xb8\x8a\xe6\xb8\x85\xe9\xbb\x83\xe5\xba\xad\xe9\xa4\x8a\xe7\xa5\x9e\xe7\xb6\x93', 'TITLE': '\xe4\xb8\x8a\xe6\xb8\x85\xe9\xbb\x83\xe5\xba\xad\xe9\xa4\x8a\xe7\xa5\x9e\xe7\xb6\x93-\xe5\x94\x90-', 'ID': 'KR5g0209', 'DYNASTY': '\xe5\x94\x90'}, {'TPUR': '\xe6\xb8\x85\xe6\xb2\xb3\xe5\x85\xa7\xe5\x82\xb3', 'TITLE': '\xe6\xb8\x85\xe6\xb2\xb3\xe5\x85\xa7\xe5\x82\xb3-\xe6\x98\x8e-', 'ID': 'KR5a0170', 'DYNASTY': '\xe6\x98\x8e'}, {'TPUR': '\xe5\xa4\xaa\xe5\xb9\xb3\xe7\xb6\x93', 'TITLE': '\xe5\xa4\xaa\xe5\xb9\xb3\xe7\xb6\x93-\xe5\x85\xad\xe6\x9c\x9d-', 'ID': 'KR5e0002', 'DYNASTY': '\xe5\x85\xad\xe6\x9c\x9d'}, {'TPUR': '\xe6\x98\x93\xe5\x9b\xa0\xe4\xb8\x8a\xe4\xb8\x8b\xe7\xb6\x93', 'RESP': '\xe6\x9d\x8e\xe8\xb4\x84', 'TITLE': '\xe6\x98\x93\xe5\x9b\xa0\xe4\xb8\x8a\xe4\xb8\x8b\xe7\xb6\x93--\xe6\x9d\x8e\xe8\xb4\x84', 'ID': 'KR5h0042', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe5\xa4\xaa\xe4\xb8\x8a\xe8\x80\x81\xe5\x90\x9b\xe8\xaa\xaa\xe5\xb8\xb8\xe6\xb8\x85\xe9\x9d\x9c\xe5\xa6\x99\xe7\xb6\x93\xe7\xba\x82\xe5\x9c\x96\xe8\xa7\xa3\xe8\xa8\xbb', 'RESP': '\xe7\x8e\x8b\xe7\x8e\xa0', 'TITLE': '\xe5\xa4\xaa\xe4\xb8\x8a\xe8\x80\x81\xe5\x90\x9b\xe8\xaa\xaa\xe5\xb8\xb8\xe6\xb8\x85\xe9\x9d\x9c\xe5\xa6\x99\xe7\xb6\x93\xe7\xba\x82\xe5\x9c\x96\xe8\xa7\xa3\xe8\xa8\xbb--\xe7\x8e\x8b\xe7\x8e\xa0', 'ID': 'KR5c0156', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe4\xbf\xae\xe7\x9c\x9f\xe5\x8d\x81\xe6\x9b\xb8\xe9\x9b\x9c\xe8\x91\x97\xe6\x8d\xb7\xe5\xbe\x91', 'TITLE': '\xe4\xbf\xae\xe7\x9c\x9f\xe5\x8d\x81\xe6\x9b\xb8\xe9\x9b\x9c\xe8\x91\x97\xe6\x8d\xb7\xe5\xbe\x91-\xe5\x85\x83-', 'ID': 'KR5a0267', 'DYNASTY': '\xe5\x85\x83'}, {'TPUR': '\xe7\xa3\xbb\xe6\xba\xaa\xe9\x9b\x86', 'RESP': '\xe4\xb8\x98\xe8\x99\x95\xe6\xa9\x9f', 'TITLE': '\xe7\xa3\xbb\xe6\xba\xaa\xe9\x9b\x86--\xe4\xb8\x98\xe8\x99\x95\xe6\xa9\x9f', 'ID': 'KR5e0061', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe9\x9d\x88\xe5\xaf\xb6\xe6\xb7\xa8\xe6\x98\x8e\xe5\xa4\xa9\xe6\xa8\x9e\xe9\x99\xa2\xe9\x83\xbd\xe5\x8f\xb8\xe6\xb3\x95\xe9\x99\xa2\xe9\xa0\x88\xe7\x9f\xa5\xe6\xb3\x95\xe6\x96\x87', 'TITLE': '\xe9\x9d\x88\xe5\xaf\xb6\xe6\xb7\xa8\xe6\x98\x8e\xe5\xa4\xa9\xe6\xa8\x9e\xe9\x99\xa2\xe9\x83\xbd\xe5\x8f\xb8\xe6\xb3\x95\xe9\x99\xa2\xe9\xa0\x88\xe7\x9f\xa5\xe6\xb3\x95\xe6\x96\x87--', 'ID': 'KR5b0257', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe5\xa4\xaa\xe4\xb8\x8a\xe6\xb4\x9e\xe6\xb7\xb5\xe4\xb8\x89\xe6\x98\xa7\xe7\xa5\x9e\xe5\x92\x92\xe9\xbd\x8b\xe5\x8d\x81\xe6\x96\xb9\xe6\x87\xba\xe5\x84\x80', 'RESP': '\xe6\x9d\x9c\xe5\x85\x89\xe5\xba\xad', 'TITLE': '\xe5\xa4\xaa\xe4\xb8\x8a\xe6\xb4\x9e\xe6\xb7\xb5\xe4\xb8\x89\xe6\x98\xa7\xe7\xa5\x9e\xe5\x92\x92\xe9\xbd\x8b\xe5\x8d\x81\xe6\x96\xb9\xe6\x87\xba\xe5\x84\x80--\xe6\x9d\x9c\xe5\x85\x89\xe5\xba\xad', 'ID': 'KR5b0230', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe5\x94\x90\xe7\x8e\x84\xe5\xae\x97\xe5\xbe\xa1\xe8\xa3\xbd\xe9\x81\x93\xe5\xbe\xb7\xe7\x9c\x9f\xe7\xb6\x93\xe7\x96\x8f(\xe4\xb8\x80)', 'RESP': '\xe7\x8e\x84\xe5\xae\x97', 'TITLE': '\xe5\x94\x90\xe7\x8e\x84\xe5\xae\x97\xe5\xbe\xa1\xe8\xa3\xbd\xe9\x81\x93\xe5\xbe\xb7\xe7\x9c\x9f\xe7\xb6\x93\xe7\x96\x8f(\xe4\xb8\x80)-\xe5\x94\x90-\xe7\x8e\x84\xe5\xae\x97', 'ID': 'KR5c0060', 'DYNASTY': '\xe5\x94\x90'}, {'TPUR': '\xe4\xb8\x8a\xe6\xb8\x85\xe8\x8f\xaf\xe6\x99\xa8\xe4\xb8\x89\xe5\xa5\x94\xe7\x8e\x89\xe8\xa8\xa3', 'TITLE': '\xe4\xb8\x8a\xe6\xb8\x85\xe8\x8f\xaf\xe6\x99\xa8\xe4\xb8\x89\xe5\xa5\x94\xe7\x8e\x89\xe8\xa8\xa3-\xe5\x94\x90-', 'ID': 'KR5b0093', 'DYNASTY': '\xe5\x94\x90'}, {'TPUR': '\xe9\x86\xae\xe4\xb8\x89\xe6\xb4\x9e\xe7\x9c\x9f\xe6\x96\x87\xe4\xba\x94\xe6\xb3\x95\xe6\xad\xa3\xe4\xb8\x80\xe7\x9b\x9f\xe5\xa8\x81\xe7\xb1\x99\xe7\xab\x8b\xe6\x88\x90\xe5\x84\x80', 'RESP': '\xe5\xbc\xb5\xe8\x90\xac\xe7\xa6\x8f', 'TITLE': '\xe9\x86\xae\xe4\xb8\x89\xe6\xb4\x9e\xe7\x9c\x9f\xe6\x96\x87\xe4\xba\x94\xe6\xb3\x95\xe6\xad\xa3\xe4\xb8\x80\xe7\x9b\x9f\xe5\xa8\x81\xe7\xb1\x99\xe7\xab\x8b\xe6\x88\x90\xe5\x84\x80--\xe5\xbc\xb5\xe8\x90\xac\xe7\xa6\x8f', 'ID': 'KR5g0021', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe5\xa4\xaa\xe4\xb8\x8a\xe6\xb4\x9e\xe7\x8e\x84\xe9\x9d\x88\xe5\xaf\xb6\xe5\xa4\xa9\xe5\xb0\x8a\xe8\xaa\xaa\xe9\xa4\x8a\xe8\xa0\xb6\xe7\x87\x9f\xe7\xa8\xae\xe7\xb6\x93', 'TITLE': '\xe5\xa4\xaa\xe4\xb8\x8a\xe6\xb4\x9e\xe7\x8e\x84\xe9\x9d\x88\xe5\xaf\xb6\xe5\xa4\xa9\xe5\xb0\x8a\xe8\xaa\xaa\xe9\xa4\x8a\xe8\xa0\xb6\xe7\x87\x9f\xe7\xa8\xae\xe7\xb6\x93--', 'ID': 'KR5b0044', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe7\x84\xa1\xe8\x83\xbd\xe5\xad\x90', 'TITLE': '\xe7\x84\xa1\xe8\x83\xbd\xe5\xad\x90--', 'ID': 'KR5d0051', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe5\x85\x88\xe5\xa4\xa9\xe6\x96\x97\xe5\xb8\x9d\xe6\x95\x95\xe6\xbc\x94\xe7\x84\xa1\xe4\xb8\x8a\xe7\x8e\x84\xe5\x8a\x9f\xe9\x9d\x88\xe5\xa6\x99\xe7\x9c\x9f\xe7\xb6\x93', 'TITLE': '\xe5\x85\x88\xe5\xa4\xa9\xe6\x96\x97\xe5\xb8\x9d\xe6\x95\x95\xe6\xbc\x94\xe7\x84\xa1\xe4\xb8\x8a\xe7\x8e\x84\xe5\x8a\x9f\xe9\x9d\x88\xe5\xa6\x99\xe7\x9c\x9f\xe7\xb6\x93--', 'ID': 'KR5i0023', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe5\xa4\xaa\xe4\xb8\x8a\xe9\xa3\x9b\xe6\xad\xa5\xe5\x8d\x97\xe6\x96\x97\xe5\xa4\xaa\xe5\xbe\xae\xe7\x8e\x89\xe7\xb6\x93', 'TITLE': '\xe5\xa4\xaa\xe4\xb8\x8a\xe9\xa3\x9b\xe6\xad\xa5\xe5\x8d\x97\xe6\x96\x97\xe5\xa4\xaa\xe5\xbe\xae\xe7\x8e\x89\xe7\xb6\x93-\xe5\x94\x90-', 'ID': 'KR5c0019', 'DYNASTY': '\xe5\x94\x90'}, {'TPUR': '\xe9\x9d\x88\xe7\xa0\x82\xe5\xa4\xa7\xe4\xb8\xb9\xe7\xa5\x95\xe8\xa8\xa3', 'TITLE': '\xe9\x9d\x88\xe7\xa0\x82\xe5\xa4\xa7\xe4\xb8\xb9\xe7\xa5\x95\xe8\xa8\xa3-\xe5\x8d\x97\xe5\xae\x8b-', 'ID': 'KR5c0295', 'DYNASTY': '\xe5\x8d\x97\xe5\xae\x8b'}, {'TPUR': '\xe9\x87\x91\xe7\x9f\xb3\xe7\xb0\xbf\xe4\xb9\x9d\xe4\xba\x94\xe6\x95\xb8\xe8\xa8\xa3', 'TITLE': '\xe9\x87\x91\xe7\x9f\xb3\xe7\xb0\xbf\xe4\xb9\x9d\xe4\xba\x94\xe6\x95\xb8\xe8\xa8\xa3-686-', 'ID': 'KR5c0305', 'DYNASTY': '686'}, {'TPUR': '\xe7\x8c\xb6\xe9\xbe\x8d\xe5\x82\xb3', 'RESP': '\xe8\xb3\x88\xe5\x96\x84\xe7\xbf\x94', 'TITLE': '\xe7\x8c\xb6\xe9\xbe\x8d\xe5\x82\xb3--\xe8\xb3\x88\xe5\x96\x84\xe7\xbf\x94', 'ID': 'KR5c0170', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe9\x81\x93\xe6\xb3\x95\xe5\xbf\x83\xe5\x82\xb3', 'RESP': '\xe7\x8e\x8b\xe6\x83\x9f\xe4\xb8\x80', 'TITLE': '\xe9\x81\x93\xe6\xb3\x95\xe5\xbf\x83\xe5\x82\xb3--\xe7\x8e\x8b\xe6\x83\x9f\xe4\xb8\x80', 'ID': 'KR5g0062', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe7\x8e\x89\xe7\xb1\x99\xe5\xa4\xa7\xe9\xbd\x8b\xe7\xac\xac\xe4\xb8\x89\xe6\x97\xa5\xe5\x8d\x88\xe6\x9c\x9d\xe5\x84\x80', 'TITLE': '\xe7\x8e\x89\xe7\xb1\x99\xe5\xa4\xa7\xe9\xbd\x8b\xe7\xac\xac\xe4\xb8\x89\xe6\x97\xa5\xe5\x8d\x88\xe6\x9c\x9d\xe5\x84\x80-\xe5\xae\x8b-', 'ID': 'KR5b0208', 'DYNASTY': '\xe5\xae\x8b'}, {'TPUR': '\xe5\xa4\xaa\xe4\xb8\x8a\xe9\x9d\x88\xe5\xaf\xb6\xe6\xb7\xa8\xe6\x98\x8e\xe4\xb8\xad\xe9\xbb\x83\xe5\x85\xab\xe6\x9f\xb1\xe7\xb6\x93', 'TITLE': '\xe5\xa4\xaa\xe4\xb8\x8a\xe9\x9d\x88\xe5\xaf\xb6\xe6\xb7\xa8\xe6\x98\x8e\xe4\xb8\xad\xe9\xbb\x83\xe5\x85\xab\xe6\x9f\xb1\xe7\xb6\x93--', 'ID': 'KR5e0011', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe5\xa4\xaa\xe4\xb8\x8a\xe9\x9d\x88\xe5\xaf\xb6\xe6\xb7\xa8\xe6\x98\x8e\xe5\xae\x97\xe6\x95\x99\xe9\x8c\x84', 'TITLE': '\xe5\xa4\xaa\xe4\xb8\x8a\xe9\x9d\x88\xe5\xaf\xb6\xe6\xb7\xa8\xe6\x98\x8e\xe5\xae\x97\xe6\x95\x99\xe9\x8c\x84--', 'ID': 'KR5i0041', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe4\xb8\x8a\xe6\xb8\x85\xe4\xbf\xae\xe8\xa1\x8c\xe7\xb6\x93\xe8\xa8\xa3', 'TITLE': '\xe4\xb8\x8a\xe6\xb8\x85\xe4\xbf\xae\xe8\xa1\x8c\xe7\xb6\x93\xe8\xa8\xa3-\xe5\x94\x90-', 'ID': 'KR5b0111', 'DYNASTY': '\xe5\x94\x90'}, {'TPUR': '\xe5\xa4\xa7\xe6\x85\x88\xe5\xa5\xbd\xe7\x94\x9f\xe4\xb9\x9d\xe5\xa4\xa9\xe8\xa1\x9b\xe6\x88\xbf\xe8\x81\x96\xe6\xaf\x8d\xe5\x85\x83\xe5\x90\x9b\xe9\x9d\x88\xe6\x87\x89\xe5\xaf\xb6\xe7\xb1\xa4', 'TITLE': '\xe5\xa4\xa7\xe6\x85\x88\xe5\xa5\xbd\xe7\x94\x9f\xe4\xb9\x9d\xe5\xa4\xa9\xe8\xa1\x9b\xe6\x88\xbf\xe8\x81\x96\xe6\xaf\x8d\xe5\x85\x83\xe5\x90\x9b\xe9\x9d\x88\xe6\x87\x89\xe5\xaf\xb6\xe7\xb1\xa4--', 'ID': 'KR5g0109', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe6\xb4\x9e\xe5\x85\x83\xe5\xad\x90\xe5\x85\xa7\xe4\xb8\xb9\xe8\xa8\xa3', 'TITLE': '\xe6\xb4\x9e\xe5\x85\x83\xe5\xad\x90\xe5\x85\xa7\xe4\xb8\xb9\xe8\xa8\xa3-\xe5\x8c\x97\xe5\xae\x8b-', 'ID': 'KR5d0120', 'DYNASTY': '\xe5\x8c\x97\xe5\xae\x8b'}, {'TPUR': '\xe6\xbc\x81\xe8\x8e\x8a\xe9\x82\x82\xe9\x80\x85\xe9\x8c\x84', 'RESP': '\xe5\x90\xb3\xe6\x82\x9e', 'TITLE': '\xe6\xbc\x81\xe8\x8e\x8a\xe9\x82\x82\xe9\x80\x85\xe9\x8c\x84--\xe5\x90\xb3\xe6\x82\x9e', 'ID': 'KR5d0109', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe6\xad\xb7\xe4\xb8\x96\xe7\x9c\x9f\xe4\xbb\x99\xe9\xab\x94\xe9\x81\x93\xe9\x80\x9a\xe9\x91\x91', 'RESP': '\xe8\xb6\x99\xe9\x81\x93\xe4\xb8\x80', 'TITLE': '\xe6\xad\xb7\xe4\xb8\x96\xe7\x9c\x9f\xe4\xbb\x99\xe9\xab\x94\xe9\x81\x93\xe9\x80\x9a\xe9\x91\x91--\xe8\xb6\x99\xe9\x81\x93\xe4\xb8\x80', 'ID': 'KR5a0308', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe6\xad\xa3\xe4\xb8\x80\xe6\xb3\x95\xe6\x96\x87\xe5\x82\xb3\xe9\x83\xbd\xe5\x8a\x9f\xe7\x89\x88\xe5\x84\x80', 'TITLE': '\xe6\xad\xa3\xe4\xb8\x80\xe6\xb3\x95\xe6\x96\x87\xe5\x82\xb3\xe9\x83\xbd\xe5\x8a\x9f\xe7\x89\x88\xe5\x84\x80-\xe5\x94\x90\xe5\x88\x9d\xe6\x9c\x9f-', 'ID': 'KR5g0020', 'DYNASTY': '\xe5\x94\x90\xe5\x88\x9d\xe6\x9c\x9f'}, {'TPUR': '\xe5\x87\x9d\xe9\x99\xbd\xe8\x91\xa3\xe7\x9c\x9f\xe4\xba\xba\xe9\x81\x87\xe4\xbb\x99\xe8\xa8\x98', 'RESP': '\xe7\xa5\xbf\xe6\x98\xad\xe8\x81\x9e', 'TITLE': '\xe5\x87\x9d\xe9\x99\xbd\xe8\x91\xa3\xe7\x9c\x9f\xe4\xba\xba\xe9\x81\x87\xe4\xbb\x99\xe8\xa8\x98--\xe7\xa5\xbf\xe6\x98\xad\xe8\x81\x9e', 'ID': 'KR5a0320', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe6\x98\x93\xe5\x9c\x96\xe9\x80\x9a\xe8\xae\x8a', 'RESP': '\xe9\x9b\xb7\xe6\x80\x9d\xe9\xbd\x8a', 'TITLE': '\xe6\x98\x93\xe5\x9c\x96\xe9\x80\x9a\xe8\xae\x8a--\xe9\x9b\xb7\xe6\x80\x9d\xe9\xbd\x8a', 'ID': 'KR5d0034', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe6\xad\xa3\xe4\xb8\x80\xe9\x83\xa8', 'TITLE': '\xe6\xad\xa3\xe4\xb8\x80\xe9\x83\xa8', 'ID': 'KR5g', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe7\x9b\xa4\xe5\xb1\xb1\xe6\xa3\xb2\xe9\x9b\xb2\xe7\x8e\x8b\xe7\x9c\x9f\xe4\xba\xba\xe8\xaa\x9e\xe9\x8c\x84', 'RESP': '\xe8\xab\x96\xe5\xbf\x97\xe7\x85\xa5', 'TITLE': '\xe7\x9b\xa4\xe5\xb1\xb1\xe6\xa3\xb2\xe9\x9b\xb2\xe7\x8e\x8b\xe7\x9c\x9f\xe4\xba\xba\xe8\xaa\x9e\xe9\x8c\x84--\xe8\xab\x96\xe5\xbf\x97\xe7\x85\xa5', 'ID': 'KR5d0082', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe9\x87\x91\xe7\xb1\x99\xe8\xa7\xa3\xe5\xa3\x87\xe5\x84\x80', 'TITLE': '\xe9\x87\x91\xe7\xb1\x99\xe8\xa7\xa3\xe5\xa3\x87\xe5\x84\x80--', 'ID': 'KR5b0175', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe7\x99\xbb\xe7\x9c\x9f\xe9\x9a\xb1\xe8\xa8\xa3', 'RESP': '\xe9\x99\xb6\xe5\xbc\x98\xe6\x99\xaf', 'TITLE': '\xe7\x99\xbb\xe7\x9c\x9f\xe9\x9a\xb1\xe8\xa8\xa3--\xe9\x99\xb6\xe5\xbc\x98\xe6\x99\xaf', 'ID': 'KR5b0105', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe5\xa4\xaa\xe4\xb8\x8a\xe6\xb4\x9e\xe7\x8e\x84\xe9\x9d\x88\xe5\xaf\xb6\xe5\x87\xba\xe5\xae\xb6\xe5\x9b\xa0\xe7\xb7\xa3\xe7\xb6\x93', 'TITLE': '\xe5\xa4\xaa\xe4\xb8\x8a\xe6\xb4\x9e\xe7\x8e\x84\xe9\x9d\x88\xe5\xaf\xb6\xe5\x87\xba\xe5\xae\xb6\xe5\x9b\xa0\xe7\xb7\xa3\xe7\xb6\x93--', 'ID': 'KR5b0023', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe9\x87\x91\xe7\xb1\x99\xe6\x99\x9a\xe6\x9c\x9d\xe5\x84\x80', 'TITLE': '\xe9\x87\x91\xe7\xb1\x99\xe6\x99\x9a\xe6\x9c\x9d\xe5\x84\x80--', 'ID': 'KR5b0173', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe9\xbb\x83\xe5\xb8\x9d\xe6\x8e\x88\xe4\xb8\x89\xe5\xad\x90\xe7\x8e\x84\xe5\xa5\xb3\xe7\xb6\x93', 'TITLE': '\xe9\xbb\x83\xe5\xb8\x9d\xe6\x8e\x88\xe4\xb8\x89\xe5\xad\x90\xe7\x8e\x84\xe5\xa5\xb3\xe7\xb6\x93-\xe5\x85\xad\xe6\x9c\x9d-', 'ID': 'KR5a0297', 'DYNASTY': '\xe5\x85\xad\xe6\x9c\x9d'}, {'TPUR': '\xe4\xb8\x8a\xe6\xb8\x85\xe4\xb8\xb9\xe6\x99\xaf\xe9\x81\x93\xe7\xb2\xbe\xe9\x9a\xb1\xe5\x9c\xb0\xe5\x85\xab\xe8\xa1\x93\xe7\xb6\x93', 'TITLE': '\xe4\xb8\x8a\xe6\xb8\x85\xe4\xb8\xb9\xe6\x99\xaf\xe9\x81\x93\xe7\xb2\xbe\xe9\x9a\xb1\xe5\x9c\xb0\xe5\x85\xab\xe8\xa1\x93\xe7\xb6\x93-\xe6\x9d\xb1\xe6\x99\x89-', 'ID': 'KR5g0168', 'DYNASTY': '\xe6\x9d\xb1\xe6\x99\x89'}, {'TPUR': '\xe9\x87\x8d\xe9\x99\xbd\xe7\xab\x8b\xe6\x95\x99\xe5\x8d\x81\xe4\xba\x94\xe8\xab\x96', 'RESP': '\xe7\x8e\x8b\xe5\x9a\x9e', 'TITLE': '\xe9\x87\x8d\xe9\x99\xbd\xe7\xab\x8b\xe6\x95\x99\xe5\x8d\x81\xe4\xba\x94\xe8\xab\x96--\xe7\x8e\x8b\xe5\x9a\x9e', 'ID': 'KR5g0042', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe7\x9c\x9f\xe8\x97\x8f\xe7\xb6\x93\xe8\xa6\x81\xe8\xa8\xa3', 'TITLE': '\xe7\x9c\x9f\xe8\x97\x8f\xe7\xb6\x93\xe8\xa6\x81\xe8\xa8\xa3-\xe5\x94\x90-', 'ID': 'KR5a0097', 'DYNASTY': '\xe5\x94\x90'}, {'TPUR': '\xe9\xb4\x88\xe9\x96\x80\xe5\x85\xac\xe5\xa6\x99\xe8\xa7\xa3\xe9\x8c\x84', 'TITLE': '\xe9\xb4\x88\xe9\x96\x80\xe5\x85\xac\xe5\xa6\x99\xe8\xa7\xa3\xe9\x8c\x84-\xe5\x94\x90-', 'ID': 'KR5c0344', 'DYNASTY': '\xe5\x94\x90'}, {'TPUR': '\xe6\xa2\x85\xe4\xbb\x99\xe8\xa7\x80\xe8\xa8\x98', 'TITLE': '\xe6\xa2\x85\xe4\xbb\x99\xe8\xa7\x80\xe8\xa8\x98--', 'ID': 'KR5b0305', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe9\x80\x9a\xe7\x8e\x84\xe7\x9c\x9f\xe7\xb6\x93(\xe4\xba\x8c)', 'RESP': '\xe6\x9c\xb1\xe5\xbc\x81', 'TITLE': '\xe9\x80\x9a\xe7\x8e\x84\xe7\x9c\x9f\xe7\xb6\x93(\xe4\xba\x8c)--\xe6\x9c\xb1\xe5\xbc\x81', 'ID': 'KR5c0145', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe5\xbb\xa3\xe9\xbb\x83\xe5\xb8\x9d\xe6\x9c\xac\xe8\xa1\x8c\xe8\xa8\x98', 'RESP': '\xe7\x8e\x8b\xe7\x93\x98', 'TITLE': '\xe5\xbb\xa3\xe9\xbb\x83\xe5\xb8\x9d\xe6\x9c\xac\xe8\xa1\x8c\xe8\xa8\x98--\xe7\x8e\x8b\xe7\x93\x98', 'ID': 'KR5a0302', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe5\xbf\x83\xe5\x82\xb3\xe8\xbf\xb0\xe8\xad\x89\xe9\x8c\x84', 'TITLE': '\xe5\xbf\x83\xe5\x82\xb3\xe8\xbf\xb0\xe8\xad\x89\xe9\x8c\x84--', 'ID': 'KR5i0075', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe4\xb8\x8a\xe6\xb8\x85\xe6\xb2\xb3\xe5\x9c\x96\xe5\xaf\xb6\xe7\xb1\x99', 'TITLE': '\xe4\xb8\x8a\xe6\xb8\x85\xe6\xb2\xb3\xe5\x9c\x96\xe5\xaf\xb6\xe7\xb1\x99-\xe5\x94\x90-', 'ID': 'KR5g0205', 'DYNASTY': '\xe5\x94\x90'}, {'TPUR': '\xe6\xb8\x85\xe5\xbe\xae\xe5\xae\x8f\xe7\xaf\x84\xe9\x81\x93\xe9\x96\x80\xe5\x8a\x9f\xe8\xaa\xb2', 'TITLE': '\xe6\xb8\x85\xe5\xbe\xae\xe5\xae\x8f\xe7\xaf\x84\xe9\x81\x93\xe9\x96\x80\xe5\x8a\x9f\xe8\xaa\xb2--', 'ID': 'KR5i0090', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe9\x9d\x88\xe5\xaf\xb6\xe7\x84\xa1\xe9\x87\x8f\xe5\xba\xa6\xe4\xba\xba\xe4\xb8\x8a\xe7\xb6\x93\xe5\xa4\xa7\xe6\xb3\x95', 'TITLE': '\xe9\x9d\x88\xe5\xaf\xb6\xe7\x84\xa1\xe9\x87\x8f\xe5\xba\xa6\xe4\xba\xba\xe4\xb8\x8a\xe7\xb6\x93\xe5\xa4\xa7\xe6\xb3\x95--', 'ID': 'KR5a0220', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe5\xa4\xaa\xe4\xb8\x8a\xe6\xb4\x9e\xe7\x8e\x84\xe9\x9d\x88\xe5\xaf\xb6\xe7\x9c\x9f\xe6\x96\x87\xe8\xa6\x81\xe8\xa7\xa3\xe4\xb8\x8a\xe7\xb6\x93', 'TITLE': '\xe5\xa4\xaa\xe4\xb8\x8a\xe6\xb4\x9e\xe7\x8e\x84\xe9\x9d\x88\xe5\xaf\xb6\xe7\x9c\x9f\xe6\x96\x87\xe8\xa6\x81\xe8\xa7\xa3\xe4\xb8\x8a\xe7\xb6\x93-\xe5\x85\xad\xe6\x9c\x9d-', 'ID': 'KR5b0014', 'DYNASTY': '\xe5\x85\xad\xe6\x9c\x9d'}, {'TPUR': '\xe8\xad\x89\xe9\x81\x93\xe6\xad\x8c', 'RESP': '\xe5\xb7\xa6\xe6\x8e\x8c\xe5\xad\x90', 'TITLE': '\xe8\xad\x89\xe9\x81\x93\xe6\xad\x8c-\xe5\x8c\x97\xe5\xae\x8b-\xe5\xb7\xa6\xe6\x8e\x8c\xe5\xad\x90', 'ID': 'KR5d0118', 'DYNASTY': '\xe5\x8c\x97\xe5\xae\x8b'}, {'TPUR': '\xe5\xa4\xaa\xe4\xb8\x8a\xe8\x80\x81\xe5\x90\x9b\xe8\xaa\xaa\xe5\xb8\xb8\xe6\xb8\x85\xe9\x9d\x9c\xe7\xb6\x93\xe8\xa8\xbb(\xe4\xba\x94)', 'RESP': '\xe6\x9d\x9c\xe5\x85\x89\xe5\xba\xad', 'TITLE': '\xe5\xa4\xaa\xe4\xb8\x8a\xe8\x80\x81\xe5\x90\x9b\xe8\xaa\xaa\xe5\xb8\xb8\xe6\xb8\x85\xe9\x9d\x9c\xe7\xb6\x93\xe8\xa8\xbb(\xe4\xba\x94)--\xe6\x9d\x9c\xe5\x85\x89\xe5\xba\xad', 'ID': 'KR5c0155', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe5\x91\xa8\xe6\x98\x93\xe5\x8f\x83\xe5\x90\x8c\xe5\xa5\x91\xe7\x99\xbc\xe6\x8f\xae', 'RESP': '\xe4\xbf\x9e\xe7\x90\xb0', 'TITLE': '\xe5\x91\xa8\xe6\x98\x93\xe5\x8f\x83\xe5\x90\x8c\xe5\xa5\x91\xe7\x99\xbc\xe6\x8f\xae--\xe4\xbf\x9e\xe7\x90\xb0', 'ID': 'KR5d0022', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe5\xa4\xaa\xe7\x8e\x84\xe6\x9c\x97\xe7\x84\xb6\xe5\xad\x90\xe9\x80\xb2\xe9\x81\x93\xe8\xa9\xa9', 'RESP': '\xe5\x8a\x89\xe5\xb8\x8c\xe5\xb2\xb3', 'TITLE': '\xe5\xa4\xaa\xe7\x8e\x84\xe6\x9c\x97\xe7\x84\xb6\xe5\xad\x90\xe9\x80\xb2\xe9\x81\x93\xe8\xa9\xa9--\xe5\x8a\x89\xe5\xb8\x8c\xe5\xb2\xb3', 'ID': 'KR5a0283', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe9\x9d\x92\xe5\x9f\x8e\xe5\xb1\xb1\xe8\xa8\x98', 'TITLE': '\xe9\x9d\x92\xe5\x9f\x8e\xe5\xb1\xb1\xe8\xa8\x98--', 'ID': 'KR5i0103', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe9\x87\x8d\xe9\x99\xbd\xe5\x88\x86\xe6\xa2\xa8\xe5\x8d\x81\xe5\x8c\x96\xe9\x9b\x86', 'RESP': '\xe7\x8e\x8b\xe5\x9a\x9e', 'TITLE': '\xe9\x87\x8d\xe9\x99\xbd\xe5\x88\x86\xe6\xa2\xa8\xe5\x8d\x81\xe5\x8c\x96\xe9\x9b\x86--\xe7\x8e\x8b\xe5\x9a\x9e', 'ID': 'KR5e0057', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe5\xa4\xaa\xe4\xb8\x8a\xe9\x87\x91\xe8\x8f\xaf\xe5\xa4\xa9\xe5\xb0\x8a\xe6\x95\x91\xe5\x8a\xab\xe8\xad\xb7\xe5\x91\xbd\xe5\xa6\x99\xe7\xb6\x93', 'TITLE': '\xe5\xa4\xaa\xe4\xb8\x8a\xe9\x87\x91\xe8\x8f\xaf\xe5\xa4\xa9\xe5\xb0\x8a\xe6\x95\x91\xe5\x8a\xab\xe8\xad\xb7\xe5\x91\xbd\xe5\xa6\x99\xe7\xb6\x93--', 'ID': 'KR5g0005', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe6\xb7\xb7\xe5\x85\x83\xe8\x81\x96\xe7\xb4\x80', 'RESP': '\xe8\xac\x9d\xe5\xae\x88\xe7\x81\x9d', 'TITLE': '\xe6\xb7\xb7\xe5\x85\x83\xe8\x81\x96\xe7\xb4\x80--\xe8\xac\x9d\xe5\xae\x88\xe7\x81\x9d', 'ID': 'KR5c0166', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe4\xb8\x8a\xe6\xb8\x85\xe6\x8f\xa1\xe4\xb8\xad\xe8\xa8\xa3', 'RESP': '\xe9\x99\xb6\xe5\xbc\x98\xe6\x99\xaf', 'TITLE': '\xe4\xb8\x8a\xe6\xb8\x85\xe6\x8f\xa1\xe4\xb8\xad\xe8\xa8\xa3--\xe9\x99\xb6\xe5\xbc\x98\xe6\x99\xaf', 'ID': 'KR5a0141', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe6\xb6\x85\xe6\xa7\x83\xe9\x83\xa8\xe9\xa1\x9e', 'TITLE': '\xe6\xb6\x85\xe6\xa7\x83\xe9\x83\xa8\xe9\xa1\x9e', 'ID': 'KR6g', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe5\xa4\xaa\xe4\xb8\x8a\xe5\xae\xa3\xe6\x85\x88\xe5\x8a\xa9\xe5\x8c\x96\xe7\xab\xa0', 'RESP': '\xe6\x9d\x9c\xe5\x85\x89\xe5\xba\xad', 'TITLE': '\xe5\xa4\xaa\xe4\xb8\x8a\xe5\xae\xa3\xe6\x85\x88\xe5\x8a\xa9\xe5\x8c\x96\xe7\xab\xa0--\xe6\x9d\x9c\xe5\x85\x89\xe5\xba\xad', 'ID': 'KR5b0322', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe7\x84\xa1\xe4\xb8\x8a\xe5\x85\xa7\xe7\xa5\x95\xe7\x9c\x9f\xe8\x97\x8f\xe7\xb6\x93', 'TITLE': '\xe7\x84\xa1\xe4\xb8\x8a\xe5\x85\xa7\xe7\xa5\x95\xe7\x9c\x9f\xe8\x97\x8f\xe7\xb6\x93-\xe5\x94\x90\xe5\x88\x9d\xe6\x9c\x9f-', 'ID': 'KR5a0004', 'DYNASTY': '\xe5\x94\x90\xe5\x88\x9d\xe6\x9c\x9f'}, {'TPUR': '\xe9\x81\x93\xe6\xa8\x9e', 'RESP': '\xe6\x9b\xbe\xe6\x85\xa5', 'TITLE': '\xe9\x81\x93\xe6\xa8\x9e--\xe6\x9b\xbe\xe6\x85\xa5', 'ID': 'KR5d0039', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe8\xb5\xa4\xe6\x9d\xbe\xe5\xad\x90\xe7\xab\xa0\xe6\x9b\x86', 'TITLE': '\xe8\xb5\xa4\xe6\x9d\xbe\xe5\xad\x90\xe7\xab\xa0\xe6\x9b\x86-\xe5\x85\xad\xe6\x9c\x9d-', 'ID': 'KR5b0320', 'DYNASTY': '\xe5\x85\xad\xe6\x9c\x9d'}, {'TPUR': '\xe5\xa4\xaa\xe4\xb8\x8a\xe4\xbf\x9d\xe7\x9c\x9f\xe9\xa4\x8a\xe7\x94\x9f\xe8\xab\x96', 'TITLE': '\xe5\xa4\xaa\xe4\xb8\x8a\xe4\xbf\x9d\xe7\x9c\x9f\xe9\xa4\x8a\xe7\x94\x9f\xe8\xab\x96-\xe4\xba\x94\xe4\xbb\xa3-', 'ID': 'KR5c0249', 'DYNASTY': '\xe4\xba\x94\xe4\xbb\xa3'}, {'TPUR': '\xe5\x85\x83\xe5\xa7\x8b\xe5\xa4\xa9\xe5\xb0\x8a\xe8\xaa\xaa\xe7\x94\x9f\xe5\xa4\xa9\xe5\xbe\x97\xe9\x81\x93\xe7\xb6\x93', 'TITLE': '\xe5\x85\x83\xe5\xa7\x8b\xe5\xa4\xa9\xe5\xb0\x8a\xe8\xaa\xaa\xe7\x94\x9f\xe5\xa4\xa9\xe5\xbe\x97\xe9\x81\x93\xe7\xb6\x93-\xe5\x94\x90-', 'ID': 'KR5a0024', 'DYNASTY': '\xe5\x94\x90'}, {'TPUR': '\xe9\x9b\xb2\xe7\xac\x88\xe4\xb8\x83\xe7\xb1\xa4', 'RESP': '\xe5\xbc\xb5\xe5\x90\x9b\xe6\x88\xbf', 'TITLE': '\xe9\x9b\xb2\xe7\xac\x88\xe4\xb8\x83\xe7\xb1\xa4-\xe5\x94\x90-\xe5\xbc\xb5\xe5\x90\x9b\xe6\x88\xbf', 'ID': 'KR5d0055', 'DYNASTY': '\xe5\x94\x90'}, {'TPUR': '\xe8\x87\xb3\xe7\x9c\x9f\xe5\xad\x90\xe9\xbe\x8d\xe8\x99\x8e\xe5\xa4\xa7\xe4\xb8\xb9\xe8\xa9\xa9', 'RESP': '\xe5\x91\xa8\xe6\x96\xb9', 'TITLE': '\xe8\x87\xb3\xe7\x9c\x9f\xe5\xad\x90\xe9\xbe\x8d\xe8\x99\x8e\xe5\xa4\xa7\xe4\xb8\xb9\xe8\xa9\xa9--\xe5\x91\xa8\xe6\x96\xb9', 'ID': 'KR5a0281', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe4\xb8\xb9\xe6\x88\xbf\xe5\xa5\xa7\xe8\xab\x96', 'RESP': '\xe7\xa8\x8b\xe4\xba\x86\xe4\xb8\x80', 'TITLE': '\xe4\xb8\xb9\xe6\x88\xbf\xe5\xa5\xa7\xe8\xab\x96--\xe7\xa8\x8b\xe4\xba\x86\xe4\xb8\x80', 'ID': 'KR5c0320', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe9\xbb\x83\xe7\x9f\xb3\xe5\x85\xac\xe7\xb4\xa0\xe6\x9b\xb8(\xe4\xba\x8c)', 'RESP': '\xe5\xbc\xb5\xe5\xb0\x9a\xe8\x8b\xb1', 'TITLE': '\xe9\xbb\x83\xe7\x9f\xb3\xe5\x85\xac\xe7\xb4\xa0\xe6\x9b\xb8(\xe4\xba\x8c)--\xe5\xbc\xb5\xe5\xb0\x9a\xe8\x8b\xb1', 'ID': 'KR5f0013', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe4\xb8\x8a\xe6\xb8\x85\xe9\x87\x91\xe5\x8c\xb1\xe7\x8e\x89\xe9\x8f\xa1\xe4\xbf\xae\xe7\x9c\x9f\xe6\x8c\x87\xe7\x8e\x84\xe5\xa6\x99\xe7\xb6\x93', 'TITLE': '\xe4\xb8\x8a\xe6\xb8\x85\xe9\x87\x91\xe5\x8c\xb1\xe7\x8e\x89\xe9\x8f\xa1\xe4\xbf\xae\xe7\x9c\x9f\xe6\x8c\x87\xe7\x8e\x84\xe5\xa6\x99\xe7\xb6\x93-\xe5\x94\x90-', 'ID': 'KR5b0037', 'DYNASTY': '\xe5\x94\x90'}, {'TPUR': '\xe4\xb8\x89\xe8\x8c\x85\xe7\x9c\x9f\xe5\x90\x9b\xe5\x8a\xa0\xe5\xb0\x81\xe4\xba\x8b\xe5\x85\xb8', 'RESP': '\xe5\xbc\xb5\xe5\xa4\xa7\xe6\xb7\xb3', 'TITLE': '\xe4\xb8\x89\xe8\x8c\x85\xe7\x9c\x9f\xe5\x90\x9b\xe5\x8a\xa0\xe5\xb0\x81\xe4\xba\x8b\xe5\x85\xb8--\xe5\xbc\xb5\xe5\xa4\xa7\xe6\xb7\xb3', 'ID': 'KR5a0173', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe9\x87\x91\xe8\x93\xae\xe6\xad\xa3\xe5\xae\x97\xe4\xbb\x99\xe6\xba\x90\xe5\x83\x8f\xe5\x82\xb3', 'RESP': '\xe5\x8a\x89\xe5\xbf\x97\xe7\x8e\x84', 'TITLE': '\xe9\x87\x91\xe8\x93\xae\xe6\xad\xa3\xe5\xae\x97\xe4\xbb\x99\xe6\xba\x90\xe5\x83\x8f\xe5\x82\xb3--\xe5\x8a\x89\xe5\xbf\x97\xe7\x8e\x84', 'ID': 'KR5a0175', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe9\x9d\x88\xe5\xaf\xb6\xe6\xb7\xa8\xe6\x98\x8e\xe9\x99\xa2\xe7\x9c\x9f\xe5\xb8\xab\xe5\xaf\x86\xe8\xaa\xa5', 'TITLE': '\xe9\x9d\x88  C-c C-c\xb3)'}, {'TPUR': '\xe5\xa4\xaa\xe4\xb8\x8a\xe8\x80\x81\xe5\x90\x9b\xe8\xaa\xaa\xe5\xb8\xb8\xe6\xb8\x85\xe9\x9d\x9c\xe7\xb6\x93\xe9\xa0\x8c\xe8\xa8\xbb', 'RESP': '\xe5\x8a\x89\xe9\x80\x9a\xe5\xbe\xae', 'TITLE': '\xe5\xa4\xaa\xe4\xb8\x8a\xe8\x80\x81\xe5\x90\x9b\xe8\xaa\xaa\xe5\xb8\xb8\xe6\xb8\x85\xe9\x9d\x9c\xe7\xb6\x93\xe9\xa0\x8c\xe8\xa8\xbb--\xe5\x8a\x89\xe9\x80\x9a\xe5\xbe\xae', 'ID': 'KR5c0374', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe7\xa9\x86\xe5\xa4\xa9\xe5\xad\x90\xe5\x82\xb3', 'RESP': '\xe9\x83\xad\xe7\x92\x9e', 'TITLE': '\xe7\xa9\x86\xe5\xa4\xa9\xe5\xad\x90\xe5\x82\xb3--\xe9\x83\xad\xe7\x92\x9e', 'ID': 'KR5a0303', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe8\x91\x86\xe5\x85\x89\xe9\x9b\x86', 'RESP': '\xe5\xb0\xb9\xe5\xbf\x97\xe5\xb9\xb3', 'TITLE': '\xe8\x91\x86\xe5\x85\x89\xe9\x9b\x86--\xe5\xb0\xb9\xe5\xbf\x97\xe5\xb9\xb3', 'ID': 'KR5e0048', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe4\xb8\x8a\xe6\xb8\x85\xe9\x95\xb7\xe7\x94\x9f\xe5\xaf\xb6\xe9\x91\x91\xe5\x9c\  C-c C-c  C-c C-cTraceback (most recent call last):
  File "<stdin>", line 1, in <module>

  C-c C-c
KeyboardInterrupt
>>>   C-c C-c
KeyboardInterrupt
>>>   C-c C-c
KeyboardInterrupt
>>> cat = [r.hgetall(a) for a in r.keys("kr:meta*") if len(a.split(":")[-1]) < 8]
>>> len(cat)
1928
>>> cat[0:10]
[{'TPUR': '\xe5\xa4\xaa\xe4\xb8\x8a\xe6\xb4\x9e\xe7\x8e\x84\xe9\x9d\x88\xe5\xaf\xb6\xe7\xa6\x8f\xe6\x97\xa5\xe5\xa6\x99\xe7\xb6\x93', 'TITLE': '\xe5\xa4\xaa\xe4\xb8\x8a\xe6\xb4\x9e\xe7\x8e\x84\xe9\x9d\x88\xe5\xaf\xb6\xe7\xa6\x8f\xe6\x97\xa5\xe5\xa6\x99\xe7\xb6\x93-\xe5\x94\x90-', 'ID': 'KR5b0039', 'DYNASTY': '\xe5\x94\x90'}, {'TPUR': '\xe7\x8e\x84\xe5\xaf\xb6\xe4\xba\xba\xe9\xb3\xa5\xe5\xb1\xb1\xe7\xb6\x93\xe5\x9c\x96', 'TITLE': '\xe7\x8e\x84\xe5\xaf\xb6\xe4\xba\xba\xe9\xb3\xa5\xe5\xb1\xb1\xe7\xb6\x93\xe5\x9c\x96--', 'ID': 'KR5b0118', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe9\x9d\x88\xe4\xbf\xa1\xe7\xb6\x93\xe6\x97\xa8', 'TITLE': '\xe9\x9d\x88\xe4\xbf\xa1\xe7\xb6\x93\xe6\x97\xa8-\xe5\xae\x8b-', 'ID': 'KR5g0234', 'DYNASTY': '\xe5\xae\x8b'}, {'TPUR': '\xe6\xb2\x96\xe8\x99\x9b\xe8\x87\xb3\xe5\xbe\xb7\xe7\x9c\x9f\xe7\xb6\x93', 'RESP': '\xe5\x88\x97\xe7\xa6\xa6\xe5\xaf\x87', 'TITLE': '\xe6\xb2\x96\xe8\x99\x9b\xe8\x87\xb3\xe5\xbe\xb7\xe7\x9c\x9f\xe7\xb6\x93--\xe5\x88\x97\xe7\xa6\xa6\xe5\xaf\x87', 'ID': 'KR5c0049', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe5\xa4\xaa\xe4\xb8\x8a\xe6\x98\x87\xe7\x8e\x84\xe6\xb6\x88\xe7\x81\xbd\xe8\xad\xb7\xe5\x91\xbd\xe5\xa6\x99\xe7\xb6\x93', 'TITLE': '\xe5\xa4\xaa\xe4\xb8\x8a\xe6\x98\x87\xe7\x8e\x84\xe6\xb6\x88\xe7\x81\xbd\xe8\xad\xb7\xe5\x91\xbd\xe5\xa6\x99\xe7\xb6\x93-\xe5\x94\x90-', 'ID': 'KR5a0019', 'DYNASTY': '\xe5\x94\x90'}, {'TPUR': '\xe7\xb4\xa0\xe5\x95\x8f\xe5\x85\xad\xe6\xb0\xa3\xe7\x8e\x84\xe7\x8f\xa0\xe5\xaf\x86\xe8\xaa\x9e', 'RESP': '\xe7\x8e\x8b\xe5\x86\xb0', 'TITLE': '\xe7\xb4\xa0\xe5\x95\x8f\xe5\x85\xad\xe6\xb0\xa3\xe7\x8e\x84\xe7\x8f\xa0\xe5\xaf\x86\xe8\xaa\x9e--\xe7\x8e\x8b\xe5\x86\xb0', 'ID': 'KR5d0045', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe8\x8d\x89\xe5\xa0\x82\xe9\x9b\x86', 'RESP': '\xe7\x8e\x8b\xe4\xb8\xb9\xe6\xa1\x82', 'TITLE': '\xe8\x8d\x89\xe5\xa0\x82\xe9\x9b\x86--\xe7\x8e\x8b\xe4\xb8\xb9\xe6\xa1\x82', 'ID': 'KR5e0045', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe4\xbf\xae\xe7\x9c\x9f\xe5\x8d\x81\xe6\x9b\xb8\xe4\xb8\x8a\xe6\xb8\x85\xe9\x9b\x86', 'RESP': '\xe7\x99\xbd\xe7\x8e\x89\xe8\x9f\xbe', 'TITLE': '\xe4\xbf\xae\xe7\x9c\x9f\xe5\x8d\x81\xe6\x9b\xb8\xe4\xb8\x8a\xe6\xb8\x85\xe9\x9b\x86--\xe7\x99\xbd\xe7\x8e\x89\xe8\x9f\xbe', 'ID': 'KR5a0270', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe4\xb8\x8a\xe6\xb8\x85\xe9\xbb\x83\xe5\xba\xad\xe9\xa4\x8a\xe7\xa5\x9e\xe7\xb6\x93', 'TITLE': '\xe4\xb8\x8a\xe6\xb8\x85\xe9\xbb\x83\xe5\xba\xad\xe9\xa4\x8a\xe7\xa5\x9e\xe7\xb6\x93-\xe5\x94\x90-', 'ID': 'KR5g0209', 'DYNASTY': '\xe5\x94\x90'}, {'TPUR': '\xe6\xb8\x85\xe6\xb2\xb3\xe5\x85\xa7\xe5\x82\xb3', 'TITLE': '\xe6\xb8\x85\xe6\xb2\xb3\xe5\x85\xa7\xe5\x82\xb3-\xe6\x98\x8e-', 'ID': 'KR5a0170', 'DYNASTY': '\xe6\x98\x8e'}]
>>> cat = [(a, r.hgetall(a)) for a in r.keys("kr:meta*") if len(a.split(":")[-1]) < 8]
>>> cat[0:10]
[('kr:meta:DZ0355', {'TPUR': '\xe5\xa4\xaa\xe4\xb8\x8a\xe6\xb4\x9e\xe7\x8e\x84\xe9\x9d\x88\xe5\xaf\xb6\xe7\xa6\x8f\xe6\x97\xa5\xe5\xa6\x99\xe7\xb6\x93', 'TITLE': '\xe5\xa4\xaa\xe4\xb8\x8a\xe6\xb4\x9e\xe7\x8e\x84\xe9\x9d\x88\xe5\xaf\xb6\xe7\xa6\x8f\xe6\x97\xa5\xe5\xa6\x99\xe7\xb6\x93-\xe5\x94\x90-', 'ID': 'KR5b0039', 'DYNASTY': '\xe5\x94\x90'}), ('kr:meta:DZ0434', {'TPUR': '\xe7\x8e\x84\xe5\xaf\xb6\xe4\xba\xba\xe9\xb3\xa5\xe5\xb1\xb1\xe7\xb6\x93\xe5\x9c\x96', 'TITLE': '\xe7\x8e\x84\xe5\xaf\xb6\xe4\xba\xba\xe9\xb3\xa5\xe5\xb1\xb1\xe7\xb6\x93\xe5\x9c\x96--', 'ID': 'KR5b0118', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}), ('kr:meta:DZ1425', {'TPUR': '\xe9\x9d\x88\xe4\xbf\xa1\xe7\xb6\x93\xe6\x97\xa8', 'TITLE': '\xe9\x9d\x88\xe4\xbf\xa1\xe7\xb6\x93\xe6\x97\xa8-\xe5\xae\x8b-', 'ID': 'KR5g0234', 'DYNASTY': '\xe5\xae\x8b'}), ('kr:meta:DZ0668', {'TPUR': '\xe6\xb2\x96\xe8\x99\x9b\xe8\x87\xb3\xe5\xbe\xb7\xe7\x9c\x9f\xe7\xb6\x93', 'RESP': '\xe5\x88\x97\xe7\xa6\xa6\xe5\xaf\x87', 'TITLE': '\xe6\xb2\x96\xe8\x99\x9b\xe8\x87\xb3\xe5\xbe\xb7\xe7\x9c\x9f\xe7\xb6\x93--\xe5\x88\x97\xe7\xa6\xa6\xe5\xaf\x87', 'ID': 'KR5c0049', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}), ('kr:meta:DZ0019', {'TPUR': '\xe5\xa4\xaa\xe4\xb8\x8a\xe6\x98\x87\xe7\x8e\x84\xe6\xb6\x88\xe7\x81\xbd\xe8\xad\xb7\xe5\x91\xbd\xe5\xa6\x99\xe7\xb6\x93', 'TITLE': '\xe5\xa4\xaa\xe4\xb8\x8a\xe6\x98\x87\xe7\x8e\x84\xe6\xb6\x88\xe7\x81\xbd\xe8\xad\xb7\xe5\x91\xbd\xe5\xa6\x99\xe7\xb6\x93-\xe5\x94\x90-', 'ID': 'KR5a0019', 'DYNASTY': '\xe5\x94\x90'}), ('kr:meta:DZ1023', {'TPUR': '\xe7\xb4\xa0\xe5\x95\x8f\xe5\x85\xad\xe6\xb0\xa3\xe7\x8e\x84\xe7\x8f\xa0\xe5\xaf\x86\xe8\xaa\x9e', 'RESP': '\xe7\x8e\x8b\xe5\x86\xb0', 'TITLE': '\xe7\xb4\xa0\xe5\x95\x8f\xe5\x85\xad\xe6\xb0\xa3\xe7\x8e\x84\xe7\x8f\xa0\xe5\xaf\x86\xe8\xaa\x9e--\xe7\x8e\x8b\xe5\x86\xb0', 'ID': 'KR5d0045', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}), ('kr:meta:DZ1143', {'TPUR': '\xe8\x8d\x89\xe5\xa0\x82\xe9\x9b\x86', 'RESP': '\xe7\x8e\x8b\xe4\xb8\xb9\xe6\xa1\x82', 'TITLE': '\xe8\x8d\x89\xe5\xa0\x82\xe9\x9b\x86--\xe7\x8e\x8b\xe4\xb8\xb9\xe6\xa1\x82', 'ID': 'KR5e0045', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}), ('kr:meta:DZ0263g', {'TPUR': '\xe4\xbf\xae\xe7\x9c\x9f\xe5\x8d\x81\xe6\x9b\xb8\xe4\xb8\x8a\xe6\xb8\x85\xe9\x9b\x86', 'RESP': '\xe7\x99\xbd\xe7\x8e\x89\xe8\x9f\xbe', 'TITLE': '\xe4\xbf\xae\xe7\x9c\x9f\xe5\x8d\x81\xe6\x9b\xb8\xe4\xb8\x8a\xe6\xb8\x85\xe9\x9b\x86--\xe7\x99\xbd\xe7\x8e\x89\xe8\x9f\xbe', 'ID': 'KR5a0270', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}), ('kr:meta:DZ1400', {'TPUR': '\xe4\xb8\x8a\xe6\xb8\x85\xe9\xbb\x83\xe5\xba\xad\xe9\xa4\x8a\xe7\xa5\x9e\xe7\xb6\x93', 'TITLE': '\xe4\xb8\x8a\xe6\xb8\x85\xe9\xbb\x83\xe5\xba\xad\xe9\xa4\x8a\xe7\xa5\x9e\xe7\xb6\x93-\xe5\x94\x90-', 'ID': 'KR5g0209', 'DYNASTY': '\xe5\x94\x90'}), ('kr:meta:DZ0169', {'TPUR': '\xe6\xb8\x85\xe6\xb2\xb3\xe5\x85\xa7\xe5\x82\xb3', 'TITLE': '\xe6\xb8\x85\xe6\xb2\xb3\xe5\x85\xa7\xe5\x82\xb3-\xe6\x98\x8e-', 'ID': 'KR5a0170', 'DYNASTY': '\xe6\x98\x8e'})]
>>> cat = [(a, r.hgetall(a)) for a in r.keys("kr:meta*") if len(a.split(":")[-1]) < 8 and "KR" in a]
>>> cat
[('kr:meta:KR5g', {'TPUR': '\xe6\xad\xa3\xe4\xb8\x80\xe9\x83\xa8', 'TITLE': '\xe6\xad\xa3\xe4\xb8\x80\xe9\x83\xa8', 'ID': 'KR5g', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}), ('kr:meta:KR6g', {'TPUR': '\xe6\xb6\x85\xe6\xa7\x83\xe9\x83\xa8\xe9\xa1\x9e', 'TITLE': '\xe6\xb6\x85\xe6\xa7\x83\xe9\x83\xa8\xe9\xa1\x9e', 'ID': 'KR6g', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}), ('kr:meta:KR6s', {'TPUR': '\xe4\xba\x8b\xe5\xbd\x99\xe9\x83\xa8\xe9\xa1\x9e', 'TITLE': '\xe4\xba\x8b\xe5\xbd\x99\xe9\x83\xa8\xe9\xa1\x9e', 'ID': 'KR6s', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}), ('kr:meta:KR2n', {'TPUR': '\xe7\x9b\xae\xe9\x8c\x84\xe9\xa1\x9e', 'TITLE': '\xe7\x9b\xae\xe9\x8c\x84\xe9\xa1\x9e', 'ID': 'KR2n', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}), ('kr:meta:KR6m', {'TPUR': '\xe4\xb8\xad\xe8\xa7\x80\xe9\x83\xa8\xe9\xa1\x9e', 'TITLE': '\xe4\xb8\xad\xe8\xa7\x80\xe9\x83\xa8\xe9\xa1\x9e', 'ID': 'KR6m', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}), ('kr:meta:KR1', {'TPUR': '\xe7\xb6\x93\xe9\x83\xa8', 'TITLE': '\xe7\xb6\x93\xe9\x83\xa8', 'ID': 'KR1', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}), ('kr:meta:KR4f', {'TPUR': '\xe5\x88\xa5\xe9\x9b\x86\xe9\xa1\x9e', 'TITLE': '\xe5\x88\xa5\xe9\x9b\x86\xe9\xa1\x9e-\xe6\xb8\x85', 'ID': 'KR4f', 'DYNASTY': '\xe6\xb8\x85'}), ('kr:meta:KR6a', {'TPUR': '\xe9\x98\xbf\xe5\x90\xab\xe9\x83\xa8\xe9\xa1\x9e', 'TITLE': '\xe9\x98\xbf\xe5\x90\xab\xe9\x83\xa8\xe9\xa1\x9e', 'ID': 'KR6a', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}), ('kr:meta:KR3g', {'TPUR': '\xe8\xa1\x93\xe6\x95\xb8\xe9\xa1\x9e', 'TITLE': '\xe8\xa1\x93\xe6\x95\xb8\xe9\xa1\x9e', 'ID': 'KR3g', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}), ('kr:meta:KR4d', {'TPUR': '\xe5\x88\xa5\xe9\x9b\x86\xe9\xa1\x9e', 'TITLE': '\xe5\x88\xa5\xe9\x9b\x86\xe9\xa1\x9e-\xe5\xae\x8b', 'ID': 'KR4d', 'DYNASTY': '\xe5\xae\x8b'}), ('kr:meta:KR6u', {'TPUR': '\xe6\x95\xa6\xe7\x85\x8c\xe5\xaf\xab\xe6\x9c\xac\xe9\x83\xa8\xe9\xa1\x9e', 'TITLE': '\xe6\x95\xa6\xe7\x85\x8c\xe5\xaf\xab\xe6\x9c\xac\xe9\x83\xa8\xe9\xa1\x9e', 'ID': 'KR6u', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}), ('kr:meta:KR6f', {'TPUR': '\xe5\xaf\xb6\xe7\xa9\x8d\xe9\x83\xa8\xe9\xa1\x9e', 'TITLE': '\xe5\xaf\xb6\xe7\xa9\x8d\xe9\x83\xa8\xe9\xa1\x9e', 'ID': 'KR6f', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}), ('kr:meta:KR3d', {'TPUR': '\xe8\xbe\xb2\xe5\xae\xb6\xe9\xa1\x9e', 'TITLE': '\xe8\xbe\xb2\xe5\xae\xb6\xe9\xa1\x9e', 'ID': 'KR3d', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}), ('kr:meta:KR6c', {'TPUR': '\xe8\x88\xac\xe8\x8b\xa5\xe9\x83\xa8\xe9\xa1\x9e', 'TITLE': '\xe8\x88\xac\xe8\x8b\xa5\xe9\x83\xa8\xe9\xa1\x9e', 'ID': 'KR6c', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}), ('kr:meta:KR6r', {'TPUR': '\xe5\x8f\xb2\xe5\x82\xb3\xe9\x83\xa8\xe9\xa1\x9e', 'TITLE': '\xe5\x8f\xb2\xe5\x82\xb3\xe9\x83\xa8\xe9\xa1\x9e', 'ID': 'KR6r', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}), ('kr:meta:KR3e', {'TPUR': '\xe9\x86\xab\xe5\xae\xb6\xe9\xa1\x9e', 'TITLE': '\xe9\x86\xab\xe5\xae\xb6\xe9\xa1\x9e', 'ID': 'KR3e', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}), ('kr:meta:KR4h', {'TPUR': '\xe7\xb8\xbd\xe9\x9b\x86\xe9\xa1\x9e', 'TITLE': '\xe7\xb8\xbd\xe9\x9b\x86\xe9\xa1\x9e', 'ID': 'KR4h', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}), ('kr:meta:KR2j', {'TPUR': '\xe6\x99\x82\xe4\xbb\xa4\xe9\xa1\x9e', 'TITLE': '\xe6\x99\x82\xe4\xbb\xa4\xe9\xa1\x9e', 'ID': 'KR2j', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}), ('kr:meta:KR1j', {'TPUR': '\xe5\xb0\x8f\xe5\xad\xb8\xe9\xa1\x9e', 'TITLE': '\xe5\xb0\x8f\xe5\xad\xb8\xe9\xa1\x9e', 'ID': 'KR1j', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}), ('kr:meta:KR3l', {'TPUR': '\xe5\xb0\x8f\xe8\xaa\xaa\xe5\xae\xb6\xe9\xa1\x9e', 'TITLE': '\xe5\xb0\x8f\xe8\xaa\xaa\xe5\xae\xb6\xe9\xa1\x9e', 'ID': 'KR3l', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}), ('kr:meta:KR1e', {'TPUR': '\xe6\x98\xa5\xe7\xa7\x8b\xe9\xa1\x9e', 'TITLE': '\xe6\x98\xa5\xe7\xa7\x8b\xe9\xa1\x9e', 'ID': 'KR1e', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}), ('kr:meta:KR2a', {'TPUR': '\xe6\xad\xa3\xe5\x8f\xb2\xe9\xa1\x9e', 'TITLE': '\xe6\xad\xa3\xe5\x8f\xb2\xe9\xa1\x9e', 'ID': 'KR2a', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}), ('kr:meta:KR1c', {'TPUR': '\xe8\xa9\xa9\xe9\xa1\x9e', 'TITLE': '\xe8\xa9\xa9\xe9\xa1\x9e', 'ID': 'KR1c', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}), ('kr:meta:KR6b', {'TPUR': '\xe6\x9c\xac\xe7\xb7\xa3\xe9\x83\xa8\xe9\xa1\x9e', 'TITLE': '\xe6\x9c\xac\xe7\xb7\xa3\xe9\x83\xa8\xe9\xa1\x9e', 'ID': 'KR6b', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}), ('kr:meta:KR2b', {'TPUR': '\xe7\xb7\xa8\xe5\xb9\xb4\xe9\xa1\x9e', 'TITLE': '\xe7\xb7\xa8\xe5\xb9\xb4\xe9\xa1\x9e', 'ID': 'KR2b', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}), ('kr:meta:KR2l', {'TPUR': '\xe8\x81\xb7\xe5\xae\x98\xe9\xa1\x9e', 'TITLE': '\xe8\x81\xb7\xe5\xae\x98\xe9\xa1\x9e', 'ID': 'KR2l', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}), ('kr:meta:KR6o', {'TPUR': '\xe8\xab\x96\xe9\x9b\x86\xe9\x83\xa8\xe9\xa1\x9e', 'TITLE': '\xe8\xab\x96\xe9\x9b\x86\xe9\x83\xa8\xe9\xa1\x9e', 'ID': 'KR6o', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}), ('kr:meta:KR6q', {'TPUR': '\xe7\xa6\xaa\xe5\xae\x97\xe9\x83\xa8\xe9\xa1\x9e', 'TITLE': '\xe7\xa6\xaa\xe5\xae\x97\xe9\x83\xa8\xe9\xa1\x9e', 'ID': 'KR6q', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}), ('kr:meta:KR6j', {'TPUR': '\xe5\xaf\x86\xe6\x95\x99\xe9\x83\xa8\xe9\xa1\x9e', 'TITLE': '\xe5\xaf\x86\xe6\x95\x99\xe9\x83\xa8\xe9\xa1\x9e', 'ID': 'KR6j', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}), ('kr:meta:KR6i', {'TPUR': '\xe7\xb6\x93\xe9\x9b\x86\xe9\x83\xa8\xe9\xa1\x9e', 'TITLE': '\xe7\xb6\x93\xe9\x9b\x86\xe9\x83\xa8\xe9\xa1\x9e', 'ID': 'KR6i', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}), ('kr:meta:KR2e', {'TPUR': '\xe9\x9b\x9c\xe5\x8f\xb2\xe9\xa1\x9e', 'TITLE': '\xe9\x9b\x9c\xe5\x8f\xb2\xe9\xa1\x9e', 'ID': 'KR2e', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}), ('kr:meta:KR6h', {'TPUR': '\xe5\xa4\xa7\xe9\x9b\x86\xe9\x83\xa8\xe9\xa1\x9e', 'TITLE': '\xe5\xa4\xa7\xe9\x9b\x86\xe9\x83\xa8\xe9\xa1\x9e', 'ID': 'KR6h', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}), ('kr:meta:KR2h', {'TPUR': '\xe5\x8f\xb2\xe9\x88\x94\xe9\xa1\x9e', 'TITLE': '\xe5\x8f\xb2\xe9\x88\x94\xe9\xa1\x9e', 'ID': 'KR2h', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}), ('kr:meta:KR6', {'TPUR': '\xe4\xbd\x9b\xe9\x83\xa8', 'TITLE': '\xe4\xbd\x9b\xe9\x83\xa8', 'ID': 'KR6', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}), ('kr:meta:KR6t', {'TPUR': '\xe7\xba\x8c\xe8\xab\xb8\xe5\xae\x97(\xe6\x97\xa5\xe6\x9c\xac)', 'TITLE': '\xe7\xba\x8c\xe8\xab\xb8\xe5\xae\x97(\xe6\x97\xa5\xe6\x9c\xac)', 'ID': 'KR6t', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}), ('kr:meta:KR3b', {'TPUR': '\xe5\x85\xb5\xe5\xae\xb6\xe9\xa1\x9e', 'TITLE': '\xe5\x85\xb5\xe5\xae\xb6\xe9\xa1\x9e', 'ID': 'KR3b', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}), ('kr:meta:KR5f', {'TPUR': '\xe5\xa4\xaa\xe6\xb8\x85\xe9\x83\xa8', 'TITLE': '\xe5\xa4\xaa\xe6\xb8\x85\xe9\x83\xa8', 'ID': 'KR5f', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}), ('kr:meta:KR1d', {'TPUR': '\xe7\xa6\xae\xe9\xa1\x9e', 'TITLE': '\xe7\xa6\xae\xe9\xa1\x9e', 'ID': 'KR1d', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}), ('kr:meta:KR5b', {'TPUR': '\xe6\xb4\x9e\xe7\x8e\x84\xe9\x83\xa8', 'TITLE': '\xe6\xb4\x9e\xe7\x8e\x84\xe9\x83\xa8', 'ID': 'KR5b', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}), ('kr:meta:KR4e', {'TPUR': '\xe5\x88\xa5\xe9\x9b\x86\xe9\xa1\x9e', 'TITLE': '\xe5\x88\xa5\xe9\x9b\x86\xe9\xa1\x9e-\xe6\x98\x8e', 'ID': 'KR4e', 'DYNASTY': '\xe6\x98\x8e'}), ('kr:meta:KR2', {'TPUR': '\xe5\x8f\xb2\xe9\x83\xa8', 'TITLE': '\xe5\x8f\xb2\xe9\x83\xa8', 'ID': 'KR2', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}), ('kr:meta:KR3a', {'TPUR': '\xe5\x84\x92\xe5\xae\xb6\xe9\xa1\x9e', 'TITLE': '\xe5\x84\x92\xe5\xae\xb6\xe9\xa1\x9e', 'ID': 'KR3a', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}), ('kr:meta:KR3c', {'TPUR': '\xe6\xb3\x95\xe5\xae\xb6\xe9\xa1\x9e', 'TITLE': '\xe6\xb3\x95\xe5\xae\xb6\xe9\xa1\x9e', 'ID': 'KR3c', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}), ('kr:meta:KR1g', {'TPUR': '\xe4\xba\x94\xe7\xb6\x93\xe7\xb8\xbd\xe7\xbe\xa9\xe9\xa1\x9e', 'TITLE': '\xe4\xba\x94\xe7\xb6\x93\xe7\xb8\xbd\xe7\xbe\xa9\xe9\xa1\x9e', 'ID': 'KR1g', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}), ('kr:meta:KR1f', {'TPUR': '\xe5\xad\x9d\xe7\xb6\x93\xe9\xa1\x9e', 'TITLE': '\xe5\xad\x9d\xe7\xb6\x93\xe9\xa1\x9e', 'ID': 'KR1f', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}), ('kr:meta:KR6l', {'TPUR': '\xe6\xaf\x98\xe6\x9b\x87\xe9\x83\xa8\xe9\xa1\x9e', 'TITLE': '\xe6\xaf\x98\xe6\x9b\x87\xe9\x83\xa8\xe9\xa1\x9e', 'ID': 'KR6l', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}), ('kr:meta:KR4c', {'TPUR': '\xe5\x88\xa5\xe9\x9b\x86\xe9\xa1\x9e', 'TITLE': '\xe5\x88\xa5\xe9\x9b\x86\xe9\xa1\x9e-\xe5\x94\x90', 'ID': 'KR4c', 'DYNASTY': '\xe5\x94\x90'}), ('kr:meta:KR6p', {'TPUR': '\xe6\xb7\xa8\xe5\x9c\x9f\xe5\xae\x97\xe9\x83\xa8\xe9\xa1\x9e', 'TITLE': '\xe6\xb7\xa8\xe5\x9c\x9f\xe5\xae\x97\xe9\x83\xa8\xe9\xa1\x9e', 'ID': 'KR6p', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}), ('kr:meta:KR1i', {'TPUR': '\xe6\xa8\x82\xe9\xa1\x9e', 'TITLE': '\xe6\xa8\x82\xe9\xa1\x9e', 'ID': 'KR1i', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}), ('kr:meta:KR5c', {'TPUR': '\xe6\xb4\x9e\xe7\xa5\x9e\xe9\x83\xa8', 'TITLE': '\xe6\xb4\x9e\xe7\xa5\x9e\xe9\x83\xa8', 'ID': 'KR5c', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}), ('kr:meta:KR6k', {'TPUR': '\xe5\xbe\x8b\xe9\x83\xa8\xe9\xa1\x9e', 'TITLE': '\xe5\xbe\x8b\xe9\x83\xa8\xe9\xa1\x9e', 'ID': 'KR6k', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}), ('kr:meta:KR2d', {'TPUR': '\xe5\x88\xa5\xe5\x8f\xb2\xe9\xa1\x9e', 'TITLE': '\xe5\x88\xa5\xe5\x8f\xb2\xe9\xa1\x9e', 'ID': 'KR2d', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}), ('kr:meta:KR2i', {'TPUR': '\xe8\xbc\x89\xe8\xa8\x98\xe9\xa1\x9e', 'TITLE': '\xe8\xbc\x89\xe8\xa8\x98\xe9\xa1\x9e', 'ID': 'KR2i', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}), ('kr:meta:KR6v', {'TPUR': '\xe6\x96\xb0\xe7\xb7\xa8\xe9\x83\xa8\xe9\xa1\x9e', 'TITLE': '\xe6\x96\xb0\xe7\xb7\xa8\xe9\x83\xa8\xe9\xa1\x9e', 'ID': 'KR6v', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}), ('kr:meta:KR5', {'TPUR': '\xe9\x81\x93\xe9\x83\xa8', 'TITLE': '\xe9\x81\x93\xe9\x83\xa8', 'ID': 'KR5', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}), ('kr:meta:KR2k', {'TPUR': '\xe5\x9c\xb0\xe7\x90\x86\xe9\xa1\x9e', 'TITLE': '\xe5\x9c\xb0\xe7\x90\x86\xe9\xa1\x9e', 'ID': 'KR2k', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}), ('kr:meta:KR4g', {'TPUR': '\xe5\x88\xa5\xe9\x9b\x86\xe9\xa1\x9e', 'TITLE': '\xe5\x88\xa5\xe9\x9b\x86\xe9\xa1\x9e-\xe8\xbf\x91', 'ID': 'KR4g', 'DYNASTY': '\xe8\xbf\x91'}), ('kr:meta:KR3i', {'TPUR': '\xe8\xad\x9c\xe9\x8c\x84\xe9\xa1\x9e', 'TITLE': '\xe8\xad\x9c\xe9\x8c\x84\xe9\xa1\x9e', 'ID': 'KR3i', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}), ('kr:meta:KR4b', {'TPUR': '\xe5\x88\xa5\xe9\x9b\x86\xe9\xa1\x9e', 'TITLE': '\xe5\x88\xa5\xe9\x9b\x86\xe9\xa1\x9e-\xe6\xbc\xa2\xe5\x85\xad\xe6\x9c\x9d', 'ID': 'KR4b', 'DYNASTY': '\xe6\xbc\xa2\xe5\x85\xad\xe6\x9c\x9d'}), ('kr:meta:KR4', {'TPUR': '\xe9\x9b\x86\xe9\x83\xa8', 'TITLE': '\xe9\x9b\x86\xe9\x83\xa8', 'ID': 'KR4', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}), ('kr:meta:KR2m', {'TPUR': '\xe6\x94\xbf\xe6\x9b\xb8\xe9\xa1\x9e', 'TITLE': '\xe6\x94\xbf\xe6\x9b\xb8\xe9\xa1\x9e', 'ID': 'KR2m', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}), ('kr:meta:KR1a', {'TPUR': '\xe6\x98\x93\xe9\xa1\x9e', 'TITLE': '\xe6\x98\x93\xe9\xa1\x9e', 'ID': 'KR1a', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}), ('kr:meta:KR2c', {'TPUR': '\xe7\xb4\x80\xe4\xba\x8b\xe6\x9c\xac\xe6\x9c\xab\xe9\xa1\x9e', 'TITLE': '\xe7\xb4\x80\xe4\xba\x8b\xe6\x9c\xac\xe6\x9c\xab\xe9\xa1\x9e', 'ID': 'KR2c', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}), ('kr:meta:KR5i', {'TPUR': '\xe6\xb8\x85\xe4\xbb\xa3\xe9\x81\x93\xe6\x95\x99\xe6\x96\x87\xe7\x8d\xbb', 'TITLE': '\xe6\xb8\x85\xe4\xbb\xa3\xe9\x81\x93\xe6\x95\x99\xe6\x96\x87\xe7\x8d\xbb', 'ID': 'KR5i', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}), ('kr:meta:KR3k', {'TPUR': '\xe9\xa1\x9e\xe6\x9b\xb8\xe9\xa1\x9e', 'TITLE': '\xe9\xa1\x9e\xe6\x9b\xb8\xe9\xa1\x9e', 'ID': 'KR3k', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}), ('kr:meta:KR3f', {'TPUR': '\xe5\xa4\xa9\xe6\x96\x87\xe7\xae\x97\xe6\xb3\x95\xe9\xa1\x9e', 'TITLE': '\xe5\xa4\xa9\xe6\x96\x87\xe7\xae\x97\xe6\xb3\x95\xe9\xa1\x9e', 'ID': 'KR3f', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}), ('kr:meta:KR6n', {'TPUR': '\xe7\x91\x9c\xe4\xbc\xbd\xe9\x83\xa8\xe9\xa1\x9e', 'TITLE': '\xe7\x91\x9c\xe4\xbc\xbd\xe9\x83\xa8\xe9\xa1\x9e', 'ID': 'KR6n', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}), ('kr:meta:KR5e', {'TPUR': '\xe5\xa4\xaa\xe5\xb9\xb3\xe9\x83\xa8', 'TITLE': '\xe5\xa4\xaa\xe5\xb9\xb3\xe9\x83\xa8', 'ID': 'KR5e', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}), ('kr:meta:KR1b', {'TPUR': '\xe6\x9b\xb8\xe9\xa1\x9e', 'TITLE': '\xe6\x9b\xb8\xe9\xa1\x9e', 'ID': 'KR1b', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}), ('kr:meta:KR6e', {'TPUR': '\xe8\x8f\xaf\xe5\x9a\xb4\xe9\x83\xa8\xe9\xa1\x9e', 'TITLE': '\xe8\x8f\xaf\xe5\x9a\xb4\xe9\x83\xa8\xe9\xa1\x9e', 'ID': 'KR6e', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}), ('kr:meta:KR4a', {'TPUR': '\xe6\xa5\x9a\xe8\xbe\xad\xe9\xa1\x9e', 'TITLE': '\xe6\xa5\x9a\xe8\xbe\xad\xe9\xa1\x9e', 'ID': 'KR4a', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}), ('kr:meta:KR5j', {'TPUR': '\xe6\x95\xa6\xe7\x85\x8c\xe9\x81\x93\xe6\x95\x99\xe6\x96\x87\xe7\x8d\xbb', 'TITLE': '\xe6\x95\xa6\xe7\x85\x8c\xe9\x81\x93\xe6\x95\x99\xe6\x96\x87\xe7\x8d\xbb', 'ID': 'KR5j', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}), ('kr:meta:KR6d', {'TPUR': '\xe6\xb3\x95\xe8\x8f\xaf\xe9\x83\xa8\xe9\xa1\x9e', 'TITLE': '\xe6\xb3\x95\xe8\x8f\xaf\xe9\x83\xa8\xe9\xa1\x9e', 'ID': 'KR6d', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}), ('kr:meta:KR4i', {'TPUR': '\xe8\xa9\xa9\xe6\x96\x87\xe8\xa9\x95\xe9\xa1\x9e', 'TITLE': '\xe8\xa9\xa9\xe6\x96\x87\xe8\xa9\x95\xe9\xa1\x9e', 'ID': 'KR4i', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}), ('kr:meta:KR2g', {'TPUR': '\xe5\x82\xb3\xe8\xa8\x98\xe9\xa1\x9e', 'TITLE': '\xe5\x82\xb3\xe8\xa8\x98\xe9\xa1\x9e', 'ID': 'KR2g', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}), ('kr:meta:KR1h', {'TPUR': '\xe5\x9b\x9b\xe6\x9b\xb8\xe9\xa1\x9e', 'TITLE': '\xe5\x9b\x9b\xe6\x9b\xb8\xe9\xa1\x9e', 'ID': 'KR1h', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}), ('kr:meta:KR5h', {'TPUR': '\xe7\xba\x8c\xe9\x81\x93\xe8\x97\x8f', 'TITLE': '\xe7\xba\x8c\xe9\x81\x93\xe8\x97\x8f', 'ID': 'KR5h', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}), ('kr:meta:KR3', {'TPUR': '\xe5\xad\x90\xe9\x83\xa8', 'TITLE': '\xe5\xad\x90\xe9\x83\xa8', 'ID': 'KR3', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}), ('kr:meta:KR5d', {'TPUR': '\xe5\xa4\xaa\xe7\x8e\x84\xe9\x83\xa8', 'TITLE': '\xe5\xa4\xaa\xe7\x8e\x84\xe9\x83\xa8', 'ID': 'KR5d', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}), ('kr:meta:KR5a', {'TPUR': '\xe6\xb4\x9e\xe7\x9c\x9f\xe9\x83\xa8', 'TITLE': '\xe6\xb4\x9e\xe7\x9c\x9f\xe9\x83\xa8', 'ID': 'KR5a', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}), ('kr:meta:KR4j', {'TPUR': '\xe8\xa9\x9e\xe6\x9b\xb2\xe9\xa1\x9e', 'TITLE': '\xe8\xa9\x9e\xe6\x9b\xb2\xe9\xa1\x9e', 'ID': 'KR4j', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}), ('kr:meta:KR2f', {'TPUR': '\xe8\xa9\x94\xe4\xbb\xa4\xe5\xa5\x8f\xe8\xad\xb0\xe9\xa1\x9e', 'TITLE': '\xe8\xa9\x94\xe4\xbb\xa4\xe5\xa5\x8f\xe8\xad\xb0\xe9\xa1\x9e', 'ID': 'KR2f', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}), ('kr:meta:KR3j', {'TPUR': '\xe9\x9b\x9c\xe5\xae\xb6\xe9\xa1\x9e', 'TITLE': '\xe9\x9b\x9c\xe5\xae\xb6\xe9\xa1\x9e', 'ID': 'KR3j', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}), ('kr:meta:KR2o', {'TPUR': '\xe5\x8f\xb2\xe8\xa9\x95\xe9\xa1\x9e', 'TITLE': '\xe5\x8f\xb2\xe8\xa9\x95\xe9\xa1\x9e', 'ID': 'KR2o', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}), ('kr:meta:KR3h', {'TPUR': '\xe8\x97\x9d\xe8\xa1\x93\xe9\xa1\x9e', 'TITLE': '\xe8\x97\x9d\xe8\xa1\x93\xe9\xa1\x9e', 'ID': 'KR3h', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'})]
>>> len(cat)
85
>>> for a in cat:
...   print a[0], a[1]['TPUR']
... 
kr:meta:KR5g 正一部
kr:meta:KR6g 涅槃部類
kr:meta:KR6s 事彙部類
kr:meta:KR2n 目錄類
kr:meta:KR6m 中觀部類
kr:meta:KR1 經部
kr:meta:KR4f 別集類
kr:meta:KR6a 阿含部類
kr:meta:KR3g 術數類
kr:meta:KR4d 別集類
kr:meta:KR6u 敦煌寫本部類
kr:meta:KR6f 寶積部類
kr:meta:KR3d 農家類
kr:meta:KR6c 般若部類
kr:meta:KR6r 史傳部類
kr:meta:KR3e 醫家類
kr:meta:KR4h 總集類
kr:meta:KR2j 時令類
kr:meta:KR1j 小學類
kr:meta:KR3l 小說家類
kr:meta:KR1e 春秋類
kr:meta:KR2a 正史類
kr:meta:KR1c 詩類
kr:meta:KR6b 本緣部類
kr:meta:KR2b 編年類
kr:meta:KR2l 職官類
kr:meta:KR6o 論集部類
kr:meta:KR6q 禪宗部類
kr:meta:KR6j 密教部類
kr:meta:KR6i 經集部類
kr:meta:KR2e 雜史類
kr:meta:KR6h 大集部類
kr:meta:KR2h 史鈔類
kr:meta:KR6 佛部
kr:meta:KR6t 續諸宗(日本)
kr:meta:KR3b 兵家類
kr:meta:KR5f 太清部
kr:meta:KR1d 禮類
kr:meta:KR5b 洞玄部
kr:meta:KR4e 別集類
kr:meta:KR2 史部
kr:meta:KR3a 儒家類
kr:meta:KR3c 法家類
kr:meta:KR1g 五經總義類
kr:meta:KR1f 孝經類
kr:meta:KR6l 毘曇部類
kr:meta:KR4c 別集類
kr:meta:KR6p 淨土宗部類
kr:meta:KR1i 樂類
kr:meta:KR5c 洞神部
kr:meta:KR6k 律部類
kr:meta:KR2d 別史類
kr:meta:KR2i 載記類
kr:meta:KR6v 新編部類
kr:meta:KR5 道部
kr:meta:KR2k 地理類
kr:meta:KR4g 別集類
kr:meta:KR3i 譜錄類
kr:meta:KR4b 別集類
kr:meta:KR4 集部
kr:meta:KR2m 政書類
kr:meta:KR1a 易類
kr:meta:KR2c 紀事本末類
kr:meta:KR5i 清代道教文獻
kr:meta:KR3k 類書類
kr:meta:KR3f 天文算法類
kr:meta:KR6n 瑜伽部類
kr:meta:KR5e 太平部
kr:meta:KR1b 書類
kr:meta:KR6e 華嚴部類
kr:meta:KR4a 楚辭類
kr:meta:KR5j 敦煌道教文獻
kr:meta:KR6d 法華部類
kr:meta:KR4i 詩文評類
kr:meta:KR2g 傳記類
kr:meta:KR1h 四書類
kr:meta:KR5h 續道藏
kr:meta:KR3 子部
kr:meta:KR5d 太玄部
kr:meta:KR5a 洞真部
kr:meta:KR4j 詞曲類
kr:meta:KR2f 詔令奏議類
kr:meta:KR3j 雜家類
kr:meta:KR2o 史評類
kr:meta:KR3h 藝術類
>>> cat.sort(key=lambda t : t['ID'])
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 1, in <lambda>
TypeError: tuple indices must be integers, not str
>>> cat.sort(key=lambda t : t[1]['ID'])
>>> for a in cat:
...   print a[0], a[1]['TPUR']
... 
kr:meta:KR1 經部
kr:meta:KR1a 易類
kr:meta:KR1b 書類
kr:meta:KR1c 詩類
kr:meta:KR1d 禮類
kr:meta:KR1e 春秋類
kr:meta:KR1f 孝經類
kr:meta:KR1g 五經總義類
kr:meta:KR1h 四書類
kr:meta:KR1i 樂類
kr:meta:KR1j 小學類
kr:meta:KR2 史部
kr:meta:KR2a 正史類
kr:meta:KR2b 編年類
kr:meta:KR2c 紀事本末類
kr:meta:KR2d 別史類
kr:meta:KR2e 雜史類
kr:meta:KR2f 詔令奏議類
kr:meta:KR2g 傳記類
kr:meta:KR2h 史鈔類
kr:meta:KR2i 載記類
kr:meta:KR2j 時令類
kr:meta:KR2k 地理類
kr:meta:KR2l 職官類
kr:meta:KR2m 政書類
kr:meta:KR2n 目錄類
kr:meta:KR2o 史評類
kr:meta:KR3 子部
kr:meta:KR3a 儒家類
kr:meta:KR3b 兵家類
kr:meta:KR3c 法家類
kr:meta:KR3d 農家類
kr:meta:KR3e 醫家類
kr:meta:KR3f 天文算法類
kr:meta:KR3g 術數類
kr:meta:KR3h 藝術類
kr:meta:KR3i 譜錄類
kr:meta:KR3j 雜家類
kr:meta:KR3k 類書類
kr:meta:KR3l 小說家類
kr:meta:KR4 集部
kr:meta:KR4a 楚辭類
kr:meta:KR4b 別集類
kr:meta:KR4c 別集類
kr:meta:KR4d 別集類
kr:meta:KR4e 別集類
kr:meta:KR4f 別集類
kr:meta:KR4g 別集類
kr:meta:KR4h 總集類
kr:meta:KR4i 詩文評類
kr:meta:KR4j 詞曲類
kr:meta:KR5 道部
kr:meta:KR5a 洞真部
kr:meta:KR5b 洞玄部
kr:meta:KR5c 洞神部
kr:meta:KR5d 太玄部
kr:meta:KR5e 太平部
kr:meta:KR5f 太清部
kr:meta:KR5g 正一部
kr:meta:KR5h 續道藏
kr:meta:KR5i 清代道教文獻
kr:meta:KR5j 敦煌道教文獻
kr:meta:KR6 佛部
kr:meta:KR6a 阿含部類
kr:meta:KR6b 本緣部類
kr:meta:KR6c 般若部類
kr:meta:KR6d 法華部類
kr:meta:KR6e 華嚴部類
kr:meta:KR6f 寶積部類
kr:meta:KR6g 涅槃部類
kr:meta:KR6h 大集部類
kr:meta:KR6i 經集部類
kr:meta:KR6j 密教部類
kr:meta:KR6k 律部類
kr:meta:KR6l 毘曇部類
kr:meta:KR6m 中觀部類
kr:meta:KR6n 瑜伽部類
kr:meta:KR6o 論集部類
kr:meta:KR6p 淨土宗部類
kr:meta:KR6q 禪宗部類
kr:meta:KR6r 史傳部類
kr:meta:KR6s 事彙部類
kr:meta:KR6t 續諸宗(日本)
kr:meta:KR6u 敦煌寫本部類
kr:meta:KR6v 新編部類
>>> cat = [(a, r.hgetall(a)) for a in r.keys("kr:meta*")]
>>> len(cat)
27997
>>> cat = [(a, r.hgetall(a)) for a in r.keys("kr:meta:DZ*")]
>>> len(cat)
1530
>>> zbmeta = "kr:meta:"
>>> cat = [(a, r.hgetall(a)) for a in r.keys("kr:meta:DZ*")]
>>> coll="DZ"
>>> cat = [(a, r.hgetall(a)) for a in r.keys(zbmeta+coll+"*")]
>>> len(cat)
1530
>>> cat[0:2]
[('kr:meta:DZ0355', {'TPUR': '\xe5\xa4\xaa\xe4\xb8\x8a\xe6\xb4\x9e\xe7\x8e\x84\xe9\x9d\x88\xe5\xaf\xb6\xe7\xa6\x8f\xe6\x97\xa5\xe5\xa6\x99\xe7\xb6\x93', 'TITLE': '\xe5\xa4\xaa\xe4\xb8\x8a\xe6\xb4\x9e\xe7\x8e\x84\xe9\x9d\x88\xe5\xaf\xb6\xe7\xa6\x8f\xe6\x97\xa5\xe5\xa6\x99\xe7\xb6\x93-\xe5\x94\x90-', 'ID': 'KR5b0039', 'DYNASTY': '\xe5\x94\x90'}), ('kr:meta:DZ0434', {'TPUR': '\xe7\x8e\x84\xe5\xaf\xb6\xe4\xba\xba\xe9\xb3\xa5\xe5\xb1\xb1\xe7\xb6\x93\xe5\x9c\x96', 'TITLE': '\xe7\x8e\x84\xe5\xaf\xb6\xe4\xba\xba\xe9\xb3\xa5\xe5\xb1\xb1\xe7\xb6\x93\xe5\x9c\x96--', 'ID': 'KR5b0118', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'})]
>>> cat = [r.hgetall("%s%s" %( zbmeta, k.split(':')[-1][0:8])) for k in r.keys(zbmeta+coll+"*")]
>>> cat
[{'TPUR': '\xe5\xa4\xaa\xe4\xb8\x8a\xe6\xb4\x9e\xe7\x8e\x84\xe9\x9d\x88\xe5\xaf\xb6\xe7\xa6\x8f\xe6\x97\xa5\xe5\xa6\x99\xe7\xb6\x93', 'TITLE': '\xe5\xa4\xaa\xe4\xb8\x8a\xe6\xb4\x9e\xe7\x8e\x84\xe9\x9d\x88\xe5\xaf\xb6\xe7\xa6\x8f\xe6\x97\xa5\xe5\xa6\x99\xe7\xb6\x93-\xe5\x94\x90-', 'ID': 'KR5b0039', 'DYNASTY': '\xe5\x94\x90'}, {'TPUR': '\xe7\x8e\x84\xe5\xaf\xb6\xe4\xba\xba\xe9\xb3\xa5\xe5\xb1\xb1\xe7\xb6\x93\xe5\x9c\x96', 'TITLE': '\xe7\x8e\x84\xe5\xaf\xb6\xe4\xba\xba\xe9\xb3\xa5\xe5\xb1\xb1\xe7\xb6\x93\xe5\x9c\x96--', 'ID': 'KR5b0118', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe6\xb2\x96\xe8\x99\x9b\xe8\x87\xb3\xe5\xbe\xb7\xe7\x9c\x9f\xe7\xb6\x93', 'RESP': '\xe5\x88\x97\xe7\xa6\xa6\xe5\xaf\x87', 'TITLE': '\xe6\xb2\x96\xe8\x99\x9b\xe8\x87\xb3\xe5\xbe\xb7\xe7\x9c\x9f\xe7\xb6\x93--\xe5\x88\x97\xe7\xa6\xa6\xe5\xaf\x87', 'ID': 'KR5c0049', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe8\x8d\x89\xe5\xa0\x82\xe9\x9b\x86', 'RESP': '\xe7\x8e\x8b\xe4\xb8\xb9\xe6\xa1\x82', 'TITLE': '\xe8\x8d\x89\xe5\xa0\x82\xe9\x9b\x86--\xe7\x8e\x8b\xe4\xb8\xb9\xe6\xa1\x82', 'ID': 'KR5e0045', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe6\xb8\x85\xe6\xb2\xb3\xe5\x85\xa7\xe5\x82\xb3', 'TITLE': '\xe6\xb8\x85\xe6\xb2\xb3\xe5\x85\xa7\xe5\x82\xb3-\xe6\x98\x8e-', 'ID': 'KR5a0170', 'DYNASTY': '\xe6\x98\x8e'}, {'TPUR': '\xe6\x98\x93\xe5\x9b\xa0\xe4\xb8\x8a\xe4\xb8\x8b\xe7\xb6\x93', 'RESP': '\xe6\x9d\x8e\xe8\xb4\x84', 'TITLE': '\xe6\x98\x93\xe5\x9b\xa0\xe4\xb8\x8a\xe4\xb8\x8b\xe7\xb6\x93--\xe6\x9d\x8e\xe8\xb4\x84', 'ID': 'KR5h0042', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe4\xbf\xae\xe7\x9c\x9f\xe5\x8d\x81\xe6\x9b\xb8\xe9\x9b\x9c\xe8\x91\x97\xe6\x8d\xb7\xe5\xbe\x91', 'TITLE': '\xe4\xbf\xae\xe7\x9c\x9f\xe5\x8d\x81\xe6\x9b\xb8\xe9\x9b\x9c\xe8\x91\x97\xe6\x8d\xb7\xe5\xbe\x91-\xe5\x85\x83-', 'ID': 'KR5a0267', 'DYNASTY': '\xe5\x85\x83'}, {'TPUR': '\xe5\x94\x90\xe7\x8e\x84\xe5\xae\x97\xe5\xbe\xa1\xe8\xa3\xbd\xe9\x81\x93\xe5\xbe\xb7\xe7\x9c\x9f\xe7\xb6\x93\xe7\x96\x8f(\xe4\xb8\x80)', 'RESP': '\xe7\x8e\x84\xe5\xae\x97', 'TITLE': '\xe5\x94\x90\xe7\x8e\x84\xe5\xae\x97\xe5\xbe\xa1\xe8\xa3\xbd\xe9\x81\x93\xe5\xbe\xb7\xe7\x9c\x9f\xe7\xb6\x93\xe7\x96\x8f(\xe4\xb8\x80)-\xe5\x94\x90-\xe7\x8e\x84\xe5\xae\x97', 'ID': 'KR5c0060', 'DYNASTY': '\xe5\x94\x90'}, {'TPUR': '\xe5\xa4\xaa\xe4\xb8\x8a\xe6\xb4\x9e\xe7\x8e\x84\xe9\x9d\x88\xe5\xaf\xb6\xe5\xa4\xa9\xe5\xb0\x8a\xe8\xaa\xaa\xe9\xa4\x8a\xe8\xa0\xb6\xe7\x87\x9f\xe7\xa8\xae\xe7\xb6\x93', 'TITLE': '\xe5\xa4\xaa\xe4\xb8\x8a\xe6\xb4\x9e\xe7\x8e\x84\xe9\x9d\x88\xe5\xaf\xb6\xe5\xa4\xa9\xe5\xb0\x8a\xe8\xaa\xaa\xe9\xa4\x8a\xe8\xa0\xb6\xe7\x87\x9f\xe7\xa8\xae\xe7\xb6\x93--', 'ID': 'KR5b0044', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe5\xa4\xaa\xe4\xb8\x8a\xe9\xa3\x9b\xe6\xad\xa5\xe5\x8d\x97\xe6\x96\x97\xe5\xa4\xaa\xe5\xbe\xae\xe7\x8e\x89\xe7\xb6\x93', 'TITLE': '\xe5\xa4\xaa\xe4\xb8\x8a\xe9\xa3\x9b\xe6\xad\xa5\xe5\x8d\x97\xe6\x96\x97\xe5\xa4\xaa\xe5\xbe\xae\xe7\x8e\x89\xe7\xb6\x93-\xe5\x94\x90-', 'ID': 'KR5c0019', 'DYNASTY': '\xe5\x94\x90'}, {'TPUR': '\xe9\x87\x91\xe7\x9f\xb3\xe7\xb0\xbf\xe4\xb9\x9d\xe4\xba\x94\xe6\x95\xb8\xe8\xa8\xa3', 'TITLE': '\xe9\x87\x91\xe7\x9f\xb3\xe7\xb0\xbf\xe4\xb9\x9d\xe4\xba\x94\xe6\x95\xb8\xe8\xa8\xa3-686-', 'ID': 'KR5c0305', 'DYNASTY': '686'}, {'TPUR': '\xe7\x8c\xb6\xe9\xbe\x8d\xe5\x82\xb3', 'RESP': '\xe8\xb3\x88\xe5\x96\x84\xe7\xbf\x94', 'TITLE': '\xe7\x8c\xb6\xe9\xbe\x8d\xe5\x82\xb3--\xe8\xb3\x88\xe5\x96\x84\xe7\xbf\x94', 'ID': 'KR5c0170', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe9\x81\x93\xe6\xb3\x95\xe5\xbf\x83\xe5\x82\xb3', 'RESP': '\xe7\x8e\x8b\xe6\x83\x9f\xe4\xb8\x80', 'TITLE': '\xe9\x81\x93\xe6\xb3\x95\xe5\xbf\x83\xe5\x82\xb3--\xe7\x8e\x8b\xe6\x83\x9f\xe4\xb8\x80', 'ID': 'KR5g0062', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe5\xa4\xaa\xe4\xb8\x8a\xe9\x9d\x88\xe5\xaf\xb6\xe6\xb7\xa8\xe6\x98\x8e\xe4\xb8\xad\xe9\xbb\x83\xe5\x85\xab\xe6\x9f\xb1\xe7\xb6\x93', 'TITLE': '\xe5\xa4\xaa\xe4\xb8\x8a\xe9\x9d\x88\xe5\xaf\xb6\xe6\xb7\xa8\xe6\x98\x8e\xe4\xb8\xad\xe9\xbb\x83\xe5\x85\xab\xe6\x9f\xb1\xe7\xb6\x93--', 'ID': 'KR5e0011', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe6\xad\xa3\xe4\xb8\x80\xe6\xb3\x95\xe6\x96\x87\xe5\x82\xb3\xe9\x83\xbd\xe5\x8a\x9f\xe7\x89\x88\xe5\x84\x80', 'TITLE': '\xe6\xad\xa3\xe4\xb8\x80\xe6\xb3\x95\xe6\x96\x87\xe5\x82\xb3\xe9\x83\xbd\xe5\x8a\x9f\xe7\x89\x88\xe5\x84\x80-\xe5\x94\x90\xe5\x88\x9d\xe6\x9c\x9f-', 'ID': 'KR5g0020', 'DYNASTY': '\xe5\x94\x90\xe5\x88\x9d\xe6\x9c\x9f'}, {'TPUR': '\xe5\x87\x9d\xe9\x99\xbd\xe8\x91\xa3\xe7\x9c\x9f\xe4\xba\xba\xe9\x81\x87\xe4\xbb\x99\xe8\xa8\x98', 'RESP': '\xe7\xa5\xbf\xe6\x98\xad\xe8\x81\x9e', 'TITLE': '\xe5\x87\x9d\xe9\x99\xbd\xe8\x91\xa3\xe7\x9c\x9f\xe4\xba\xba\xe9\x81\x87\xe4\xbb\x99\xe8\xa8\x98--\xe7\xa5\xbf\xe6\x98\xad\xe8\x81\x9e', 'ID': 'KR5a0320', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe6\x98\x93\xe5\x9c\x96\xe9\x80\x9a\xe8\xae\x8a', 'RESP': '\xe9\x9b\xb7\xe6\x80\x9d\xe9\xbd\x8a', 'TITLE': '\xe6\x98\x93\xe5\x9c\x96\xe9\x80\x9a\xe8\xae\x8a--\xe9\x9b\xb7\xe6\x80\x9d\xe9\xbd\x8a', 'ID': 'KR5d0034', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe9\x87\x91\xe7\xb1\x99\xe8\xa7\xa3\xe5\xa3\x87\xe5\x84\x80', 'TITLE': '\xe9\x87\x91\xe7\xb1\x99\xe8\xa7\xa3\xe5\xa3\x87\xe5\x84\x80--', 'ID': 'KR5b0175', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe9\xbb\x83\xe5\xb8\x9d\xe6\x8e\x88\xe4\xb8\x89\xe5\xad\x90\xe7\x8e\x84\xe5\xa5\xb3\xe7\xb6\x93', 'TITLE': '\xe9\xbb\x83\xe5\xb8\x9d\xe6\x8e\x88\xe4\xb8\x89\xe5\xad\x90\xe7\x8e\x84\xe5\xa5\xb3\xe7\xb6\x93-\xe5\x85\xad\xe6\x9c\x9d-', 'ID': 'KR5a0297', 'DYNASTY': '\xe5\x85\xad\xe6\x9c\x9d'}, {'TPUR': '\xe9\x80\x9a\xe7\x8e\x84\xe7\x9c\x9f\xe7\xb6\x93(\xe4\xba\x8c)', 'RESP': '\xe6\x9c\xb1\xe5\xbc\x81', 'TITLE': '\xe9\x80\x9a\xe7\x8e\x84\xe7\x9c\x9f\xe7\xb6\x93(\xe4\xba\x8c)--\xe6\x9c\xb1\xe5\xbc\x81', 'ID': 'KR5c0145', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe4\xb8\x8a\xe6\xb8\x85\xe6\xb2\xb3\xe5\x9c\x96\xe5\xaf\xb6\xe7\xb1\x99', 'TITLE': '\xe4\xb8\x8a\xe6\xb8\x85\xe6\xb2\xb3\xe5\x9c\x96\xe5\xaf\xb6\xe7\xb1\x99-\xe5\x94\x90-', 'ID': 'KR5g0205', 'DYNASTY': '\xe5\x94\x90'}, {'TPUR': '\xe8\xad\x89\xe9\x81\x93\xe6\xad\x8c', 'RESP': '\xe5\xb7\xa6\xe6\x8e\x8c\xe5\xad\x90', 'TITLE': '\xe8\xad\x89\xe9\x81\x93\xe6\xad\x8c-\xe5\x8c\x97\xe5\xae\x8b-\xe5\xb7\xa6\xe6\x8e\x8c\xe5\xad\x90', 'ID': 'KR5d0118', 'DYNASTY': '\xe5\x8c\x97\xe5\xae\x8b'}, {'TPUR': '\xe5\xa4\xaa\xe4\xb8\x8a\xe8\x80\x81\xe5\x90\x9b\xe8\xaa\xaa\xe5\xb8\xb8\xe6\xb8\x85\xe9\x9d\x9c\xe7\xb6\x93\xe8\xa8\xbb(\xe4\xba\x94)', 'RESP': '\xe6\x9d\x9c\xe5\x85\x89\xe5\xba\xad', 'TITLE': '\xe5\xa4\xaa\xe4\xb8\x8a\xe8\x80\x81\xe5\x90\x9b\xe8\xaa\xaa\xe5\xb8\xb8\xe6\xb8\x85\xe9\x9d\x9c\xe7\xb6\x93\xe8\xa8\xbb(\xe4\xba\x94)--\xe6\x9d\x9c\xe5\x85\x89\xe5\xba\xad', 'ID': 'KR5c0155', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe4\xb8\x8a\xe6\xb8\x85\xe6\x8f\xa1\xe4\xb8\xad\xe8\xa8\xa3', 'RESP': '\xe9\x99\xb6\xe5\xbc\x98\xe6\x99\xaf', 'TITLE': '\xe4\xb8\x8a\xe6\xb8\x85\xe6\x8f\xa1\xe4\xb8\xad\xe8\xa8\xa3--\xe9\x99\xb6\xe5\xbc\x98\xe6\x99\xaf', 'ID': 'KR5a0141', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe5\xa4\xaa\xe4\xb8\x8a\xe4\xbf\x9d\xe7\x9c\x9f\xe9\xa4\x8a\xe7\x94\x9f\xe8\xab\x96', 'TITLE': '\xe5\xa4\xaa\xe4\xb8\x8a\xe4\xbf\x9d\xe7\x9c\x9f\xe9\xa4\x8a\xe7\x94\x9f\xe8\xab\x96-\xe4\xba\x94\xe4\xbb\xa3-', 'ID': 'KR5c0249', 'DYNASTY': '\xe4\xba\x94\xe4\xbb\xa3'}, {'TPUR': '\xe5\x85\x83\xe5\xa7\x8b\xe5\xa4\xa9\xe5\xb0\x8a\xe8\xaa\xaa\xe7\x94\x9f\xe5\xa4\xa9\xe5\xbe\x97\xe9\x81\x93\xe7\xb6\x93', 'TITLE': '\xe5\x85\x83\xe5\xa7\x8b\xe5\xa4\xa9\xe5\xb0\x8a\xe8\xaa\xaa\xe7\x94\x9f\xe5\xa4\xa9\xe5\xbe\x97\xe9\x81\x93\xe7\xb6\x93-\xe5\x94\x90-', 'ID': 'KR5a0024', 'DYNASTY': '\xe5\x94\x90'}, {'TPUR': '\xe9\x9b\xb2\xe7\xac\x88\xe4\xb8\x83\xe7\xb1\xa4', 'RESP': '\xe5\xbc\xb5\xe5\x90\x9b\xe6\x88\xbf', 'TITLE': '\xe9\x9b\xb2\xe7\xac\x88\xe4\xb8\x83\xe7\xb1\xa4-\xe5\x94\x90-\xe5\xbc\xb5\xe5\x90\x9b\xe6\x88\xbf', 'ID': 'KR5d0055', 'DYNASTY': '\xe5\x94\x90'}, {'TPUR': '\xe4\xb8\x89\xe8\x8c\x85\xe7\x9c\x9f\xe5\x90\x9b\xe5\x8a\xa0\xe5\xb0\x81\xe4\xba\x8b\xe5\x85\xb8', 'RESP': '\xe5\xbc\xb5\xe5\xa4\xa7\xe6\xb7\xb3', 'TITLE': '\xe4\xb8\x89\xe8\x8c\x85\xe7\x9c\x9f\xe5\x90\x9b\xe5\x8a\xa0\xe5\xb0\x81\xe4\xba\x8b\xe5\x85\xb8--\xe5\xbc\xb5\xe5\xa4\xa7\xe6\xb7\xb3', 'ID': 'KR5a0173', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe9\x9d\x88\xe5\xaf\xb6\xe6\xb7\xa8\xe6\x98\x8e\xe9\x99\xa2\xe7\x9c\x9f\xe5\xb8\xab\xe5\xaf\x86\xe8\xaa\xa5', 'TITLE': '\xe9\x9d\x88\xe5\xaf\xb6\xe6\xb7\xa8\xe6\x98\x8e\xe9\x99\xa2\xe7\x9c\x9f\xe5\xb8\xab\xe5\xaf\x86\xe8\xaa\xa5--', 'ID': 'KR5b0262', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe6\xb4\x9e\xe7\x8e\x84\xe9\x9d\x88\xe5\xaf\xb6\xe9\xbd\x8b\xe8\xaa\xaa\xe5\x85\x89\xe7\x87\xad\xe6\x88\x92\xe7\xbd\xb0\xe7\x87\x88\xe7\xa5\x9d\xe9\xa1\x98\xe5\x84\x80', 'RESP': '\xe9\x99\xb8\xe4\xbf\xae\xe9\x9d\x9c', 'TITLE': '\xe6\xb4\x9e\xe7\x8e\x84\xe9\x9d\x88\xe5\xaf\xb6\xe9\xbd\x8b\xe8\xaa\xaa\xe5\x85\x89\xe7\x87\xad\xe6\x88\x92\xe7\xbd\xb0\xe7\x87\x88\xe7\xa5\x9d\xe9\xa1\x98\xe5\x84\x80--\xe9\x99\xb8\xe4\xbf\xae\xe9\x9d\x9c', 'ID': 'KR5b0227', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe5\xa4\xaa\xe4\xb8\x8a\xe8\x80\x81\xe5\x90\x9b\xe8\xaa\xaa\xe5\xb8\xb8\xe6\xb8\x85\xe9\x9d\x9c\xe7\xb6\x93\xe9\xa0\x8c\xe8\xa8\xbb', 'RESP': '\xe5\x8a\x89\xe9\x80\x9a\xe5\xbe\xae', 'TITLE': '\xe5\xa4\xaa\xe4\xb8\x8a\xe8\x80\x81\xe5\x90\x9b\xe8\xaa\xaa\xe5\xb8\xb8\xe6\xb8\x85\xe9\x9d\x9c\xe7\xb6\x93\xe9\xa0\x8c\xe8\xa8\xbb--\xe5\x8a\x89\xe9\x80\x9a\xe5\xbe\xae', 'ID': 'KR5c0374', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe8\x91\x86\xe5\x85\x89\xe9\x9b\x86', 'RESP': '\xe5\xb0\xb9\xe5\xbf\x97\xe5\xb9\xb3', 'TITLE': '\xe8\x91\x86\xe5\x85\x89\xe9\x9b\x86--\xe5\xb0\xb9\xe5\xbf\x97\xe5\xb9\xb3', 'ID': 'KR5e0048', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe4\xb8\x8a\xe6\xb8\x85\xe9\x95\xb7\xe7\x94\x9f\xe5\xaf\xb6\xe9\x91\x91\xe5\x9c\x96', 'TITLE': '\xe4\xb8\x8a\xe6\xb8\x85\xe9\x95\xb7\xe7\x94\x9f\xe5\xaf\xb6\xe9\x91\x91\xe5\x9c\x96-\xe5\x94\x90-', 'ID': 'KR5b0113', 'DYNASTY': '\xe5\x94\x90'}, {'TPUR': '\xe5\xa4\xaa\xe6\xb8\x85\xe5\x85\x83\xe9\x81\x93\xe7\x9c\x9f\xe7\xb6\x93', 'TITLE': '\xe5\xa4\xaa\xe6\xb8\x85\xe5\x85\x83\xe9\x81\x93\xe7\x9c\x9f\xe7\xb6\x93--', 'ID': 'KR5g0232', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe5\xa4\xaa\xe6\xb8\x85\xe9\x81\x93\xe6\x9e\x97\xe6\x94\x9d\xe7\x94\x9f\xe8\xab\x96', 'TITLE': '\xe5\xa4\xaa\xe6\xb8\x85\xe9\x81\x93\xe6\x9e\x97\xe6\x94\x9d\xe7\x94\x9f\xe8\xab\x96-\xe5\x94\x90-', 'ID': 'KR5g0236', 'DYNASTY': '\xe5\x94\x90'}, {'TPUR': '\xe6\xb4\x9e\xe7\x8e\x84\xe9\x9d\x88\xe5\xaf\xb6\xe5\x85\xab\xe7\xaf\x80\xe9\xbd\x8b\xe5\xae\xbf\xe5\x95\x9f\xe5\x84\x80', 'TITLE': '\xe6\xb4\x9e\xe7\x8e\x84\xe9\x9d\x88\xe5\xaf\xb6\xe5\x85\xab\xe7\xaf\x80\xe9\xbd\x8b\xe5\xae\xbf\xe5\x95\x9f\xe5\x84\x80-\xe5\x94\x90-', 'ID': 'KR5g0105', 'DYNASTY': '\xe5\x94\x90'}, {'TPUR': '\xe6\xb6\x88\xe6\x90\x96\xe5\xa2\x9f\xe7\xb6\x93', 'RESP': '\xe6\xb4\xaa\xe6\x87\x89\xe6\x98\x8e', 'TITLE': '\xe6\xb6\x88\xe6\x90\x96\xe5\xa2\x9f\xe7\xb6\x93--\xe6\xb4\xaa\xe6\x87\x89\xe6\x98\x8e', 'ID': 'KR5h0034', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe6\xad\xa3\xe4\xb8\x80\xe9\x86\xae\xe5\xae\x85\xe5\x84\x80', 'TITLE': '\xe6\xad\xa3\xe4\xb8\x80\xe9\x86\xae\xe5\xae\x85\xe5\x84\x80-\xe5\x94\x90-', 'ID': 'KR5c0198', 'DYNASTY': '\xe5\x94\x90'}, {'TPUR': '\xe6\xad\xa6\xe7\x95\xb6\xe7\xa6\x8f\xe5\x9c\xb0\xe7\xb8\xbd\xe7\x9c\x9f\xe9\x9b\x86', 'RESP': '\xe5\x8a\x89\xe9\x81\x93\xe6\x98\x8e', 'TITLE': '\xe6\xad\xa6\xe7\x95\xb6\xe7\xa6\x8f\xe5\x9c\xb0\xe7\xb8\xbd\xe7\x9c\x9f\xe9\x9b\x86--\xe5\x8a\x89\xe9\x81\x93\xe6\x98\x8e', 'ID': 'KR5c0362', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe5\x91\xa8\xe6\x98\x93\xe5\x8f\x83\xe5\x90\x8c\xe5\xa5\x91\xe5\x88\x86\xe7\xab\xa0\xe9\x80\x9a\xe7\x9c\x9f\xe7\xbe\xa9', 'RESP': '\xe5\xbd\xad\xe6\x9b\x89', 'TITLE': '\xe5\x91\xa8\xe6\x98\x93\xe5\x8f\x83\xe5\x90\x8c\xe5\xa5\x91\xe5\x88\x86\xe7\xab\xa0\xe9\x80\x9a\xe7\x9c\x9f\xe7\xbe\xa9--\xe5\xbd\xad\xe6\x9b\x89', 'ID': 'KR5d0019', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe9\x87\x91\xe4\xb8\xb9\xe8\xb3\xa6', 'RESP': '\xe9\xa6\xac\xe8\x92\x9e\xe6\x98\xad', 'TITLE': '\xe9\x87\x91\xe4\xb8\xb9\xe8\xb3\xa6-\xe5\x85\x83-\xe9\xa6\xac\xe8\x92\x9e\xe6\x98\xad', 'ID': 'KR5a0262', 'DYNASTY': '\xe5\x85\x83'}, {'TPUR': '\xe6\xb4\x9e\xe7\x8e\x84\xe9\x9d\x88\xe5\xaf\xb6\xe8\x87\xaa\xe7\x84\xb6\xe4\xb9\x9d\xe5\xa4\xa9\xe7\x94\x9f\xe7\xa5\x9e\xe7\xab\xa0\xe7\xb6\x93', 'TITLE': '\xe6\xb4\x9e\xe7\x8e\x84\xe9\x9d\x88\xe5\xaf\xb6\xe8\x87\xaa\xe7\x84\xb6\xe4\xb9\x9d\xe5\xa4\xa9\xe7\x94\x9f\xe7\xa5\x9e\xe7\xab\xa0\xe7\xb6\x93--', 'ID': 'KR5b0002', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe5\xa4\xaa\xe4\xb8\x8a\xe5\x8f\xac\xe8\xab\xb8\xe9\xbe\x8d\xe7\xa5\x9e\xe5\xae\x89\xe9\x8e\xae\xe5\xa2\xb3\xe5\xa2\x93\xe7\xb6\x93', 'TITLE': '\xe5\xa4\xaa\xe4\xb8\x8a\xe5\x8f\xac\xe8\xab\xb8\xe9\xbe\x8d\xe7\xa5\x9e\xe5\xae\x89\xe9\x8e\xae\xe5\xa2\xb3\xe5\xa2\x93\xe7\xb6\x93--', 'ID': 'KR5b0047', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe5\xa4\xaa\xe4\xb8\x8a\xe8\x80\x81\xe5\x90\x9b\xe8\xaa\xaa\xe6\xb6\x88\xe7\x81\xbd\xe7\xb6\x93', 'TITLE': '\xe5\xa4\xaa\xe4\xb8\x8a\xe8\x80\x81\xe5\x90\x9b\xe8\xaa\xaa\xe6\xb6\x88\xe7\x81\xbd\xe7\xb6\x93-\xe5\x94\x90-', 'ID': 'KR5c0012', 'DYNASTY': '\xe5\x94\x90'}, {'TPUR': '\xe6\xb4\x9e\xe7\x9c\x9f\xe8\xa5\xbf\xe7\x8e\x8b\xe6\xaf\x8d\xe5\xaf\xb6\xe7\xa5\x9e\xe8\xb5\xb7\xe5\xb1\x85\xe7\xb6\x93', 'TITLE': '\xe6\xb4\x9e\xe7\x9c\x9f\xe8\xa5\xbf\xe7\x8e\x8b\xe6\xaf\x8d\xe5\xaf\xb6\xe7\xa5\x9e\xe8\xb5\xb7\xe5\xb1\x85\xe7\xb6\x93-\xe5\x94\x90-', 'ID': 'KR5g0128', 'DYNASTY': '\xe5\x94\x90'}, {'TPUR': '\xe4\xb8\x8a\xe6\xb8\x85\xe9\x87\x91\xe7\x9c\x9f\xe7\x8e\x89\xe5\x85\x89\xe5\x85\xab\xe6\x99\xaf\xe9\xa3\x9b\xe7\xb6\x93', 'TITLE': '\xe4\xb8\x8a\xe6\xb8\x85\xe9\x87\x91\xe7\x9c\x9f\xe7\x8e\x89\xe5\x85\x89\xe5\x85\xab\xe6\x99\xaf\xe9\xa3\x9b\xe7\xb6\x93-\xe5\x85\xad\xe6\x9c\x9d-', 'ID': 'KR5g0187', 'DYNASTY': '\xe5\x85\xad\xe6\x9c\x9d'}, {'TPUR': '\xe9\x81\x93\xe5\xbe\xb7\xe7\x9c\x9f\xe7\xb6\x93\xe9\x9b\x86\xe8\xa8\xbb\xe9\x9b\x9c\xe8\xaa\xaa', 'RESP': '\xe5\xbd\xad\xe8\x80\x9c', 'TITLE': '\xe9\x81\x93\xe5\xbe\xb7\xe7\x9c\x9f\xe7\xb6\x93\xe9\x9b\x86\xe8\xa8\xbb\xe9\x9b\x9c\xe8\xaa\xaa--\xe5\xbd\xad\xe8\x80\x9c', 'ID': 'KR5c0097', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe7\x8e\x89\xe7\xb1\x99\xe7\x94\x9f\xe7\xa5\x9e\xe8\xb3\x87\xe5\xba\xa6\xe9\x96\x8b\xe6\x94\xb6\xe5\x84\x80', 'TITLE': '\xe7\x8e\x89\xe7\xb1\x99\xe7\x94\x9f\xe7\xa5\x9e\xe8\xb3\x87\xe5\xba\xa6\xe9\x96\x8b\xe6\x94\xb6\xe5\x84\x80-\xe6\x98\x8e-', 'ID': 'KR5b0200', 'DYNASTY': '\xe6\x98\x8e'}, {'TPUR': '\xe9\x82\x84\xe4\xb8\xb9\xe5\xbe\xa9\xe5\x91\xbd\xe7\xaf\x87', 'RESP': '\xe8\x96\x9b\xe9\x81\x93\xe5\x85\x89', 'TITLE': '\xe9\x82\x84\xe4\xb8\xb9\xe5\xbe\xa9\xe5\x91\xbd\xe7\xaf\x87--\xe8\x96\x9b\xe9\x81\x93\xe5\x85\x89', 'ID': 'KR5d0111', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {}, {'TPUR': '\xe5\xa4\xaa\xe4\xb8\x8a\xe9\x80\x9a\xe9\x9d\x88\xe5\x85\xab\xe5\x8f\xb2\xe8\x81\x96\xe6\x96\x87\xe7\x9c\x9f\xe5\xbd\xa2\xe5\x9c\x96', 'TITLE': '\xe5\xa4\xaa\xe4\xb8\x8a\xe9\x80\x9a\xe9\x9d\x88\xe5\x85\xab\xe5\x8f\xb2\xe8\x81\x96\xe6\x96\x87\xe7\x9c\x9f\xe5\xbd\xa2\xe5\x9c\x96--', 'ID': 'KR5c0163', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe5\x94\x90\xe5\xb5\xa9\xe9\xab\x98\xe5\xb1\xb1\xe5\x95\x9f\xe6\xaf\x8d\xe5\xbb\x9f\xe7\xa2\x91\xe9\x8a\x98', 'RESP': '\xe5\xb4\x94\xe8\x9e\x8d', 'TITLE': '\xe5\x94\x90\xe5\xb5\xa9\xe9\xab\x98\xe5\xb1\xb1\xe5\x95\x9f\xe6\xaf\x8d\xe5\xbb\x9f\xe7\xa2\x91\xe9\x8a\x98--\xe5\xb4\x94\xe8\x9e\x8d', 'ID': 'KR5c0371', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe5\x8c\x97\xe5\xb8\x9d\xe4\xb8\x83\xe5\x85\x83\xe7\xb4\xab\xe5\xba\xad\xe5\xbb\xb6\xe7\x94\x9f\xe7\xa5\x95\xe8\xa8\xa3', 'TITLE': '\xe5\x8c\x97\xe5\xb8\x9d\xe4\xb8\x83\xe5\x85\x83\xe7\xb4\xab\xe5\xba\xad\xe5\xbb\xb6\xe7\x94\x9f\xe7\xa5\x95\xe8\xa8\xa3-\xe4\xba\x94\xe4\xbb\xa3-', 'ID': 'KR5g0074', 'DYNASTY': '\xe4\xba\x94\xe4\xbb\xa3'}, {'TPUR': '\xe4\xbf\xae\xe7\x9c\x9f\xe5\x8d\x81\xe6\x9b\xb8\xe6\x82\x9f\xe7\x9c\x9f\xe7\xaf\x87', 'RESP': '\xe5\xbc\xb5\xe4\xbc\xaf\xe7\xab\xaf', 'TITLE': '\xe4\xbf\xae\xe7\x9c\x9f\xe5\x8d\x81\xe6\x9b\xb8\xe6\x82\x9f\xe7\x9c\x9f\xe7\xaf\x87--\xe5\xbc\xb5\xe4\xbc\xaf\xe7\xab\xaf', 'ID': 'KR5a0268', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe9\x81\x93\xe9\x96\x80\xe5\xae\x9a\xe5\x88\xb6', 'RESP': '\xe5\x91\x82\xe5\x85\x83\xe7\xb4\xa0', 'TITLE': '\xe9\x81\x93\xe9\x96\x80\xe5\xae\x9a\xe5\x88\xb6--\xe5\x91\x82\xe5\x85\x83\xe7\xb4\xa0', 'ID': 'KR5g0033', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe5\xa4\xa9\xe7\x9a\x87\xe5\xa4\xaa\xe4\xb8\x80\xe7\xa5\x9e\xe5\xbe\x8b\xe9\x81\xbf\xe7\xa9\xa2\xe7\xb6\x93', 'TITLE': '\xe5\xa4\xa9\xe7\x9a\x87\xe5\xa4\xaa\xe4\xb8\x80\xe7\xa5\x9e\xe5\xbe\x8b\xe9\x81\xbf\xe7\xa9\xa2\xe7\xb6\x93--', 'ID': 'KR5g0077', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe5\xa4\xaa\xe4\xb8\x80\xe6\x95\x91\xe8\x8b\xa6\xe8\xad\xb7\xe8\xba\xab\xe5\xa6\x99\xe7\xb6\x93', 'TITLE': '\xe5\xa4\xaa\xe4\xb8\x80\xe6\x95\x91\xe8\x8b\xa6\xe8\xad\xb7\xe8\xba\xab\xe5\xa6\x99\xe7\xb6\x93-\xe5\x94\x90-', 'ID': 'KR5b0035', 'DYNASTY': '\xe5\x94\x90'}, {'TPUR': '\xe7\xa8\x9a\xe5\xb7\x9d\xe7\x9c\x9f\xe4\xba\xba\xe6\xa0\xa1\xe8\xad\x89\xe8\xa1\x93', 'TITLE': '\xe7\xa8\x9a\xe5\xb7\x9d\xe7\x9c\x9f\xe4\xba\xba\xe6\xa0\xa1\xe8\xad\x89\xe8\xa1\x93-\xe5\xae\x8b-', 'ID': 'KR5c0300', 'DYNASTY': '\xe5\xae\x8b'}, {'TPUR': '\xe5\xa4\xa7\xe6\xb4\x9e\xe7\x8e\x89\xe7\xb6\x93', 'RESP': '\xe9\xbe\x94\xe5\xbe\xb7\xe5\x90\x8c', 'TITLE': '\xe5\xa4\xa7\xe6\xb4\x9e\xe7\x8e\x89\xe7\xb6\x93-\xe6\x98\x8e\xe5\x88\x9d\xe6\x9c\x9f-\xe9\xbe\x94\xe5\xbe\xb7\xe5\x90\x8c', 'ID': 'KR5a0007', 'DYNASTY': '\xe6\x98\x8e\xe5\x88\x9d\xe6\x9c\x9f'}, {'TPUR': '\xe5\x8d\x97\xe8\x8f\xaf\xe9\x82\x88', 'TITLE': '\xe5\x8d\x97\xe8\x8f\xaf\xe9\x82\x88-\xe5\xae\x8b-', 'ID': 'KR5c0133', 'DYNASTY': '\xe5\xae\x8b'}, {'TPUR': '\xe5\x94\x90\xe5\xa4\xaa\xe5\x8f\xa4\xe5\xa6\x99\xe6\x87\x89\xe5\xad\xab\xe7\x9c\x9f\xe4\xba\xba\xe7\xa6\x8f\xe5\xa3\xbd\xe8\xab\x96', 'RESP': '\xe5\xad\xab\xe6\x80\x9d\xe9\x82\x88', 'TITLE': '\xe5\x94\x90\xe5\xa4\xaa\xe5\x8f\xa4\xe5\xa6\x99\xe6\x87\x89\xe5\xad\xab\xe7\x9c\x9f\xe4\xba\xba\xe7\xa6\x8f\xe5\xa3\xbd\xe8\xab\x96--\xe5\xad\xab\xe6\x80\x9d\xe9\x82\x88', 'ID': 'KR5g0235', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe9\xbb\x83\xe7\xb1\  C-c C-cxe5\x90\x9b\xe6\xb4\x9e\xe6\x88\xbf\xe4\xb8\x8a\xe7\xb6\x93', 'TITLE': '\xe4\xb8\x8a\xe6\xb8\x85\xe7\xb4\xab\xe7\xb2\xbe\xe5\x90\x9b\xe7\x9a\x87\xe5\x88\x9d\xe7\xb4\xab\xe9\x9d\x88\xe9\x81\x93\xe5\x90\x9b\xe6\xb4\x9e\xe6\x88\xbf\xe4\xb8\x8a\xe7\xb6\x93-\xe5\x85\xad\xe6\x9c\x9d-', 'ID': 'KR5b0089', 'DYNASTY': '\xe5\x85\xad\xe6\x9c\x9d'}, {'TPUR': '\xe9\xbb\x83\xe5\xb8\x9d\xe9\x99\xb0\xe7\xac\xa6\xe7\xb6\x93\xe8\xa8\xbb', 'RESP': '\xe5\x8a\x89\xe8\x99\x95\xe7\x8e\x84', 'TITLE': '\xe9\xbb\x83\xe5\xb8\x9d\xe9\x99\xb0\xe7\xac\xa6\xe7\xb6\x93\xe8\xa8\xbb--\xe5\x8a\x89\xe8\x99\x95\xe7\x8e\x84', 'ID': 'KR5a0123', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe5\xa4\xaa\xe4\xb8\x8a\xe6\xb4\x9e\xe7\x8e\x84\xe9\x9d\x88\xe5\xaf\xb6\xe9\xa3\x9b\xe8\xa1\x8c\xe4\xb8\x89\xe7\x95\x8c\xe9\x80\x9a\xe5\xbe\xae\xe5\x85\xa7\xe6\x80\x9d\xe5\xa6\x99\xe7\xb6\x93', 'TITLE': '\xe5\xa4\xaa\xe4\xb8\x8a\xe6\xb4\x9e\xe7\x8e\x84\xe9\x9d\x88\xe5\xaf\xb6\xe9\xa3\x9b\xe8\xa1\x8c\xe4\xb8\x89\xe7\x95\x8c\xe9\x80\x9a\xe5\xbe\xae\xe5\x85\x  C-c C-c>>>   C-c C-c
KeyboardInterrupt
>>>   C-c C-c
KeyboardInterrupt
>>>   C-c C-c
KeyboardInterrupt
>>>   C-c C-c
KeyboardInterrupt
>>>   C-c C-c
KeyboardInterrupt
>>> cat = [r.hgetall("%s%s" %( zbmeta, k.split(':')[-1][0:8])) for k in r.keys(zbmeta+coll+"*")]
>>> cat.sort(key=lambda t : t['ID'])
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 1, in <lambda>
KeyError: 'ID'
>>> for c in cat:
...   print c if not (c.has_key("ID"))
  File "<stdin>", line 2
    print c if not (c.has_key("ID"))
                                   ^
SyntaxError: invalid syntax
>>> 
>>> for c in cat:
...   if not (c.has_key("ID")):
...     print c 
... 
{}
{}
{}
{}
>>> cat = [(k, r.hgetall("%s%s" %( zbmeta, k.split(':')[-1][0:8]))) for k in r.keys(zbmeta+coll+"*")]
>>> for c in cat:
...   if not (c[1].has_key("ID")):
...     print c 
... 
('kr:meta:DZ1032.28', {})
('kr:meta:DZ1032.27', {})
('kr:meta:DZ1032.105', {})
('kr:meta:DZ1032.56', {})
>>> url="https://raw.githubusercontent.com/cwittern/KR-Workspace/cwittern/Settings/kanripo.cfg"
>>> import requests
>>> r = requests.get(url)
>>> dir(r)
['__attrs__', '__bool__', '__class__', '__delattr__', '__dict__', '__doc__', '__format__', '__getattribute__', '__getstate__', '__hash__', '__init__', '__iter__', '__module__', '__new__', '__nonzero__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__setstate__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_content', '_content_consumed', 'apparent_encoding', 'close', 'connection', 'content', 'cookies', 'elapsed', 'encoding', 'headers', 'history', 'iter_content', 'iter_lines', 'json', 'links', 'ok', 'raise_for_status', 'raw', 'reason', 'request', 'status_code', 'text', 'url']
>>> r.status_code
200
>>> l = u"　　　　　　　　　　　　&KR2138;　凡&KR2138;之属皆从&KR2138;¶"
>>> import re
>>> gaiji = re.compile(r"(&[^;]+;)")
>>> gaiji.sub("X", l)
u'\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000X\u3000\u51e1X\u4e4b\u5c5e\u7686\u4eceX\xb6'
>>> imgbase = "https://raw.githubusercontent.com/kanripo/KR-Gaiji/master/images/%s.png"
>>> imgbase = "<img src='https://raw.githubusercontent.com/kanripo/KR-Gaiji/master/images/%s.png'/>"
>>> gaiji.sub(imgbase % (\1), l)
  File "<stdin>", line 1
    gaiji.sub(imgbase % (\1), l)
                               ^
SyntaxError: unexpected character after line continuation character
>>> gaiji.sub(imgbase % (\\1), l)
  File "<stdin>", line 1
    gaiji.sub(imgbase % (\\1), l)
                                ^
SyntaxError: unexpected character after line continuation character
>>> gaiji.sub(imgbase % ($1), l)
  File "<stdin>", line 1
    gaiji.sub(imgbase % ($1), l)
                         ^
SyntaxError: invalid syntax
>>> gaiji.sub(lambda x : imgbase % (x.group(1)), l)
u"\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000<img src='https://raw.githubusercontent.com/kanripo/KR-Gaiji/master/images/&KR2138;.png'/>\u3000\u51e1<img src='https://raw.githubusercontent.com/kanripo/KR-Gaiji/master/images/&KR2138;.png'/>\u4e4b\u5c5e\u7686\u4ece<img src='https://raw.githubusercontent.com/kanripo/KR-Gaiji/master/images/&KR2138;.png'/>\xb6"
>>> ws.get_branches()
<github.PaginatedList.PaginatedList instance at 0x10a3dc830>
>>> l=[a.name for a in ws.get_branches()]
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/Users/chris/src/PyGithub/github/PaginatedList.py", line 48, in __iter__
    newElements = self._grow()
  File "/Users/chris/src/PyGithub/github/PaginatedList.py", line 60, in _grow
    newElements = self._fetchNextPage()
  File "/Users/chris/src/PyGithub/github/PaginatedList.py", line 158, in _fetchNextPage
    parameters=self.__nextParams
  File "/Users/chris/src/PyGithub/github/Requester.py", line 171, in requestJsonAndCheck
    return self.__check(*self.requestJson(verb, url, parameters, headers, input, cnx))
  File "/Users/chris/src/PyGithub/github/Requester.py", line 179, in __check
    raise self.__createException(status, responseHeaders, output)
github.GithubException.BadCredentialsException: 401 {u'documentation_url': u'https://developer.github.com/v3', u'message': u'Bad credentials'}
>>> token=u"c08903f8991849a6820564ba86940d12adcce9ba"
>>> g=Github(token)
u=g.get_user()
r=u.get_repos()
ws=u.create_fork(g.get_repo("kanripo/KR-Workspace"))
>>> >>> >>> 
>>> >>> 
>>> l=[a.name for a in ws.get_branches()]
>>> l
[u'cwittern', u'master']
>>> id="KR5a0008"
>>> rp=g.get_repo(id)
>>> rp
<github.Repository.Repository object at 0x10a170a10>
>>> branches=[a.name for a in rp.get_branches() if not a.name in ['_data', 'master']]
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/Users/chris/src/PyGithub/github/PaginatedList.py", line 48, in __iter__
    newElements = self._grow()
  File "/Users/chris/src/PyGithub/github/PaginatedList.py", line 60, in _grow
    newElements = self._fetchNextPage()
  File "/Users/chris/src/PyGithub/github/PaginatedList.py", line 158, in _fetchNextPage
    parameters=self.__nextParams
  File "/Users/chris/src/PyGithub/github/Requester.py", line 171, in requestJsonAndCheck
    return self.__check(*self.requestJson(verb, url, parameters, headers, input, cnx))
  File "/Users/chris/src/PyGithub/github/Requester.py", line 179, in __check
    raise self.__createException(status, responseHeaders, output)
github.GithubException.UnknownObjectException: 404 {u'documentation_url': u'https://developer.github.com/v3', u'message': u'Not Found'}
>>> dir(rp)
['CHECK_AFTER_INIT_FLAG', '_CompletableGithubObject__complete', '_CompletableGithubObject__completed', '_GithubObject__makeSimpleAttribute', '_GithubObject__makeSimpleListAttribute', '_GithubObject__makeTransformedAttribute', '_Repository__create_pull', '_Repository__create_pull_1', '_Repository__create_pull_2', '__class__', '__delattr__', '__dict__', '__doc__', '__eq__', '__format__', '__getattribute__', '__hash__', '__init__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_archive_url', '_assignees_url', '_blobs_url', '_branches_url', '_clone_url', '_collaborators_url', '_comments_url', '_commits_url', '_compare_url', '_completeIfNeeded', '_completeIfNotSet', '_contents_url', '_contributors_url', '_created_at', '_default_branch', '_description', '_downloads_url', '_events_url', '_fork', '_forks', '_forks_count', '_forks_url', '_full_name', '_git_commits_url', '_git_refs_url', '_git_tags_url', '_git_url', '_has_downloads', '_has_issues', '_has_wiki', '_headers', '_homepage', '_hooks_url', '_html_url', '_hub', '_id', '_identity', '_initAttributes', '_issue_comment_url', '_issue_events_url', '_issues_url', '_keys_url', '_labels_url', '_language', '_languages_url', '_makeBoolAttribute', '_makeClassAttribute', '_makeDatetimeAttribute', '_makeDictAttribute', '_makeDictOfStringsToClassesAttribute', '_makeIntAttribute', '_makeListOfClassesAttribute', '_makeListOfIntsAttribute', '_makeListOfListOfStringsAttribute', '_makeListOfStringsAttribute', '_makeStringAttribute', '_makeTimestampAttribute', '_master_branch', '_merges_url', '_milestones_url', '_mirror_url', '_name', '_network_count', '_notifications_url', '_open_issues', '_open_issues_count', '_organization', '_owner', '_parent', '_parentUrl', '_permissions', '_private', '_pulls_url', '_pushed_at', '_rawData', '_requester', '_size', '_source', '_ssh_url', '_stargazers_count', '_stargazers_url', '_statuses_url', '_storeAndUseAttributes', '_subscribers_url', '_subscription_url', '_svn_url', '_tags_url', '_teams_url', '_trees_url', '_updated_at', '_url', '_useAttributes', '_watchers', '_watchers_count', 'add_to_collaborators', 'archive_url', 'assignees_url', 'blobs_url', 'branches_url', 'clone_url', 'collaborators_url', 'comments_url', 'commits_url', 'compare', 'compare_url', 'contents_url', 'contributors_url', 'create_content', 'create_git_blob', 'create_git_commit', 'create_git_ref', 'create_git_release', 'create_git_tag', 'create_git_tag_and_release', 'create_git_tree', 'create_hook', 'create_issue', 'create_key', 'create_label', 'create_milestone', 'create_pull', 'created_at', 'default_branch', 'delete', 'description', 'downloads_url', 'edit', 'etag', 'events_url', 'fork', 'forks', 'forks_count', 'forks_url', 'full_name', 'get_archive_link', 'get_assignees', 'get_branch', 'get_branches', 'get_collaborators', 'get_comment', 'get_comments', 'get_commit', 'get_commits', 'get_contents', 'get_contributors', 'get_dir_contents', 'get_download', 'get_downloads', 'get_events', 'get_file_contents', 'get_forks', 'get_git_blob', 'get_git_commit', 'get_git_ref', 'get_git_refs', 'get_git_tag', 'get_git_tree', 'get_hook', 'get_hooks', 'get_issue', 'get_issues', 'get_issues_comments', 'get_issues_event', 'get_issues_events', 'get_key', 'get_keys', 'get_label', 'get_labels', 'get_languages', 'get_milestone', 'get_milestones', 'get_network_events', 'get_pull', 'get_pulls', 'get_pulls_comments', 'get_pulls_review_comments', 'get_readme', 'get_release', 'get_releases', 'get_stargazers', 'get_stats_code_frequency', 'get_stats_commit_activity', 'get_stats_contributors', 'get_stats_participation', 'get_stats_punch_card', 'get_subscribers', 'get_tags', 'get_teams', 'get_watchers', 'git_commits_url', 'git_refs_url', 'git_tags_url', 'git_url', 'has_downloads', 'has_in_assignees', 'has_in_collaborators', 'has_issues', 'has_wiki', 'homepage', 'hooks_url', 'html_url', 'id', 'issue_comment_url', 'issue_events_url', 'issues_url', 'keys_url', 'labels_url', 'language', 'languages_url', 'last_modified', 'legacy_search_issues', 'master_branch', 'merge', 'merges_url', 'milestones_url', 'mirror_url', 'name', 'network_count', 'notifications_url', 'open_issues', 'open_issues_count', 'organization', 'owner', 'parent', 'permissions', 'private', 'pulls_url', 'pushed_at', 'raw_data', 'raw_headers', 'remove_from_collaborators', 'setCheckAfterInitFlag', 'size', 'source', 'ssh_url', 'stargazers_count', 'stargazers_url', 'statuses_url', 'subscribe_to_hub', 'subscribers_url', 'subscription_url', 'svn_url', 'tags_url', 'teams_url', 'trees_url', 'unsubscribe_from_hub', 'update', 'update_content', 'updated_at', 'url', 'watchers', 'watchers_count']
>>> rp.url
'/repos/KR5a0008'
>>> branches=[a.name for a in rp.get_branches() if not a.name in ['_data', 'master']]
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/Users/chris/src/PyGithub/github/PaginatedList.py", line 48, in __iter__
    newElements = self._grow()
  File "/Users/chris/src/PyGithub/github/PaginatedList.py", line 60, in _grow
    newElements = self._fetchNextPage()
  File "/Users/chris/src/PyGithub/github/PaginatedList.py", line 158, in _fetchNextPage
    parameters=self.__nextParams
  File "/Users/chris/src/PyGithub/github/Requester.py", line 171, in requestJsonAndCheck
    return self.__check(*self.requestJson(verb, url, parameters, headers, input, cnx))
  File "/Users/chris/src/PyGithub/github/Requester.py", line 179, in __check
    raise self.__createException(status, responseHeaders, output)
github.GithubException.UnknownObjectException: 404 {u'documentation_url': u'https://developer.github.com/v3', u'message': u'Not Found'}
>>> rp.get_branches()
<github.PaginatedList.PaginatedList instance at 0x10a389ea8>
>>> x=[a for a in rp.get_branches()]
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/Users/chris/src/PyGithub/github/PaginatedList.py", line 48, in __iter__
    newElements = self._grow()
  File "/Users/chris/src/PyGithub/github/PaginatedList.py", line 60, in _grow
    newElements = self._fetchNextPage()
  File "/Users/chris/src/PyGithub/github/PaginatedList.py", line 158, in _fetchNextPage
    parameters=self.__nextParams
  File "/Users/chris/src/PyGithub/github/Requester.py", line 171, in requestJsonAndCheck
    return self.__check(*self.requestJson(verb, url, parameters, headers, input, cnx))
  File "/Users/chris/src/PyGithub/github/Requester.py", line 179, in __check
    raise self.__createException(status, responseHeaders, output)
github.GithubException.UnknownObjectException: 404 {u'documentation_url': u'https://developer.github.com/v3', u'message': u'Not Found'}
>>> rp=g.get_repo(id)
>>> dirs
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'dirs' is not defined
>>> rp.get_branches()
<github.PaginatedList.PaginatedList instance at 0x10a389fc8>
>>> ws=u.create_fork(g.get_repo("kanripo/KR-Workspace"))
>>> x=[a for a in ws.get_branches()]
>>> rp.get_repo("cwittern/" + id)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'Repository' object has no attribute 'get_repo'
>>> rp=g.get_repo("cwittern/" + id)
>>> x=[a for a in rp.get_branches()]
>>> x
[<github.Branch.Branch object at 0x10bb3aa10>, <github.Branch.Branch object at 0x109a07990>, <github.Branch.Branch object at 0x10a3a9350>, <github.Branch.Branch object at 0x10a3a9310>]
>>> x=[a.name for a in rp.get_branches()]
>>> x
[u'HFL', u'ZTDZ', u'_data', u'master']
>>> import redis
>>> myhost = 'localhost'
>>> pool = redis.ConnectionPool(host=myhost, port=6379, db=5)
>>> r = redis.Redis(connection_pool=pool)
>>> cat = [r.hgetall(a) for a in r.keys("kr:meta*") if len(a.split(":")[-1]) < 8]
>>> len(cat)
1926
>>> cat = [r.hgetall(a) for a in r.keys("kr:meta*") if a.split(":")[-1].startswith('T')]
>>> len(cat)
2454
>>> for a in cat:
...   if not a.has_key('ID'):
...     print a['TITLE']
... 
>>> cat[0:10]
[{'TPUR': '\xe7\xb6\xad\xe6\x91\xa9\xe7\xb6\x93\xe7\xbe\xa9\xe8\xa8\x98\xe5\x8d\xb7\xe7\xac\xac\xe5\x9b\x9b', 'TITLE': '\xe7\xb6\xad\xe6\x91\xa9\xe7\xb6\x93\xe7\xbe\xa9\xe8\xa8\x98\xe5\x8d\xb7\xe7\xac\xac\xe5\x9b\x9b--', 'ID': 'KR6i0088', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe9\x98\xbf\xe6\xaf\x98\xe6\x9b\x87\xe5\x85\xab\xe7\x8a\x8d\xe5\xba\xa6\xe8\xab\x96', 'RESP': '\xe8\xbf\xa6\xe6\xa0\xb4\xe5\xbb\xb6\xe5\xad\x90', 'TITLE': '\xe9\x98\xbf\xe6\xaf\x98\xe6\x9b\x87\xe5\x85\xab\xe7\x8a\x8d\xe5\xba\xa6\xe8\xab\x96-\xe7\xac\xa6\xe7\xa7\xa6-\xe8\xbf\xa6\xe6\xa0\xb4\xe5\xbb\xb6\xe5\xad\x90', 'ID': 'KR6l0008', 'DYNASTY': '\xe7\xac\xa6\xe7\xa7\xa6'}, {'TPUR': '\xe4\xbd\x9b\xe8\xaa\xaa\xe6\xb5\xb4\xe5\x83\x8f\xe5\x8a\x9f\xe5\xbe\xb7\xe7\xb6\x93', 'RESP': '\xe5\xaf\xb6\xe6\x80\x9d\xe6\x83\x9f', 'TITLE': '\xe4\xbd\x9b\xe8\xaa\xaa\xe6\xb5\xb4\xe5\x83\x8f\xe5\x8a\x9f\xe5\xbe\xb7\xe7\xb6\x93-\xe5\x94\x90-\xe5\xaf\xb6\xe6\x80\x9d\xe6\x83\x9f', 'ID': 'KR6i0387', 'DYNASTY': '\xe5\x94\x90'}, {'TPUR': '\xe8\x8f\xa9\xe6\x8f\x90\xe5\xa0\xb4\xe8\x8e\x8a\xe5\x9a\xb4\xe9\x99\x80\xe7\xbe\x85\xe5\xb0\xbc\xe7\xb6\x93', 'RESP': '\xe4\xb8\x8d\xe7\xa9\xba', 'TITLE': '\xe8\x8f\xa9\xe6\x8f\x90\xe5\xa0\xb4\xe8\x8e\x8a\xe5\x9a\xb4\xe9\x99\x80\xe7\xbe\x85\xe5\xb0\xbc\xe7\xb6\x93-\xe5\x94\x90-\xe4\xb8\x8d\xe7\xa9\xba', 'ID': 'KR6j0201', 'DYNASTY': '\xe5\x94\x90'}, {'TPUR': '\xe6\x96\xb0\xe6\xad\xb2\xe7\xb6\x93', 'RESP': '\xe7\xab\xba\xe6\x9b\x87\xe7\x84\xa1\xe8\x98\xad', 'TITLE': '\xe6\x96\xb0\xe6\xad\xb2\xe7\xb6\x93-\xe6\x9d\xb1\xe6\x99\x89-\xe7\xab\xba\xe6\x9b\x87\xe7\x84\xa1\xe8\x98\xad', 'ID': 'KR6a0062', 'DYNASTY': '\xe6\x9d\xb1\xe6\x99\x89'}, {'TPUR': '\xe8\xa7\x80\xe6\x89\x80\xe7\xb7\xa3\xe7\xb7\xa3\xe8\xab\x96', 'RESP': '\xe9\x99\xb3\xe9\x82\xa3\xe8\x8f\xa9\xe8\x96\xa9', 'TITLE': '\xe8\xa7\x80\xe6\x89\x80\xe7\xb7\xa3\xe7\xb7\xa3\xe8\xab\x96-\xe5\x94\x90-\xe9\x99\xb3\xe9\x82\xa3\xe8\x8f\xa9\xe8\x96\xa9', 'ID': 'KR6n0112', 'DYNASTY': '\xe5\x94\x90'}, {'TPUR': '\xe7\xb7\xa3\xe6\x9c\xac\xe8\x87\xb4\xe7\xb6\x93', 'RESP': '\xe5\xa4\xb1\xe8\xad\xaf', 'TITLE': '\xe7\xb7\xa3\xe6\x9c\xac\xe8\x87\xb4\xe7\xb6\x93--\xe5\xa4\xb1\xe8\xad\xaf', 'ID': 'KR6a0037', 'DYNASTY': '(\xe4\xb8\x8d\xe8\xa9\xb3)'}, {'TPUR': '\xe9\x98\xbf\xe8\x82\xb2\xe7\x8e\x8b\xe7\xb6\x93', 'RESP': '\xe5\x83\xa7\xe4\xbc\xbd\xe5\xa9\x86\xe7\xbe\x85', 'TITLE': '\xe9\x98\xbf\xe8\x82\xb2\xe7\x8e\x8b\xe7\xb6\x93-\xe6\xa2\x81-\xe5\x83\xa7\xe4\xbc\xbd\xe5\xa9\x86\xe7\xbe\x85', 'ID': 'KR6r0032', 'DYNASTY': '\xe6\xa2\x81'}, {'RESP': '\xe5\x96\x84\xe7\x84\xa1\xe7\x95\x8f', 'TITLE': '\xe4\xbd\x9b\xe9\xa0\x82\xe5\xb0\x8a\xe5\x8b\x9d\xe5\xbf\x83\xe7\xa0\xb4\xe5\x9c\xb0\xe7\x8d\x84\xe8\xbd\x89\xe6\xa5\xad\xe9\x9a\x9c\xe5\x87\xba\xe4\xb8\x89\xe7\x95\x8c\xe7\xa5\x95\xe5\xaf\x86\xe4\xb8\x89\xe8\xba\xab\xe4\xbd\x9b\xe6\x9e\x9c\xe4\xb8\x89\xe7\xa8\xae\xe6\x82\x89\xe5\x9c\xb0\xe7\x9c\x9f\xe8\xa8\x80\xe5\x84\x80\xe8\xbb\x8c-\xe5\x94\x90-\xe5\x96\x84\xe7\x84\xa1\xe7\x95\x8f', 'TPUR': '\xe4\xbd\x9b\xe9\xa0\x82\xe5\xb0\x8a\xe5\x8b\x9d\xe5\xbf\x83\xe7\xa0\xb4\xe5\x9c\xb0\xe7\x8d\x84\xe8\xbd\x89\xe6\xa5\xad\xe9\x9a\x9c\xe5\x87\xba\xe4\xb8\x89\xe7\x95\x8c\xe7\xa5\x95\xe5\xaf\x86\xe4\xb8\x89\xe8\xba\xab\xe4\xbd\x9b\xe6\x9e\x9c\xe4\xb8\x89\xe7\xa8\xae\xe6\x82\x89\xe5\x9c\xb0\xe7\x9c\x9f\xe8\xa8\x80\xe5\x84\x80\xe8\xbb\x8c', 'ID': 'KR6j0077', 'DYNASTY': '\xe5\x94\x90'}, {'TPUR': '\xe4\xbd\x9b\xe8\xaa\xaa\xe8\xb1\xa1\xe9\xa0\xad\xe7\xb2\xbe\xe8\x88\x8d\xe7\xb6\x93', 'RESP': '\xe6\xaf\x98\xe5\xb0\xbc\xe5\xa4\x9a\xe6\xb5\x81\xe6\x94\xaf', 'TITLE': '\xe4\xbd\x9b\xe8\xaa\xaa\xe8\xb1\xa1\xe9\xa0\xad\xe7\xb2\xbe\xe8\x88\x8d\xe7\xb6\x93-\xe9\x9a\x8b-\xe6\xaf\x98\xe5\xb0\xbc\xe5\xa4\x9a\xe6\xb5\x81\xe6\x94\xaf', 'ID': 'KR6i0067', 'DYNASTY': '\xe9\x9a\x8b'}]
>>> cat = [r.hgetall(a) for a in r.keys("kr:meta*") if a.split(":")[-1].startswith('T')]
>>> for a in cat:
...   if not a.has_key('ID'):
...     print a['TITLE'], a['EXTRAID']
... 
>>> coll = "T"
>>> zbmeta = "kr:meta:"
>>> cat = [r.hgetall("%s%s" %( zbmeta, k.split(':')[-1][0:8])) for k in r.keys(zbmeta+coll+"*")]
>>> for a in cat:
...   if not a.has_key('ID'):
...     print a['TITLE'], a['EXTRAID']
... 
Traceback (most recent call last):
  File "<stdin>", line 3, in <module>
KeyError: 'TITLE'
>>> for a in cat:
...   if not a.has_key('ID'):
...     print a
... 
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
{}
>>> cat = [(k, r.hgetall("%s%s" %( zbmeta, k.split(':')[-1][0:8]))) for k in r.keys(zbmeta+coll+"*")]
>>> len(cat)
3030
>>> for a in cat:
...   if not a[1].has_key('ID'):
...     print a
... 
('kr:meta:T22n1422a', {})
('kr:meta:T77n2428E', {})
('kr:meta:T75n2395A', {})
('kr:meta:T19n0944A', {})
('kr:meta:T18n0895b', {})
('kr:meta:T17n0794a', {})
('kr:meta:T19n1005B', {})
('kr:meta:T55n2174B', {})
('kr:meta:T20n1062A', {})
('kr:meta:T20n1103b', {})
('kr:meta:T17n0747a', {})
('kr:meta:T47n1998B', {})
('kr:meta:T48n2012B', {})
('kr:meta:T50n2047b', {})
('kr:meta:T18n0864B', {})
('kr:meta:T03n0181a', {})
('kr:meta:T14n0447a', {})
('kr:meta:T85n2830A', {})
('kr:meta:T18n0894a', {})
('kr:meta:T21n1378a', {})
('kr:meta:T83n2656B', {})
('kr:meta:T18n0894b', {})
('kr:meta:T20n1177B', {})
('kr:meta:T20n1168B', {})
('kr:meta:T18n0895a', {})
('kr:meta:T21n1255b', {})
('kr:meta:T20n1072A', {})
('kr:meta:T77n2428F', {})
('kr:meta:T83n2655A', {})
('kr:meta:T20n1113A', {})
('kr:meta:T17n0751a', {})
('kr:meta:T22n1422b', {})
('kr:meta:T48n2012A', {})
('kr:meta:T18n0864A', {})
('kr:meta:T24n1483b', {})
('kr:meta:T20n1045b', {})
('kr:meta:T47n1994B', {})
('kr:meta:T20n1108A', {})
('kr:meta:T77n2428B', {})
('kr:meta:T02n0132b', {})
('kr:meta:T14n0540a', {})
('kr:meta:T14n0555b', {})
('kr:meta:T20n1185A', {})
('kr:meta:T47n1987A', {})
('kr:meta:T18n0852b', {})
('kr:meta:T20n1138b', {})
('kr:meta:T54n2141B', {})
('kr:meta:T21n1264a', {})
('kr:meta:T85n2764B', {})
('kr:meta:T20n1159B', {})
('kr:meta:T19n0974F', {})
('kr:meta:T21n1264b', {})
('kr:meta:T56n2190B', {})
('kr:meta:T83n2653A', {})
('kr:meta:T48n2002A', {})
('kr:meta:T21n1255a', {})
('kr:meta:T19n1028B', {})
('kr:meta:T47n1994A', {})
('kr:meta:T19n1022A', {})
('kr:meta:T18n0893a', {})
('kr:meta:T77n2428G', {})
('kr:meta:T45n1887A', {})
('kr:meta:T57n2203B', {})
('kr:meta:T20n1156B', {})
('kr:meta:T21n1252b', {})
('kr:meta:T21n1369b', {})
('kr:meta:T54n2141A', {})
('kr:meta:T83n2658A', {})
('kr:meta:T02n0128a', {})
('kr:meta:T14n0446b', {})
('kr:meta:T70n2295A', {})
('kr:meta:T70n2307A', {})
('kr:meta:T45n1879a', {})
('kr:meta:T21n1378b', {})
('kr:meta:T48n2019B', {})
('kr:meta:T21n1369a', {})
('kr:meta:T48n2019A', {})
('kr:meta:T17n0797a', {})
('kr:meta:T03n0175c', {})
('kr:meta:T14n0492b', {})
('kr:meta:T20n1045a', {})
('kr:meta:T08n0236b', {})
('kr:meta:T20n1113B', {})
('kr:meta:T24n1483a', {})
('kr:meta:T21n1222b', {})
('kr:meta:T14n0540b', {})
('kr:meta:T19n0974C', {})
('kr:meta:T19n0983B', {})
('kr:meta:T19n0974B', {})
('kr:meta:T77n2428D', {})
('kr:meta:T55n2168A', {})
('kr:meta:T56n2190D', {})
('kr:meta:T21n1222a', {})
('kr:meta:T47n1986B', {})
('kr:meta:T58n2212B', {})
('kr:meta:T32n1670A', {})
('kr:meta:T20n1072B', {})
('kr:meta:T19n1005A', {})
('kr:meta:T08n0236a', {})
('kr:meta:T20n1108B', {})
('kr:meta:T47n1998A', {})
('kr:meta:T77n2428C', {})
('kr:meta:T20n1168A', {})
('kr:meta:T14n0447b', {})
('kr:meta:T19n0974D', {})
('kr:meta:T03n0175a', {})
('kr:meta:T56n2199B', {})
('kr:meta:T56n2190C', {})
('kr:meta:T57n2208C', {})
('kr:meta:T19n0924B', {})
('kr:meta:T02n0128b', {})
('kr:meta:T02n0132a', {})
('kr:meta:T11n0315b', {})
('kr:meta:T83n2654A', {})
('kr:meta:T55n2174A', {})
('kr:meta:T24n1467b', {})
('kr:meta:T75n2406A', {})
('kr:meta:T03n0175b', {})
('kr:meta:T57n2206B', {})
('kr:meta:T85n2764A', {})
('kr:meta:T20n1120B', {})
('kr:meta:T56n2190G', {})
('kr:meta:T18n0852a', {})
('kr:meta:T77n2428A', {})
('kr:meta:T19n0974A', {})
('kr:meta:T17n0794b', {})
('kr:meta:T83n2658B', {})
('kr:meta:T02n0142a', {})
('kr:meta:T17n0747b', {})
('kr:meta:T02n0150A', {})
('kr:meta:T45n1887B', {})
('kr:meta:T19n1027b', {})
('kr:meta:T14n0446a', {})
('kr:meta:T19n0954B', {})
('kr:meta:T25n1510b', {})
('kr:meta:T19n0954A', {})
('kr:meta:T17n0797b', {})
('kr:meta:T74n2358A', {})
('kr:meta:T57n2206A', {})
('kr:meta:T47n1969B', {})
('kr:meta:T14n0492a', {})
('kr:meta:T20n1177A', {})
('kr:meta:T03n0181b', {})
('kr:meta:T50n2047a', {})
('kr:meta:T19n1022B', {})
('kr:meta:T20n1062B', {})
('kr:meta:T56n2190F', {})
('kr:meta:T14n0555a', {})
('kr:meta:T57n2203A', {})
('kr:meta:T74n2358B', {})
('kr:meta:T57n2208B', {})
('kr:meta:T19n0983A', {})
('kr:meta:T14n0448a', {})
('kr:meta:T56n2190E', {})
('kr:meta:T20n1159A', {})
('kr:meta:T20n1156A', {})
('kr:meta:T25n1510a', {})
('kr:meta:T20n1134B', {})
('kr:meta:T83n2656A', {})
('kr:meta:T85n2830B', {})
('kr:meta:T03n0182a', {})
('kr:meta:T70n2307B', {})
('kr:meta:T17n0751b', {})
('kr:meta:T19n0924C', {})
('kr:meta:T45n1879b', {})
('kr:meta:T83n2655B', {})
('kr:meta:T55n2168B', {})
('kr:meta:T75n2395B', {})
('kr:meta:T47n1969A', {})
('kr:meta:T20n1185B', {})
('kr:meta:T57n2208A', {})
('kr:meta:T19n0944B', {})
('kr:meta:T19n1028A', {})
('kr:meta:T56n2199A', {})
('kr:meta:T83n2654B', {})
('kr:meta:T47n1987B', {})
('kr:meta:T70n2295B', {})
('kr:meta:T85n2917B', {})
('kr:meta:T14n0448b', {})
('kr:meta:T20n1120A', {})
('kr:meta:T54n2133B', {})
('kr:meta:T11n0315a', {})
('kr:meta:T75n2406B', {})
('kr:meta:T20n1057b', {})
('kr:meta:T47n1986A', {})
('kr:meta:T32n1670B', {})
('kr:meta:T21n1252a', {})
('kr:meta:T58n2212A', {})
('kr:meta:T20n1138a', {})
('kr:meta:T73n2345B', {})
('kr:meta:T48n2002B', {})
('kr:meta:T20n1057a', {})
('kr:meta:T19n1027a', {})
('kr:meta:T20n1134A', {})
('kr:meta:T19n0924A', {})
('kr:meta:T02n0150B', {})
('kr:meta:T61n2236A', {})
('kr:meta:T02n0142b', {})
('kr:meta:T56n2190A', {})
('kr:meta:T85n2917A', {})
('kr:meta:T73n2345A', {})
('kr:meta:T03n0182b', {})
('kr:meta:T20n1103a', {})
('kr:meta:T54n2133A', {})
('kr:meta:T83n2653B', {})
('kr:meta:T24n1467a', {})
('kr:meta:T19n0974E', {})
>>> cat = [(k, r.hgetall("%s%s" %( zbmeta, k.split(':')[-1]))) for k in r.keys(zbmeta+coll+"*")]
>>> len(cat)
3030
>>> for a in cat:
...   if not a[1].has_key('ID'):
...     print a
... 
>>> k=r.keys("*")
>>> len(k)
27996
>>> from collections import defaultdict
>>> d=defaultdict(int)
>>> dir(d)
['__class__', '__cmp__', '__contains__', '__copy__', '__delattr__', '__delitem__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getitem__', '__gt__', '__hash__', '__init__', '__iter__', '__le__', '__len__', '__lt__', '__missing__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__setitem__', '__sizeof__', '__str__', '__subclasshook__', 'clear', 'copy', 'default_factory', 'fromkeys', 'get', 'has_key', 'items', 'iteritems', 'iterkeys', 'itervalues', 'keys', 'pop', 'popitem', 'setdefault', 'update', 'values', 'viewitems', 'viewkeys', 'viewvalues']
>>> d.update("a")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
ValueError: dictionary update sequence element #0 has length 1; 2 is required
>>> d
defaultdict(<type 'int'>, {})
>>> d.setdefault(0)
>>> d
defaultdict(<type 'int'>, {0: None})
>>> d.update("a")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
ValueError: dictionary update sequence element #0 has length 1; 2 is required
>>> import codecs
>>> of=codecs.open("/tmp/ot.txt", "w", "utf-8")
>>> for a in k:
...   of.write("%s\n", a.decode("utf-8"))
... 
Traceback (most recent call last):
  File "<stdin>", line 2, in <module>
TypeError: write() takes exactly 2 arguments (3 given)
>>> for a in k:
...   of.write("%s\n" % a.decode("utf-8"))
... 
>>> of.close()
>>> dir(r)
['RESPONSE_CALLBACKS', '__class__', '__contains__', '__delattr__', '__delitem__', '__dict__', '__doc__', '__format__', '__getattribute__', '__getitem__', '__hash__', '__init__', '__module__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__setitem__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_use_lua_lock', '_zaggregate', 'append', 'bgrewriteaof', 'bgsave', 'bitcount', 'bitop', 'bitpos', 'blpop', 'brpop', 'brpoplpush', 'client_getname', 'client_kill', 'client_list', 'client_setname', 'config_get', 'config_resetstat', 'config_rewrite', 'config_set', 'connection_pool', 'dbsize', 'debug_object', 'decr', 'delete', 'dump', 'echo', 'eval', 'evalsha', 'execute_command', 'exists', 'expire', 'expireat', 'flushall', 'flushdb', 'from_url', 'get', 'getbit', 'getrange', 'getset', 'hdel', 'hexists', 'hget', 'hgetall', 'hincrby', 'hincrbyfloat', 'hkeys', 'hlen', 'hmget', 'hmset', 'hscan', 'hscan_iter', 'hset', 'hsetnx', 'hvals', 'incr', 'incrby', 'incrbyfloat', 'info', 'keys', 'lastsave', 'lindex', 'linsert', 'llen', 'lock', 'lpop', 'lpush', 'lpushx', 'lrange', 'lrem', 'lset', 'ltrim', 'mget', 'move', 'mset', 'msetnx', 'object', 'parse_response', 'persist', 'pexpire', 'pexpireat', 'pfadd', 'pfcount', 'pfmerge', 'ping', 'pipeline', 'psetex', 'pttl', 'publish', 'pubsub', 'randomkey', 'register_script', 'rename', 'renamenx', 'response_callbacks', 'restore', 'rpop', 'rpoplpush', 'rpush', 'rpushx', 'sadd', 'save', 'scan', 'scan_iter', 'scard', 'script_exists', 'script_flush', 'script_kill', 'script_load', 'sdiff', 'sdiffstore', 'sentinel', 'sentinel_get_master_addr_by_name', 'sentinel_master', 'sentinel_masters', 'sentinel_monitor', 'sentinel_remove', 'sentinel_sentinels', 'sentinel_set', 'sentinel_slaves', 'set', 'set_response_callback', 'setbit', 'setex', 'setnx', 'setrange', 'shutdown', 'sinter', 'sinterstore', 'sismember', 'slaveof', 'slowlog_get', 'slowlog_len', 'slowlog_reset', 'smembers', 'smove', 'sort', 'spop', 'srandmember', 'srem', 'sscan', 'sscan_iter', 'strlen', 'substr', 'sunion', 'sunionstore', 'time', 'transaction', 'ttl', 'type', 'unwatch', 'watch', 'zadd', 'zcard', 'zcount', 'zincrby', 'zinterstore', 'zlexcount', 'zrange', 'zrangebylex', 'zrangebyscore', 'zrank', 'zrem', 'zremrangebylex', 'zremrangebyrank', 'zremrangebyscore', 'zrevrange', 'zrevrangebyscore', 'zrevrank', 'zscan', 'zscan_iter', 'zscore', 'zunionstore']
>>> cat = [(k, r.hgetall("%s%s" %( zbmeta, k.split(':')[-1]))) for k in r.keys(zbmeta+coll+"*")]
>>> keys=r.keys("*")
>>> for k in keys:
...     if not k.startswith("kr"):
...        print k
... 
七經
>>> dx=[a for a in keys if not a.startswith("kr")]
>>> dx
['\xe4\xb8\x83\xe7\xb6\x93']
>>> x2 = r.lrange('\xe4\xb8\x83\xe7\xb6\x93', 0, -1)
>>> len(x2)
36
>>> x2
['\xe7\xb6\x93\xe4\xb8\x89\xe9\x99\xb0\xe8\xbe\x9f\xe4\xb8\xbb\xe5\x85\xad\xe4\xb8\x89\xef\xbc\x89\xe3\x80\x80,\xe4\xb8\x80\xe4\xb8\x8a\xe4\xb9\x8b\tKR1a0071_001:28a:4:11:38\tn', '\xe7\xb6\x93\xe4\xb8\x89\xe9\x99\xbd\xe8\xbe\x9f\xe4\xb8\xbb\xe4\xb9\x9d\xe4\xb8\x89\xef\xbc\x89\xe3\x80\x80,\xe5\x85\xab\xe4\xb8\x8a\xe4\xb9\x8b\tKR1a0071_001:25a:8:11:35\tn', '\xe7\xb6\x93\xe4\xb8\x8a\xe7\xaf\x87\xe4\xb7\x8c\xe5\x90\x8c\xe4\xba\xba\xe6\x9c\xb1\xe5\xad\x90\xe7\x99\xbc,\xe8\xbc\xaf\xe5\x82\xb3\xe7\xac\xac\tKR1a0046_011:1a:3:5:0', '\xe7\xb6\x93\xe4\xb8\x8b\xe7\xac\xac\xe8\xb2\xa7\xe4\xb8\x8d\xe8\x87\xaa\xe5\xad\x98\xe8\x96\x84\xe9\x81\x8a,\xe7\x86\x99\xe5\xb7\xb1\xe9\x85\x89\tKR1a0135_000:1a:7:16:5', '\xe7\xb6\x93\xe4\xb8\x8b\xe7\xaf\x87\xe4\xb7\xa8\xe6\x90\x8d\xe6\x9e\x97\xe9\xbb\x84\xe4\xb8\xad\xe6\x9b\xb0,\xe5\x82\xb3\xe7\xac\xac\xe5\x8d\x81\tKR1a0046_021:1a:3:6:0', '\xe7\xb6\x93\xe4\xb8\x8b\xe7\xaf\x87\xe4\xb7\xbc\xe4\xb8\xad\xe5\xad\x9a\xe8\xb1\x9a\xe9\xad\x9a\xe5\x90\x89,\xe7\xac\xac\xe4\xba\x8c\xe5\x8d\x81\tKR1a0046_031:1a:3:7:0', '\xe7\xb6\x93\xe4\xb9\x8b\xe4\xb8\xad\xe4\xb8\x8d\xe8\xa6\x8b\xe5\x85\xb6\xe8\xbe\xad\xe5\xad\x90\xe6\x97\xa2,\xe4\xbf\xae\xe4\xb9\x8b\xe4\xb9\x8e\tKR6q0222_001:0443c:33:14:35', '\xe7\xb6\x93\xe4\xb9\x8b\xe5\xa6\x99\xe5\x90\x9e\xe6\x9c\x8d\xe7\x9c\x9f\xe6\x96\x87\xe4\xb8\x8d\xe8\xb8\xb0,\xe4\xb9\x8b\xe7\x9c\x9f\xe4\xbf\xae\tKR5a0220_013:005b:9:12:12', '\xe7\xb6\x93\xe4\xb9\x8b\xe9\x81\x93\xe6\xb0\xa3\xe7\xaf\x80\xe6\x87\x89\xe6\x95\xb8\xe4\xbd\x86\xe4\xb8\x8d,\xe5\xbe\x97\xe4\xbf\xae\xe8\xa1\x8c\tKR5a0185_005:001b:4:9:2', '\xe7\xb6\x93\xe4\xb9\x9f\xe5\x9b\x9b\xe5\xb8\xab\xe9\x9b\x96\xe8\x81\x96\xe6\xaf\x94\xe4\xb9\x8b\xe6\x96\xbc,\xe4\xb8\x8d\xe8\xa6\x8b\xe6\x96\xbc\tKR6q0222_001:0444a:2:12:35', '\xe7\xb6\x93\xe4\xb9\xbe\xe5\x8d\x81\xe4\xb8\x80\xe6\x9c\x88\xe5\xb0\x8f\xe5\x90\x9b\xe8\xb3\xa2\xe8\x87\xa3,\xe4\xb8\xad\xe9\x8c\xb2\xe6\x96\xbc\tKR1a0164_001:14b:5:5:20', '\xe7\xb6\x93\xe5\x85\xab\xe7\xb4\x94\xe4\xb8\xad\xe7\x94\xb7\xe4\xb8\xbb\xe4\xb9\x9d\xe4\xba\x94\xef\xbc\x89,\xe4\xb8\x8a\xe4\xb9\x8b\xe5\x8d\x81\tKR1a0071_001:73a:7:12:95\tn', '\xe7\xb6\x93\xe5\x85\xab\xe7\xb7\xaf\xe5\x8f\x8a\xe8\xab\xb8\xe5\x86\x85\xe8\xa1\x8c\xe4\xb8\xa6\xe7\x94\xa8,\xe8\xa1\x8c\xe9\x9d\x88\xe5\xaf\xb3\tKR5a0220_008:012b:7:14:39', '\xe7\xb6\x93\xe5\x85\xab\xe7\xb7\xaf\xe9\x99\x8d\xe7\x9c\x9e\xe5\x8f\xac\xe9\x9d\x88\xe4\xb8\xa6\xe9\xa0\x88,\xe4\xbb\x99\xe4\xbf\xae\xe7\x9c\x9e\tKR5a0220_035:013a:8:13:40', '\xe7\xb6\x93\xe5\x8a\x9f\xe8\xb6\xb3\xe6\x96\xb9\xe6\x82\x89\xe4\xb8\x8a\xe7\x8e\x84\xe8\x87\xb3\xe7\x90\x86,\xe5\xb1\x80\xe5\xa4\xa7\xe5\xae\x9a\tKR5a0220_028:005b:2:14:8', '\xe7\xb6\x93\xe5\x90\x8c\xe5\x8d\xb7\xe8\xbe\xb0\xe5\x85\xab\xe7\x8e\x89\xe6\xb8\x85\xe5\x85\x83\xe5\xa7\x8b,\xe3\x80\x80\xe3\x80\x80\xe3\x80\x80\tKR5a0042_001:001a:1:1:0', '\xe7\xb6\x93\xe5\xa4\xa7\xe7\xbe\xa9\xe5\x82\x99\xe8\xa7\xa3\xe8\x80\x8c\xe4\xb8\x8d\xe5\xa5\xbd\xe7\xab\x8b,\xe5\x8f\xa4\xe8\xa8\x93\xe8\xaa\xa5\tKR5a0308_025:018b:6:5:27', '\xe7\xb6\x93\xe5\xa4\xa9\xe5\xb8\x9d\xe9\x8f\x8c\xe4\xb8\xb9\xe5\xa5\x87\xe5\xad\x9a\xe8\xb3\x87\xe5\x89\x9b,\xe7\x90\x9a\xe7\xb4\xa0\xe7\x82\x81\tKR5a0001_014:012a:1:3:25\tCK-KZ YP-C', '\xe7\xb6\x93\xe5\xa4\xa9\xe5\xb8\x9d\xe9\x8f\x8c\xe4\xb8\xb9\xe7\xab\x92\xe5\xad\x9a\xe8\xb3\x87\xe5\x89\x9b,\xe7\x90\x9a\xe7\xb4\xa0\xe7\x82\x81\tKR5a0001_014:012a:1:3:35', '\xe7\xb6\x93\xe6\x89\x80\xe4\xb8\x8d\xe9\x80\xae\xe6\x88\x92\xe6\x83\xa1\xe9\x98\xb2\xe6\x82\xa3\xe4\xb9\x8b,\xe5\xbe\xb7\xe4\xb9\x8b\xe5\xbb\xa3\tKR6q0222_001:0452c:29:7:141', '\xe7\xb6\x93\xe6\x8c\x89\xe8\x80\x8c\xe8\xa1\x8c\xe7\xa6\xae\xe4\xb8\x8d\xe5\xbe\x97\xe8\xbc\x95\xe5\x90\x88,\xe8\xb7\xaf\xe7\x95\xb6\xe5\xb0\x8b\tKR5a0185_005:001b:9:4:2', '\xe7\xb6\x93\xe6\x96\xbc\xe6\xb2\xb3\xe6\xb4\x9b\xe4\xb9\x8b\xe7\x9b\xae\xe6\x96\xbc\xe7\x90\x86\xe7\x84\xa1,\xe9\xa8\x90\xe6\x9c\x89\xe6\x96\xbc\tKR1a0164_001:14b:5:18:20\tn', '\xe7\xb6\x93\xe6\x99\x82\xe4\xb8\x8d\xe5\x87\xba\xe9\x96\x80\xe5\x87\xba\xe9\x96\x80\xe6\x95\xa3\xe5\xb9\xbd,\xe8\x81\xb2\xe6\xb6\x93\xe6\xb6\x93\tKR6q0212_014:0635a:9:1:92', '\xe7\xb6\x93\xe6\x9a\xa8\xe5\x94\x90\xe5\x88\x86\xe4\xb8\x89\xe7\xa6\xae\xe4\xb8\x89\xf0\xab\x9d\x8a\xe5\x89\x87,\xe7\xb6\x93\xe6\x88\x96\xe8\xa8\x80\tKR1a0007_000:1a:4:2:0', '\xe7\xb6\x93\xe6\x9b\xb0\xe4\xb8\x80\xe9\x9a\x82\xe4\xb8\x80\xe9\x99\xbd\xe4\xb9\x8b\xe8\xac\x82\xe9\x81\x93,\xe7\xac\xac\xe4\xba\x8c\xe5\x8d\x81\tKR5a0160_001:018a:5:7:68', '\xe7\xb6\x93\xe6\x9b\xb0\xe5\xa4\xa9\xe5\x9c\xb0\xe5\xbe\xa9\xe5\x90\x8d\xe6\x9b\xb0\xe5\x90\x9f\xe8\xab\xb8,\xe5\x87\x86\xe6\xad\xa4\xe7\xac\xac\tKR5a0296_000:009b:10:2:2', '\xe7\xb6\x93\xe6\x9b\xb0\xe9\x99\xbd\xe7\x84\xa1\xe6\x89\x80\xe4\xbe\x9d\xe9\x99\xb0\xe7\x84\xa1\xe6\x89\x80,\xe8\xa8\x80\xe4\xb9\x8b\xe7\xac\xac\tKR5a0296_000:019b:1:2:4', '\xe7\xb6\x93\xe6\xb3\xa8\xef\xbc\x89\xe3\x80\x80\xe3\x80\x80,\xe6\x98\x93\xe5\x8d\xb7\xe7\xac\xac\tKR1a0006_007:11b:1:5:2\tn', '\xe7\xb6\x93\xe7\x99\xbe\xe6\xb0\x8f\xe4\xb9\x8b\xe5\x82\xb3\xe5\x93\x89\xe6\x98\x8e\xe9\x9d\x9e\xe5\xa0\xaf,\xe6\x85\xa7\xe8\xb1\x88\xe5\xbe\x92\tKR6q0218_007:0016c:18:17:7', '\xe7\xb6\x93\xe7\x99\xbe\xe6\xb0\x8f\xe4\xb9\x8b\xe5\x8d\x9a\xe5\x93\x89\xe6\x98\x8e\xe9\x9d\x9e\xe5\xa0\xaf,\xe6\x85\xa7\xe8\xb1\x88\xe5\xbe\x92\tKR6q0222_001:0446b:34:12:84', '\xe7\xb6\x93\xe7\xac\xac\xe4\xb8\x80\xe6\x96\xbc\xe6\xb2\xb3\xe6\xb4\x9b\xe7\xac\xac\xe4\xb9\x9d\xe4\xba\xa6,\xe5\x8d\xb7\xe9\xa1\x8c\xe6\x89\xb5\tKR1a0046_051:3b:7:16:1', '\xe7\xb6\x93\xe7\xac\xac\xe4\xb8\x80\xe6\xb2\xb3\xe6\xb4\x9b\xe7\xac\xac\xe4\xb9\x9d\xe9\xa6\x96\xe7\xa8\xb1,\xe4\xb8\x8a\xe5\x8d\xb7\xe9\xa1\x8c\tKR1a0070_004:5a:3:8:22', '\xe7\xb6\x93\xe7\xb7\xaf\xe4\xb8\x89\xe5\x8d\x81\xe5\x85\xad\xe7\xaf\x87\xe4\xb8\xa6\xe4\xba\x91\xe5\xad\x94,\xe6\x84\x8f\xe5\x8f\x88\xe6\x9c\x89\tKR1a0138_001:25a:2:34:206\tn', '\xe7\xb6\x93\xe7\xb7\xaf\xe7\x9a\x86\xe4\xbd\x9a\xe6\x96\xbc\xe5\x94\x90\xe5\xad\x98\xe8\x80\x85\xe7\x8d\xa8,\xe8\xab\x96\xe7\x9f\xa3\xe6\x8c\x89\tKR1a0163_000:3b:2:18:22', '\xe7\xb6\x93\xe8\x90\xac\xe4\xba\x8c\xe5\x8d\x83\xe4\xb8\x96\xe4\xb9\x8b\xe6\x9c\x88\xe8\xbe\xb0\xe4\xb9\x8b,\xe7\x99\xbe\xe5\x85\xab\xe5\x8d\x81\tKR1a0080_003:54a:7:20:11', '\xe7\xb6\x93\xe9\xbd\x8a\xe5\xa4\xa9\xe5\x9c\xb0\xe9\xa3\x9b\xe9\x9d\x88\xe7\x85\xa5\xe6\x99\xaf\xe6\x93\xb2,\xe6\x98\x8e\xe5\x85\xad\xe7\xb7\xaf\tKR5a0326_001:002a:8:9:4']
>>> r.llen('\xe4\xb8\x83\xe7\xb6\x93')
36
>>> key='\xe4\xb8\x83\xe7\xb6\x93'
>>> x2 = r.lrange('\xe4\xb8\x83\xe7\xb6\x93', 0, -1)
>>> from github import Github
>>> exit()
(venv)Sat Oct 10 18:53:19 [15131]
  chris@mbp3a-2:mdweb.chw3 (chw3) % exit
exit

Process shell finished
